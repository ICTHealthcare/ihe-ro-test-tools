Class RegisteredGeneralDoseViewerScenario
    Inherits Scenario

    'Constructor
    Public Sub New()
        ' Specify data sets to use.
        m_scenarioDatasetXmlFileName = "DataSets.xml"
        ReferenceDataSet.GetInstance().LoadNewDataSet(m_scenarioDatasetXmlFileName)

        ' Create actors.
        Dim archiveActor As ArchiveActor = New ArchiveActor()
        Dim registeredGeneralDoseViewerActor As RegisteredGeneralDoseViewerActor = New RegisteredGeneralDoseViewerActor()

        'Create dialog for selecting files
        Dim registeredGeneralDoseViewerDataset As New DCOMPRegisteredGeneralDoseViewerDataset()
        registeredGeneralDoseViewerDataset.ShowDialog()

        Dim imageIODType As IODType
        Dim dirInfo As IO.DirectoryInfo = New IO.DirectoryInfo(registeredGeneralDoseViewerDataset.tbSelectedImageSet.Text)
        Dim files As IO.FileInfo() = dirInfo.GetFiles("*.dcm")
        If files.Length > 0 Then
            Dim file As IO.FileInfo
            file = files(0)
            Dim tempImage As New DvtkHighLevelInterface.Dicom.Files.DicomFile
            Try
                tempImage.Read(file.FullName)

                If (tempImage.DataSet(Tags.SOPClassUID).Values(0).ToString() = SOPclass.CTImageSOPClassUID) Then
                    imageIODType = IODType.CTImage
                ElseIf (tempImage.DataSet(Tags.SOPClassUID).Values(0).ToString() = SOPclass.MRImageSOPClassUID) Then
                    imageIODType = IODType.MRImage
                ElseIf (tempImage.DataSet(Tags.SOPClassUID).Values(0).ToString() = SOPclass.PetImageSOPClassUID) Then
                    imageIODType = IODType.PETImage
                End If

            Catch ex As Exception
                Reporter.GetInstance.ReportWarningMessage(file.FullName + " cannot be read by DVTk")
            End Try
        End If


        ' Create transactions.
        Dim mmro_2_Transaction As MMRO_II_2_Transaction = New MMRO_II_2_Transaction(New String() {registeredGeneralDoseViewerDataset.tbSelectedSpatialReg.Text}) ' Spatial Registration Retrieval
        Dim mmro_4_Transaction As MMRO_4_Transaction = New MMRO_4_Transaction(New String() {registeredGeneralDoseViewerDataset.tbSelectedStructset.Text}) ' Registered Structure Set Retrieval.
        Dim rad_4_8_Transaction As RAD_4_8_Transaction = New RAD_4_8_Transaction(imageIODType, registeredGeneralDoseViewerDataset.tbSelectedImageSet.Text) ' Modality Images Stored (CT images).
        Dim ro_DC1_Transaction As RO_DC1_Transaction = New RO_DC1_Transaction(New String() {registeredGeneralDoseViewerDataset.tbSelectedDose.Text}) ' General Dose Retrieval.

        ' Send scenario step.
        Dim sendTestDataDialog As SendTestDataDialog = New SendTestDataDialog(registeredGeneralDoseViewerActor)
        sendTestDataDialog.ShowDialog()

        If (sendTestDataDialog.DialogResult = Windows.Forms.DialogResult.Yes) Then
            Dim sendScenarioStep As SendScenarioStep = New SendScenarioStep(archiveActor, registeredGeneralDoseViewerActor)
            sendScenarioStep.AddTransaction(rad_4_8_Transaction)
            sendScenarioStep.AddTransaction(ro_DC1_Transaction)
            sendScenarioStep.AddTransaction(mmro_2_Transaction)
            sendScenarioStep.AddTransaction(mmro_4_Transaction)
            m_scenarioSteps.Add(sendScenarioStep)

        End If

        ' Clean up scenario step
        If TestToolConfiguration.GetInstance.DoCleanUp = True Then
            m_scenarioSteps.Add(New CleanUpScenarioStep(TestToolConfiguration.GetInstance.GetSession.ResultsRootDirectory))
        End If

    End Sub

End Class
