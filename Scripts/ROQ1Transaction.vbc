#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Collections.Generic
#End If

Class ROQ1Transaction
    Inherits Transaction

    Private ROQ1IODType As IODType = Nothing
    Private isDifferenceCheck As Boolean = False

    'Constructor
    Public Sub New(isDifference As Boolean)

        MyBase.New("RO-Q1", "Create UPS for Quality Check ", IODType.UnifiedProcedureStepPush, False)
        ROQ1IODType = IODType.UnifiedProcedureStepPush
        isDifferenceCheck = isDifference
    End Sub

    'method which returns the related reference data messages belonging to this transaction
    Protected Overrides Function GetTransactionReferenceDataMessages() As System.Collections.ArrayList
        Dim datasetMessages As ArrayList = New ArrayList()
        Dim referenceData As ReferenceDataSet = ReferenceDataSet.GetInstance()

        'add the structure set message to the arraylist
        datasetMessages.Add(referenceData.GetUnifiedProcedureStepPush_NCREATE_REQ(isDifferenceCheck))

        'return the array with dataset(s)
        Return datasetMessages
    End Function

    ' This function returns all common rules that apply on a request of this transaction
    Public Function GetCommonTransactionRulesForRequest() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        '(0x00000003)  Affected SOP Class UID
        m_rules.Add(New IsRequiredRule(Tags.AffectedSOPClassUID, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.AffectedSOPClassUID, SOPclass.UnifiedProcedureStepPushSOPClassUID, ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00001001)  Affected SOP Instance UID        
        m_rules.Add(New IsRequiredRule(Tags.AffectedSOPInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))

        'If (isDifferenceCheck) Then
        '    m_rules.Add(New InterOperabilityRule(Tags.SOPInstanceUID, Tags.AffectedSOPInstanceUID, DataSetHandler.UPSCacheXMLFileName, "N-CREATE-RSP-Dif", ROQ1IODType, ErrorSeverity.RuleError))
        'Else
        '    m_rules.Add(New InterOperabilityRule(Tags.SOPInstanceUID, Tags.AffectedSOPInstanceUID, DataSetHandler.UPSCacheXMLFileName, "N-CREATE-RSP-Dose", ROQ1IODType, ErrorSeverity.RuleError))
        'End If

        '(0x00001008)  ActionTypeID
        'm_rules.Add(New IsRequiredRule(Tags.ActionTypeID, ROQ1IODType, ErrorSeverity.RuleError))
        'm_rules.Add(New ValueRule(Tags.ActionTypeID, "1", ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00080100)  ScheduledWorkitemCodeValue
        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodeValue, ROQ1IODType, ErrorSeverity.RuleError))

        If (isDifferenceCheck) Then
            m_rules.Add(New ValueRule(Tags.ScheduledWorkitemCodeValue, "121732", ROQ1IODType, ErrorSeverity.RuleError))
        Else
            m_rules.Add(New ValueRule(Tags.ScheduledWorkitemCodeValue, "121731", ROQ1IODType, ErrorSeverity.RuleError))
        End If

        '(0x00080102)  CodingSchemeDesignator
        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodingSchemeDesignator, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ScheduledWorkitemCodingSchemeDesignator, "DCM", ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00080104)  ScheduledWorkitemCodeMeaning
        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodeMeaning, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New HasValueRule(Tags.ScheduledWorkitemCodeMeaning, ROQ1IODType, ErrorSeverity.RuleError))


        '(0x00404041)  InputReadinessState
        m_rules.Add(New IsRequiredRule(Tags.InputReadinessState, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.InputReadinessState, "READY", ROQ1IODType, ErrorSeverity.RuleError))

        '(0x0040E020)  TypeOfInstances
        m_rules.Add(New IsRequiredRule(Tags.IisTypeOfInstances, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.IisTypeOfInstances, "DICOM", ROQ1IODType, ErrorSeverity.RuleError))

        '(0x0020000D)  StudyInstanceUID
        m_rules.Add(New IsRequiredRule(Tags.IisStudyInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New HasValueRule(Tags.IisStudyInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))

        '(0x0020000E)  SeriesInstanceUID
        m_rules.Add(New IsRequiredRule(Tags.IisRssSeriesInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New HasValueRule(Tags.IisRssSeriesInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00404021) Input Information Sequence, Reference SopClassUid
        m_rules.Add(New IsRequiredRule(Tags.InputInformationSequence, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New NCreateRspInputInformationSequenceRule(ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00404021) Input Information Sequence, Reference SopInstanceUid
        m_rules.Add(New IsRequiredRule(Tags.IisRssRssReferencedSOPInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New HasValueRule(Tags.IisRssRssReferencedSOPInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))

        m_rules.Add(New NotPresentRule(Tags.IisRssRssHL7InstanceIdentifier, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New NotPresentRule(Tags.IisRssRssReferencedFrameNumber, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New NotPresentRule(Tags.IisRssRssReferencedSegmentNumber, ROQ1IODType, ErrorSeverity.RuleError))

        '(0x0040E021) DICOMRetrievalSequence
        m_rules.Add(New IsRequiredRule(Tags.InputInformationSequenceDICOMRetrievalSequence1, ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00080054) retrieveAETitle
        m_rules.Add(New IsRequiredRule(Tags.retrieveAETitle1, ROQ1IODType, ErrorSeverity.RuleError))

        m_rules.Add(New NotPresentRule(Tags.IisMediaRetrievalSequence, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New NotPresentRule(Tags.IisWADORetrievalSequence, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New NotPresentRule(Tags.IisXDSRetrievalSequence, ROQ1IODType, ErrorSeverity.RuleError))

        '(0x0020000D) StudyInstanceUID
        m_rules.Add(New IsRequiredRule(Tags.StudyInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New HasValueRule(Tags.StudyInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))

        ' Patients Name wordt gecheckt door def file

        '(0x0020000D) PatientId
        m_rules.Add(New IsRequiredRule(Tags.PatientID, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New HasValueRule(Tags.PatientID, ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00741000) ProcedureStepState
        m_rules.Add(New IsRequiredRule(Tags.ProcedureStepState, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ProcedureStepState, "SCHEDULED", ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00741002) UPSProgressInformationSequence
        m_rules.Add(New EmptySequenceRule(Tags.UPSProgressInformationSequence, ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00741216) UPSPerformedProcedureSequence
        m_rules.Add(New EmptySequenceRule(Tags.UPSPerformedProcedureSequence, ROQ1IODType, ErrorSeverity.RuleError))
        Return m_rules

    End Function

    ' This function returns all common rules that apply on a response of this transaction
    Public Function GetCommonTransactionRulesForResponse() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        ' Some rules need the dicomMessage send in the request
        'Dim msg As DicomMessage = DirectCast(TransactionDataMessages(0), DicomMessage)

        ' ("0x00000002") Affected SOP Class UID
        m_rules.Add(New IsRequiredRule(Tags.AffectedSOPClassUID, ROQ1IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.AffectedSOPClassUID, SOPclass.UnifiedProcedureStepPushSOPClassUID, ROQ1IODType, ErrorSeverity.RuleError))

        ' (0x00001000) Affected SOP Instance UID
        m_rules.Add(New IsRequiredRule(Tags.AffectedSOPInstanceUID, ROQ1IODType, ErrorSeverity.RuleError))
        'm_rules.Add(New InterOperabilityRule(Tags.AffectedSOPInstanceUID, Tags.AffectedSOPInstanceUID, DataSetHandler.UPSCacheXMLFileName, "N-CREATE-REQ", ROQ1IODType, ErrorSeverity.RuleError))

        '(0x00000900)  Status
        m_rules.Add(New ValueRule(Tags.StatusCommandElement, "0", ROQ1IODType, ErrorSeverity.RuleError))

        If (isDifferenceCheck) Then

        Else

        End If
        Return m_rules

    End Function

End Class
