
' ------------------------------------------------------
' DVTk - The Healthcare Validation Toolkit (www.dvtk.org)
' Copyright © 2010 DVTk
' ------------------------------------------------------
' This file is part of DVTk.
'
' DVTk is free software; you can redistribute it and/or modify it under the terms of the GNU
' Lesser General Public License as published by the Free Software Foundation; either version 3.0
' of the License, or (at your option) any later version. 
' 
' DVTk is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
' the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser
' General Public License for more details. 
' 
' You should have received a copy of the GNU Lesser General Public License along with this
' library; if not, see <http://www.gnu.org/licenses/>
#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Collections.Generic
Imports System.Text
Imports System.Xml

Imports DvtkHighLevelInterface.Dicom.Other
#End If
''' <summary>
''' This class represents the Measured Value of a Content Item with value type NUM that is
''' present in a Structured Report Object.
''' </summary>
Public Class MeasuredValue
    '
    ' - Constants -
    '


    ''' <summary>
    ''' A description of the context of the measurementUnits field of this class.
    ''' </summary>
    Private Const measurementUnitsContext As String = "DICOM - Structured Reporting - Content Item - Measured Value - MeasurementUnits"



    '
    ' - Fields -
    '

    ''' <summary>
    ''' See property MeasurementUnits.
    ''' </summary>
    Private m_measurementUnits As ConceptCode = Nothing

    ''' <summary>
    ''' The single sequence item in the Measured Value Sequence that encodes this Measured
    ''' Value.
    ''' </summary>
    Private sequenceItem As SequenceItem = Nothing

    Private context As String = Nothing
    '
    ' - Constructors -
    '

    ''' <summary>
    ''' Hide default constructor.
    ''' </summary>
    ' Do nothing.
    Private Sub New()
    End Sub

    ''' <summary>
    ''' Constructor.
    ''' </summary>
    ''' <param name="sequenceItem">The single sequence item that encodes this Measured Value.</param>
    Public Sub New(sequenceItem As SequenceItem, context As String)
        Me.sequenceItem = sequenceItem
        Me.NumericValue = NumericValue
        Me.m_measurementUnits = ConceptCode.CreateConceptCode(sequenceItem, "0x004008EA", "")
        Me.context = context
    End Sub

    Friend Shared Function CreateMeasuredValue(attributeSet As AttributeSet, tag As [String], context As String) As MeasuredValue
        Dim measuredValue As MeasuredValue = Nothing

        Dim attribute As DvtkHighLevelInterface.Dicom.Other.Attribute = attributeSet(tag)

        If attribute.Exists Then
            If attribute.VR = DvtkData.Dimse.VR.SQ Then
                If attribute.ItemCount > 0 Then
                    measuredValue = New MeasuredValue(attribute.GetItem(1), context)
                End If
            End If
        End If

        Return (measuredValue)
    End Function

    '
    ' - Properties -
    '

    ''' <summary>
    ''' Gets the Measurement Units for this instance.
    ''' </summary>
    Public ReadOnly Property MeasurementUnits() As ConceptCode
        Get
            'Return Me.m_measurementUnits

            If (Not Me.sequenceItem.Exists("0x004008EA")) Then
                Me.sequenceItem.Set("0x004008EA", DvtkData.Dimse.VR.SQ)
                Dim sequenceItem As New SequenceItem
                Me.sequenceItem.Item("0x004008EA").AddItem(sequenceItem)

            End If

            Return ConceptCode.CreateConceptCode(sequenceItem, "0x004008EA", "")


            Return Me.m_measurementUnits
        End Get

    End Property

    ''' <summary>
    ''' Gets the Numeric Value for this instance.
    ''' </summary>
    Public Property NumericValue() As [String]
        Get
            Return (Convert.FirstAttributeValueToString(Me.sequenceItem, "0x0040A30A"))
        End Get

        Set(value As [String])
            Me.sequenceItem.Set("0x0040A30A", DvtkData.Dimse.VR.DS, value)

        End Set
    End Property



    '
    ' - Methods -
    '

    ''' <summary>
    ''' Method used by the library to serialize this instance to xml.
    ''' </summary>
    ''' <param name="xmlTextWriter">The xml text writer.</param>
    ''' <param name="serializationContext">The serialization context.</param>
    Friend Sub ToXml(xmlTextWriter As XmlTextWriter, serializationContext As SerializationContext)
        xmlTextWriter.WriteStartElement("numericValue")
        xmlTextWriter.WriteStartElement("value")
        xmlTextWriter.WriteString(NumericValue)
        xmlTextWriter.WriteEndElement()
        xmlTextWriter.WriteEndElement()

        If Me.m_measurementUnits IsNot Nothing Then
            xmlTextWriter.WriteStartElement("measurementUnits")
            Me.m_measurementUnits.ToXml(xmlTextWriter, serializationContext)
            xmlTextWriter.WriteEndElement()
        End If
    End Sub
End Class

