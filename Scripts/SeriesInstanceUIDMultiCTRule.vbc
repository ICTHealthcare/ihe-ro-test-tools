Class SeriesInstanceUIDMultiCTRule
    Inherits AttributeRule

    Public Sub New(ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Series Instance UID Multi CT Rule", "", iodType, severity)

    End Sub

    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)
        Dim message As String = ""
        Dim foundMatchingUID As Boolean = False

        If iodType = IODTypeRule Then

            If Not dicomMessage.DataSet.Exists(Tags.SeriesInstanceUID) Then
                message = "The attribute: '" + Tags.GetTagName(Tags.SeriesInstanceUID) + "' (" + Tags.SeriesInstanceUID + ") is not present."
            Else
                Dim receivedUID As String = dicomMessage.DataSet(Tags.SeriesInstanceUID).Values.Item(0)
                Dim refSeT As ReferenceDataSet = ReferenceDataSet.GetInstance()
                Dim nrOfImageSets As Integer = refSeT.GetImageSetCount()

                'Now we compare the received UID with all the SeriesInstanceUID's in the ReferenceTestDataset
                Try
                    If iodType = iodType.CTImage Then
                        Dim i As Integer = 1
                        message = "'" + Tags.GetTagName(Tags.SeriesInstanceUID) + "' (" + Tags.SeriesInstanceUID + ") of CT-Image has not been changed."

                        While i <= refSeT.GetImageSetCount And Not foundMatchingUID
                            Dim j As Integer = 1

                            While j <= refSeT.GetImageCount(i, iodType.CTImage) And Not foundMatchingUID
                                foundMatchingUID = CompareSeriesInstanceUID(dicomMessage.DataSet, refSeT.GetCTImage(i, j).DataSet)
                                j += 1
                            End While
                            i += 1
                        End While
                    End If

                    If Not foundMatchingUID Then
                        'foundmatching UIDs should still be false here. We have checked the complete dataset so we declare the rule Valid
                        message = "'" + Tags.GetTagName(Tags.SeriesInstanceUID) + "' (" + Tags.SeriesInstanceUID + ") of CT-Image has been changed correctly."
                        Me.SetValid(message)
                    End If

                Catch ex As System.Exception
                    'Me.ErrSeverity = ErrorSeverity.RuleError
                    Me.SetError("Was not able to read the datasets while checking that all 'SeriesInstanceUIDs' (" + Tags.SeriesInstanceUID + ") have changed.")
                End Try

                If Not Me.IsValid Then
                    Me.SetError(message)
                End If

                'Reporter, write to results, if there is anything to report
                Me.Report()
            End If
        End If
    End Sub

    'returns true when both instance uid's are equal
    Function CompareSeriesInstanceUID(ByVal first As DvtkHighLevelInterface.Dicom.Other.DataSet, ByVal second As DvtkHighLevelInterface.Dicom.Other.DataSet) As Boolean
        If first(Tags.SOPInstanceUID).Values.Item(0) = second(Tags.SOPInstanceUID).Values.Item(0) Then
            Return True
        Else
            Return False
        End If
    End Function

End Class
