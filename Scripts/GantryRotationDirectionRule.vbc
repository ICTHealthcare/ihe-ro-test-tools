Class GantryRotationDirectionRule
    Inherits AttributeRule

    Public Sub New(ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Gantry Rotation Direction Rule", "", iodType, severity)

    End Sub

    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)

        Dim beamSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim controlPointSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim gantryRotationDirectionAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing

        Dim seqItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing

        If iodType = Me.IODTypeRule Then
            Dim message As String = ""
            Dim done As Boolean = False
            Dim valid As Boolean = False

            If dicomMessage.DataSet.Exists(Tags.BeamSequence) = False Then
                message = "The attribute: '" + Tags.GetTagName(Tags.BeamSequence) + "' (" + Tags.BeamSequence + ") is not present."
                valid = False
                done = True
            End If

            If done = False Then
                beamSequenceAttribute = dicomMessage.DataSet(Tags.BeamSequence)
                Dim i As Integer
                For i = 1 To beamSequenceAttribute.ItemCount()
                    If done = False Then
                        seqItem = beamSequenceAttribute.GetItem(i)
                        If seqItem.Exists(Tags.ControlPointSequenceTagSequence) = False Then
                            message = "The attribute: '" + Tags.GetTagName(Tags.ControlPointSequenceTagSequence) + "' (" + Tags.ControlPointSequenceTagSequence + ") is not present."
                            valid = False
                            done = True
                        Else
                            controlPointSequenceAttribute = seqItem(Tags.ControlPointSequenceTagSequence)
                            If controlPointSequenceAttribute.ItemCount() = 2 Then
                                Dim j As Integer
                                For j = 1 To controlPointSequenceAttribute.ItemCount()
                                    If done = False Then
                                        seqItem = controlPointSequenceAttribute.GetItem(j)
                                        If j = 1 And done = False Then
                                            If seqItem.Exists(Tags.GantryRotationDirectionTagSequence) = False Then
                                                message = "The attribute: '" + Tags.GetTagName(Tags.GantryRotationDirectionTagSequence) + "' (" + Tags.GantryRotationDirectionTagSequence + ") is not present for the first control point."
                                                valid = False
                                                done = True
                                            Else
                                                gantryRotationDirectionAttribute = seqItem(Tags.GantryRotationDirectionTagSequence)
                                                If Not gantryRotationDirectionAttribute.Values(0).ToString() = "NONE" Then
                                                    message = "The attribute: '" + Tags.GetTagName(Tags.GantryRotationDirectionTagSequence) + "' (" + Tags.GantryRotationDirectionTagSequence + ") has value " + gantryRotationDirectionAttribute.Values(0).ToString() + " instead of NONE"
                                                    valid = False
                                                    done = True
                                                End If

                                                'All checks pass, so the rule is valid at this point
                                                If done = False Then
                                                    valid = True
                                                End If
                                            End If

                                        End If

                                        If j = 2 And done = False Then

                                            If seqItem.Exists(Tags.GantryRotationDirectionTagSequence) = True Then
                                                message = "The attribute: '" + Tags.GetTagName(Tags.GantryRotationDirectionTagSequence) + "' (" + Tags.GantryRotationDirectionTagSequence + ") should not be present for the second control point"
                                                valid = False
                                                done = True
                                            End If

                                            'All checks pass, so the rule is valid at this point
                                            If done = False Then
                                                valid = True
                                            End If
                                        End If
                                    End If
                                Next
                            Else
                                message = "The attribute: '" + Tags.GetTagName(Tags.ControlPointSequenceTagSequence) + "' (" + Tags.ControlPointSequenceTagSequence + ") should contains 2 sequence items, instead of " + controlPointSequenceAttribute.ItemCount().ToString() + " sequence items"
                                valid = False
                                done = True

                            End If
                        End If
                    End If
                Next
            End If

            If valid Then
                message = "The attribute: '" + Tags.GetTagName(Tags.GantryRotationDirectionTagSequence) + "' (" + Tags.GantryRotationDirectionTagSequence + ") values are correct"
                Me.SetValid(message)
            Else
                Me.SetError(message)
            End If

            'Reporter, write to results, if there is anything to report
            Me.Report()
        End If
    End Sub
End Class