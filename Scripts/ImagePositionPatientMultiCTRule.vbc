Class ImagePositionPatientMultiCTRule
    Inherits MessageCollectionRule


    Public Sub New(ByVal valueTag As String, ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Image Position Patient Multi CT Rule", iodType, severity)

    End Sub

    Private m_messageCollectionHelper As messageCollectionHelper


    Public Overrides Sub ApplyRule(ByRef dataSetCollection As DvtkHighLevelInterface.Dicom.Messages.DicomMessageCollection)
        m_messageCollectionHelper = New messageCollectionHelper(dataSetCollection)
        Dim firstCTImageDataSet As DvtkHighLevelInterface.Dicom.Other.DataSet = Nothing
        Dim secondCTImageDataSet As DvtkHighLevelInterface.Dicom.Other.DataSet = Nothing
        Dim message As String = ""

        If m_messageCollectionHelper.GetNumberOfSliceImages(IODType.CTImage) > 2 Then
            Dim imageCounter As Integer = 3 'begin with the third image
            Dim validZDistance As Boolean = True
            Dim previousZDistance As Double

            firstCTImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.CTImage, 1)
            secondCTImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.CTImage, 2)
            Dim zDistance = Math.Abs(Me.ConvertToDouble(firstCTImageDataSet(Tags.ImagePositionPatient).Values(2)) - Me.ConvertToDouble(secondCTImageDataSet(Tags.ImagePositionPatient).Values(2)))

            While validZDistance = True And imageCounter < m_messageCollectionHelper.GetNumberOfSliceImages(IODType.CTImage)
                Dim currentZDistance As Double
                firstCTImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.CTImage, imageCounter)
                secondCTImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.CTImage, imageCounter + 1)
                currentZDistance = Math.Abs(Me.ConvertToDouble(firstCTImageDataSet(Tags.ImagePositionPatient).Values(2)) - Me.ConvertToDouble(secondCTImageDataSet(Tags.ImagePositionPatient).Values(2)))

                If zDistance = currentZDistance Then
                    validZDistance = True
                Else
                    validZDistance = False
                    message = "CT-Images are not equidistanted"
                End If
                imageCounter = imageCounter + 1
            End While

            If validZDistance Then
                message = "CT-Images are equidistanted"
                Me.SetValid(message)
            Else
                Me.SetError(message)
            End If
        Else
            message = "Not enough CT-Images received to determine the equidistance"
        End If

        Me.Report()

        Return
    End Sub

End Class