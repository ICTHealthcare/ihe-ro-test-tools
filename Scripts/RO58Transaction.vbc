#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Collections.Generic
#End If

' Transaction RO-58 (Worklist Query for Treatment Delivery) class
Class RO58Transaction
    Inherits Transaction

    Private ro58IODType As IODType = Nothing

    'Constructor
    Public Sub New()

        MyBase.New("RO-58", "TDD Worklist Query for Treatmen Delivery", IODType.UnifiedProcedureStepPull, True)
        ro58IODType = IODType.UnifiedProcedureStepPull

    End Sub

    'method which returns the related reference data messages belonging to this transaction
    Protected Overrides Function GetTransactionReferenceDataMessages() As System.Collections.ArrayList
        Dim datasetMessages As ArrayList = New ArrayList()
        Dim referenceData As ReferenceDataSet = ReferenceDataSet.GetInstance()

        'add the structure set message to the arraylist
        datasetMessages.Add(referenceData.GetUnifiedProcedureStepPull_CFIND_REQ)

        'return the array with dataset(s)
        Return datasetMessages
    End Function

    ' This function returns all common rules that apply on a request of this transaction
    Public Function GetCommonTransactionRulesForRequest() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        '(0x00741000) R  Procedure Step State	
        m_rules.Add(New IsRequiredRule(Tags.ProcedureStepState, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ProcedureStepState, "SCHEDULED", ro58IODType, ErrorSeverity.RuleError))

        '(0x00404025) scheduled Station name Code Sequence may be empty (the RSP will contain the RSP already defined in the DataMessages
        m_rules.Add(New IsRequiredRule(Tags.ScheduledStationNameCodeSequence, ro58IODType, ErrorSeverity.RuleError))

        '(0x00404025[1]/0x00080100) O  Code Value for the Scheduled Station Name shall contain the string used to definitively match the Performing Device instance with its representation on the TMS. It is not necessarily human-readable.
        m_rules.Add(New IsRequiredRule(Tags.ScheduledStationCodeValue, ro58IODType, ErrorSeverity.RuleError))
        '(0x00404025[1]/0x00080102) O  Coding Scheme Designator for the Scheduled Station Name is a private coding scheme, and is not used explicitly in this profile.	 
        m_rules.Add(New OptionalRule(Tags.ScheduledStationCodingSchemeDesignator, ro58IODType, ErrorSeverity.RuleInfo))

        'Scheduled Procedure Step Start Date and Time R
        m_rules.Add(New IsRequiredRule(Tags.ScheduledProcedureStepStartDateandTime, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New DateTimeRule(Tags.ScheduledProcedureStepStartDateandTime, DateTime.MinValue, DateTime.MaxValue, ro58IODType, ErrorSeverity.RuleError))

        'Scheduled Procedure Step Start Date and Time R
        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodeSequence, ro58IODType, ErrorSeverity.RuleError))
        '>Code Value R
        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodeValue, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ScheduledWorkitemCodeValue, "121726", ro58IODType, ErrorSeverity.RuleError))
        '>Coding Scheme Designator R
        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodingSchemeDesignator, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ScheduledWorkitemCodingSchemeDesignator, "DCM", ro58IODType, ErrorSeverity.RuleError))

        '(0x00100010) Patient’s Name O
        m_rules.Add(New IsRequiredRule(Tags.PatientName, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New InterOperabilityRule(Tags.PatientName, Tags.PatientName, DataSetHandler.UPSMessagesXMLFileName, "C-FIND-RSP", True, ro58IODType, ErrorSeverity.RuleError))

        '(0x00100020) Patient ID O
        m_rules.Add(New IsRequiredRule(Tags.PatientID, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New InterOperabilityRule(Tags.PatientID, Tags.PatientID, DataSetHandler.UPSMessagesXMLFileName, "C-FIND-RSP", True, ro58IODType, ErrorSeverity.RuleError))

        'Scheduled Processing Parameters Sequence "-"
        'this is common part - IsRequired. more in GetTransactionRulesForRequest()
        'is not specified for Query Keys Matching, thus removed
        'm_rules.Add(New IsRequiredRule(Tags.ScheduledProcessingParametersTextValue, ro58IODType, ErrorSeverity.RuleError))

        Return m_rules

    End Function

    Public Function GetTransactionRulesForRequest(ByVal treatmentType As String) As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        'Scheduled Processing Parameters Sequence "-"
        'is not specified for Query Keys Matching, thus removed
        'Scheduled Processing Parameters Sequence >Text Value R+
        'If treatmentType = DataSetHandler.DicomTextValueTreatment Then
        '    m_rules.Add(New ValueRule(Tags.ScheduledProcessingParametersTextValue, DataSetHandler.DicomTextValueTreatment, ro58IODType, ErrorSeverity.RuleError))
        'ElseIf treatmentType = DataSetHandler.DicomTextValueContinuation Then
        '    m_rules.Add(New ValueRule(Tags.ScheduledProcessingParametersTextValue, DataSetHandler.DicomTextValueContinuation, ro58IODType, ErrorSeverity.RuleError))
        'Else
        '    'the text here is for information purposes - will be visible to the user as part of the error
        '    m_rules.Add(New ValueRule(Tags.ScheduledProcessingParametersTextValue, "''TREATMENT or CONTINUATION''", ro58IODType, ErrorSeverity.RuleError))
        'End If

        Return m_rules

    End Function

    ' This function returns all common rules that apply on a response of this transaction
    Public Function GetCommonTransactionRulesForResponse(ByVal beginDateTimeRange As DateTime, ByVal endDateTimeRange As DateTime, ByVal requestDataset As DvtkHighLevelInterface.Dicom.Other.DataSet) As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        '(0000,0002) Affected SOP Class UID
        m_rules.Add(New IsRequiredRule(Tags.AffectedSOPClassUID, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.AffectedSOPClassUID, SOPclass.UnifiedProcedureStepPullSOPClassUID, ro58IODType, ErrorSeverity.RuleError))

        '(0x00081016) R  SOP Class UID
        m_rules.Add(New IsRequiredRule(Tags.SOPClassUID, ro58IODType, ErrorSeverity.RuleError))


        '(0x00080018) R  SOP Instance UID
        m_rules.Add(New IsRequiredRule(Tags.SOPInstanceUID, ro58IODType, ErrorSeverity.RuleError))

        '(0x00741000) R  Unified Procedure Step State
        m_rules.Add(New IsRequiredRule(Tags.ProcedureStepState, ro58IODType, ErrorSeverity.RuleError))

        '(0x00741204) R  Procedure Step Label
        m_rules.Add(New IsRequiredRule(Tags.ProcedureStepLabel, ro58IODType, ErrorSeverity.RuleError))

        '(0x00080100) R Code Value
        m_rules.Add(New IsRequiredRule(Tags.ScheduledStationCodeValue, ro58IODType, ErrorSeverity.RuleError))

        '(0x00080102) R Coding Scheme Designator
        m_rules.Add(New IsRequiredRule(Tags.ScheduledStationCodingSchemeDesignator, ro58IODType, ErrorSeverity.RuleError))

        '(0x00080104) R Code Meaning
        m_rules.Add(New IsRequiredRule(Tags.ScheduledStationCodeMeaning, ro58IODType, ErrorSeverity.RuleError))

        '(0x00741210) R Scheduled Processing Parameters Sequence
        m_rules.Add(New IsRequiredRule(Tags.ScheduledProcessingParametersSequence, ro58IODType, ErrorSeverity.RuleError))

        m_rules.Add(New IsRequiredRule(Tags.ScheduledProcessingParametersValueType, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ScheduledProcessingParametersValueType, "TEXT", ro58IODType, ErrorSeverity.RuleError))

        m_rules.Add(New IsRequiredRule(Tags.ScheduledProcessingParameters_ConceptNameCodeSequence_CodeValue, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ScheduledProcessingParameters_ConceptNameCodeSequence_CodeValue, "ccc001", ro58IODType, ErrorSeverity.RuleError))

        m_rules.Add(New IsRequiredRule(Tags.ScheduledProcessingParameters_ConceptNameCodeSequence_CodingSchemeDesignator, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ScheduledProcessingParameters_ConceptNameCodeSequence_CodingSchemeDesignator, "DCM", ro58IODType, ErrorSeverity.RuleError))

        m_rules.Add(New IsRequiredRule(Tags.ScheduledProcessingParameters_ConceptNameCodeSequence_CodeMeaning, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ScheduledProcessingParameters_ConceptNameCodeSequence_CodeMeaning, "Treatment Delivery Type", ro58IODType, ErrorSeverity.RuleError))

        m_rules.Add(New IsRequiredRule(Tags.ScheduledProcessingParametersTextValue, ro58IODType, ErrorSeverity.RuleError))

        '(0x0020000D) R  Study Instance UID
        m_rules.Add(New IsRequiredRule(Tags.StudyInstanceUID, ro58IODType, ErrorSeverity.RuleError))

        '(0x00100010) R  Patients name
        m_rules.Add(New IsRequiredRule(Tags.PatientName, ro58IODType, ErrorSeverity.RuleError))

        '(0x00100020) R  Patients ID
        m_rules.Add(New IsRequiredRule(Tags.PatientID, ro58IODType, ErrorSeverity.RuleError))

        Return m_rules

    End Function

    ' This is our set of rules for Response message
    Public Function GetTransactionRulesForResponse(ByVal treatmentType As String) As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        '(0x00404018) R Scheduled Workitem Code Sequence
        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodeSequence, ro58IODType, ErrorSeverity.RuleError))

        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodeValue, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ScheduledWorkitemCodeValue, "121726", ro58IODType, ErrorSeverity.RuleError))

        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodingSchemeDesignator, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ScheduledWorkitemCodingSchemeDesignator, "DCM", ro58IODType, ErrorSeverity.RuleError))

        m_rules.Add(New IsRequiredRule(Tags.ScheduledWorkitemCodeMeaning, ro58IODType, ErrorSeverity.RuleError))

        '(0x00404021) R Input Information Sequence
        m_rules.Add(New IsRequiredRule(Tags.InputInformationSequence, ro58IODType, ErrorSeverity.RuleError))
        m_rules.Add(New CFindRspInputInformationSequenceRule(ro58IODType, ErrorSeverity.RuleError))

        '(0x00080054) retrieveAETitle
        Dim sutSettingTMS As SUTAESettingWrapper = TestToolConfiguration.GetInstance().GetSUTAEConfiguration(New TMSActor().Id, CMOVERQ)
        Dim sutSettingOST As SUTAESettingWrapper = TestToolConfiguration.GetInstance().GetSUTAEConfiguration(New OSTActor().Id, CMOVERQ)

        Dim values(1) As String
        values(0) = sutSettingTMS.AETitle
        values(1) = sutSettingOST.AETitle

        m_rules.Add(New SequenceLoopRule(Tags.InputInformationSequence, New IsRequiredRule(Tags.retrieveAETitle1, ro58IODType, ErrorSeverity.RuleError)))
        m_rules.Add(New SequenceLoopRule(Tags.InputInformationSequence, New ValueListRule(Tags.retrieveAETitle1, values, ro58IODType, ErrorSeverity.RuleError)))

        If treatmentType = DataSetHandler.DicomTextValueTreatment Then
            m_rules.Add(New ValueRule(Tags.ScheduledProcessingParametersTextValue, DataSetHandler.DicomTextValueTreatment, ro58IODType, ErrorSeverity.RuleError))
        ElseIf treatmentType = DataSetHandler.DicomTextValueContinuation Then
            m_rules.Add(New ValueRule(Tags.ScheduledProcessingParametersTextValue, DataSetHandler.DicomTextValueContinuation, ro58IODType, ErrorSeverity.RuleError))
        Else
            m_rules.Add(New ValueRule(Tags.ScheduledProcessingParametersTextValue, "''TREATMENT or CONTINUATION''", ro58IODType, ErrorSeverity.RuleError))
        End If

        Return m_rules

    End Function

End Class
