#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Collections.Generic
#End If

Class RO60Transaction
    Inherits Transaction

    Private m_ro60IODType As IODType = Nothing

    'Constructor
    Public Sub New()
        MyClass.New(True)
    End Sub

    'Constructor
    Public Sub New(ByVal clearMessageDataAfterSend As Boolean)
        MyBase.New("RO-60", "Treatment Delivery in Progress", IODType.UnifiedProcedureStepPush, clearMessageDataAfterSend)
        m_ro60IODType = IODType.NAction
    End Sub

    Protected Overrides Function GetTransactionReferenceDataMessages() As System.Collections.ArrayList
        Dim datasetMessages As ArrayList = New ArrayList()

        ' Set the refDataSet to correct XML use
        Dim refDataSet As ReferenceDataSet = ReferenceDataSet.GetInstance
        refDataSet.LoadNewDataSet(DataSetHandler.UPSMessagesXMLFileName)

        ' Get the N-ACTION-RQ message
        Dim message As DicomMessage = refDataSet.GetUnifiedProcedureStepPush_NACTION_REQ_RO60()

        ' Set the Requested SOPClassUID 
        message.Set(Tags.RequestedSOPClassUID, UI, SOPclass.UnifiedProcedureStepPushSOPClassUID)

        ' Set the Requested SOP Instance UID
        message.Set(Tags.RequestedSOPInstanceUID, UI, DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSCacheXMLFileName, createNActionRespString(), Tags.SOPInstanceUID))

        ' ActionType ID
        message.Set(Tags.ActionTypeID, US, "1")

        ' Transactuion ID
        message.Set(Tags.TransactionUID, UI, DvtkHighLevelInterface.Dicom.Other.UID.Create())

        'Set Unified Procedure Step State to "IN PROGRESS"
        message.Set(Tags.ProcedureStepState, CS, "IN PROGRESS")

        DataSetHandler.SaveDatasetToFile(message.DataSet, DataSetHandler.UPSCacheXMLFileName, "N-ACTION-REQ-RO60")
        datasetMessages.Add(message)
        Return datasetMessages

    End Function

    ' This function returns all common rules that apply on a request of this transaction
    Public Function GetCommonTransactionRulesForRequest() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        '(0x00081195)  Transaction UID
        m_rules.Add(New IsRequiredRule(Tags.TransactionUID, m_ro60IODType, ErrorSeverity.RuleError))
        m_rules.Add(New HasValueRule(Tags.TransactionUID, m_ro60IODType, ErrorSeverity.RuleError))

        '(0x00741000)  Procedure Step State
        m_rules.Add(New IsRequiredRule(Tags.ProcedureStepState, m_ro60IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ProcedureStepState, "IN PROGRESS", m_ro60IODType, ErrorSeverity.RuleError))

        '(0x00000003)  Requested SOP Class UID
        m_rules.Add(New IsRequiredRule(Tags.RequestedSOPClassUID, m_ro60IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.RequestedSOPClassUID, SOPclass.UnifiedProcedureStepPushSOPClassUID, m_ro60IODType, ErrorSeverity.RuleError))

        '(0x00001001)  Requested SOP Instance UID        
        m_rules.Add(New IsRequiredRule(Tags.RequestedSOPInstanceUID, m_ro60IODType, ErrorSeverity.RuleError))
        m_rules.Add(New InterOperabilityRule(Tags.SOPInstanceUID, Tags.RequestedSOPInstanceUID, DataSetHandler.UPSCacheXMLFileName, createNActionRespString(), m_ro60IODType, ErrorSeverity.RuleError))

        '(0x00001008)  ActionTypeID
        m_rules.Add(New IsRequiredRule(Tags.ActionTypeID, m_ro60IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.ActionTypeID, "1", m_ro60IODType, ErrorSeverity.RuleError))
        Return m_rules

    End Function

    ' This function returns all common rules that apply on a response of this transaction
    Public Function GetCommonTransactionRulesForResponse() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        ' Some rules need the dicomMessage send in the request
        Dim msg As DicomMessage = DirectCast(TransactionDataMessages(0), DicomMessage)

        '(0x00741000) Procedure Step State
        'm_rules.Add(New IsRequiredRule(Tags.ProcedureStepState, m_ro60IODType, ErrorSeverity.RuleError))
        'm_rules.Add(New InterRelationRule(msg, Tags.ProcedureStepState, Tags.ProcedureStepState, m_ro60IODType, ErrorSeverity.RuleError))
        'm_rules.Add(New ValueRule(Tags.ProcedureStepState, "IN PROGRESS", m_ro60IODType, ErrorSeverity.RuleError))

        ' (0x00001000) Affected SOP Instance UID
        m_rules.Add(New OptionalRule(Tags.AffectedSOPInstanceUID, m_ro60IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ConditionalSequenceRule(Tags.AffectedSOPInstanceUID, New InterRelationRule(msg, Tags.RequestedSOPInstanceUID, Tags.AffectedSOPInstanceUID, m_ro60IODType, ErrorSeverity.RuleError)))

        '(0x00000900)  Status
        m_rules.Add(New ValueRule(Tags.StatusCommandElement, "0", m_ro60IODType, ErrorSeverity.RuleError))

        Return m_rules

    End Function

    ' Returns the N-ACTION-RSP string. This String can be used to select the right dataset
    Private Function createNActionRespString() As String
        Dim retVal As String = "C-FIND-RSP"
        Return retVal
    End Function

End Class
