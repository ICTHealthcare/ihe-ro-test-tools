Class TissueHeterogeneityCorrectionRule
    Inherits MessageCollectionRule

    Public Sub New(ByVal iodType As IODType, ByVal severity As ErrorSeverity, ByVal refFileName1 As String)

        MyBase.New("Tissue Heterogeneity Correction Rule", iodType, severity)
        m_RefFileName1 = refFileName1
    End Sub

    Public Sub New(ByVal iodType As IODType, ByVal severity As ErrorSeverity, ByVal refFileName1 As String, ByVal refFileName2 As String)

        MyBase.New("Tissue Heterogeneity Correction Rule", iodType, severity)
        m_RefFileName1 = refFileName1
        m_RefFileName2 = refFileName2
        m_MultipleDoseObjects = True

    End Sub

    Private m_messageCollectionHelper As messageCollectionHelper
    Private m_RefFileName1 As String = ""
    Private m_RefFileName2 As String = ""
    Private m_MultipleDoseObjects = False
    Private m_tagSequence = Tags.TissueHeterogeneityCorrection

    Public Overrides Sub ApplyRule(ByRef dataSetCollection As DvtkHighLevelInterface.Dicom.Messages.DicomMessageCollection)
        m_messageCollectionHelper = New messageCollectionHelper(dataSetCollection)

        Dim RtDoseDatasetCollection As DvtkHighLevelInterface.Dicom.Other.DataSetCollection = Nothing
        Dim message As String = ""
        Dim LoadingSuccess As Boolean = False
        Dim refDoseDataset1 As DvtkHighLevelInterface.Dicom.Other.DataSet = Nothing
        Dim refDoseDataset2 As DvtkHighLevelInterface.Dicom.Other.DataSet = Nothing
        Dim CompositeDoseDataset As DvtkHighLevelInterface.Dicom.Other.DataSet = Nothing
        Dim Checklist As System.Collections.Specialized.StringCollection = New System.Collections.Specialized.StringCollection
        Dim i As Integer = 0
        Dim FoundValue = False
        Dim attributeCount As Integer = 0

        Me.SetValid("The Tissue Heterogeneity Correction rule could not be checked.")

        Try
            RtDoseDatasetCollection = m_messageCollectionHelper.GetRTDoseDatasetCollection

            If RtDoseDatasetCollection.Count = 0 Then
                message = "No RT Dose Object received. The Tissue Heterogeneity Correction rule could not be checked."
                Me.SetError(message)
            Else
                'get the reference data objects
                LoadingSuccess = GetRTDoseDatasets(RtDoseDatasetCollection, refDoseDataset1, refDoseDataset2, CompositeDoseDataset)

                If LoadingSuccess Then
                    Checklist = GetTissueHeterogeneityCorrectionRuleChecklist(refDoseDataset1, refDoseDataset2)

                    If Not CompositeDoseDataset Is Nothing Then
                        Dim referenceValue As String = ""

                        If CompositeDoseDataset.Exists(m_tagSequence) Then
                            attributeCount = CompositeDoseDataset(m_tagSequence).Values().Count
                            If Checklist.Count = attributeCount Then
                                For Each checklistValue As String In Checklist
                                    For i = 0 To attributeCount - 1
                                        referenceValue = CompositeDoseDataset(m_tagSequence).Values().Item(i)

                                        If referenceValue.Equals(checklistValue) Then
                                            FoundValue = True
                                            Me.SetValid("The attribute: '" + Tags.GetTagName(m_tagSequence) + "' (" + m_tagSequence + ") contains the correct values")
                                            Exit For
                                        Else
                                            message = "The attribute: '" + Tags.GetTagName(m_tagSequence) + "' (" + m_tagSequence + ") does not contain the value : " + checklistValue
                                            Me.SetError(message)
                                            Exit For
                                        End If
                                    Next

                                    If FoundValue = False Then
                                        Exit For
                                    End If
                                    'reset image counter and found value
                                    FoundValue = False
                                Next
                            Else
                                Me.SetError("The attribute: '" + Tags.GetTagName(m_tagSequence) + "' (" + m_tagSequence + ") is not present.")
                            End If
                        Else
                            Me.SetError("The attribute: '" + Tags.GetTagName(m_tagSequence) + "' (" + m_tagSequence + ") contains a incurrect number of values: " + attributeCount + "Should be : " + Checklist.Count)
                        End If
                    Else
                        Me.SetError("Reference dataset 1 is empty")
                    End If

                End If
            End If

        Catch ex As Exception
            Me.SetError(ex.Message)
        End Try

        If Not Me.IsValid Then
            Me.SetError(message)
        End If
        Me.Report()
    End Sub
    'Get the correct value for the Dose Type, first look in the reference data, then in the recieved data to check the dose type value.
    Private Function GetRTDoseDatasets(ByRef doseDatasetCollection As DvtkHighLevelInterface.Dicom.Other.DataSetCollection, ByRef refDoseDataset1 As DvtkHighLevelInterface.Dicom.Other.DataSet, ByRef refDoseDataset2 As DvtkHighLevelInterface.Dicom.Other.DataSet, ByRef CompositeDoseDataset As DvtkHighLevelInterface.Dicom.Other.DataSet) As Boolean
        Dim LoadingSuccesfull As Boolean = False
        Dim referenceValue As String = "PHYSICAL"
        Dim doseTypeValue As String = ""
        Dim doseSummationType As String = ""

        If Not m_RefFileName1.Equals("") Then
            refDoseDataset1 = ReferenceDataSet.GetInstance.GetStorageSopInstance(m_RefFileName1, IODType.RTDose).DataSet
        Else
            Throw New Exception("Reference dataset 1 could not be loaded")
        End If

        If m_MultipleDoseObjects Then
            If Not m_RefFileName2.Equals("") Then
                refDoseDataset2 = ReferenceDataSet.GetInstance.GetStorageSopInstance(m_RefFileName2, IODType.RTDose).DataSet
            Else

                Throw New Exception("Reference dataset 2 could not be loaded")
            End If
        End If

        For Each dataset As DvtkHighLevelInterface.Dicom.Other.DataSet In doseDatasetCollection
            If doseSummationType.Equals("MULTI_PLAN") Then
                CompositeDoseDataset = dataset
                LoadingSuccesfull = True
            Else
                refDoseDataset2 = dataset
            End If
        Next
        Return LoadingSuccesfull
    End Function
    Private Function GetTissueHeterogeneityCorrectionRuleChecklist(ByRef refDoseDataset1 As DvtkHighLevelInterface.Dicom.Other.DataSet, ByRef refDoseDataset2 As DvtkHighLevelInterface.Dicom.Other.DataSet) As System.Collections.Specialized.StringCollection
        Dim referenceValue As String = ""
        Dim Checklist As System.Collections.Specialized.StringCollection = New System.Collections.Specialized.StringCollection

        If Not refDoseDataset1 Is Nothing Then

            If Not refDoseDataset2 Is Nothing Then
                'Fill the checklist with the values of reference dataset 1
                GetCheckListFromReferenceData(Checklist, refDoseDataset1)
                'Fill the checklist with the values of reference dataset 2
                GetCheckListFromReferenceData(Checklist, refDoseDataset2)
            Else
                Throw New Exception("Reference dataset 2 is empty")
            End If
        Else
            Throw New Exception("Reference dataset 1 is empty")
        End If
        Return Checklist
    End Function
    Private Function GetCheckListFromReferenceData(ByRef Checklist As System.Collections.Specialized.StringCollection, ByRef refDoseDataset As DvtkHighLevelInterface.Dicom.Other.DataSet)
        Dim referenceValue As String = ""
        Dim i As Integer = 0
        Dim attributeCount As Integer = 0

        If Not refDoseDataset Is Nothing Then

            If refDoseDataset.Exists(m_tagSequence) Then
                attributeCount = refDoseDataset(m_tagSequence).Values().Count
                For i = 0 To attributeCount - 1
                    referenceValue = refDoseDataset(m_tagSequence).Values().Item(i)

                    If Not Checklist.Contains(referenceValue) Then
                        Checklist.Add(referenceValue)
                    End If
                Next
            Else
                Throw New Exception("The attribute: '" + Tags.GetTagName(m_tagSequence) + "' (" + m_tagSequence + ") is not present.")
            End If
        Else
            Throw New Exception("Reference dataset 1 is empty")
        End If

        Return Nothing
    End Function

End Class