Class ContourImageSequenceContourInterRelationRule
    Inherits MessageCollectionRule

    Public Sub New(ByVal iodType As IODType, ByVal severity As ErrorSeverity, ByVal expedtedReferencedIODType As IODType)

        MyBase.New("Contour Image Sequence Contour Interrelation Rule", iodType, severity)
        m_expedtedReferencedIODType = expedtedReferencedIODType
    End Sub
    Private m_expedtedReferencedIODType As IODType
    Private m_message As String
    Private m_valid As Boolean = False
    Private m_messageCollectionHelper As messageCollectionHelper


    Public Overrides Sub ApplyRule(ByRef dataSetCollection As DvtkHighLevelInterface.Dicom.Messages.DicomMessageCollection)
        m_messageCollectionHelper = New messageCollectionHelper(dataSetCollection)

        Dim structureSetDataSet As DvtkHighLevelInterface.Dicom.Other.DataSet = Nothing
        Dim done As Boolean = False

        Dim seqItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing
        Dim roiContourSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim contourSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim contourImageSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim referencedImageDataSet As DvtkHighLevelInterface.Dicom.Other.DataSet = Nothing
        Dim RTReferencedSeriesInstanceUID As String

        Dim _dictionary = New System.Collections.Generic.Dictionary(Of String, String)

       

        If m_messageCollectionHelper.GetStructureSet() Is Nothing Then
            m_valid = False
            m_message = "No RT Structure Set received"
        Else
            structureSetDataSet = m_messageCollectionHelper.GetStructureSet()
            'Check if Roi Contour Sequence is present
            If structureSetDataSet.Exists(Tags.ROIContourSequence) = False Then
                m_valid = False
                m_message = "The attribute: '" + Tags.GetTagName(Tags.ROIContourSequence) + "' (" + Tags.ROIContourSequence + ") is not present"
            Else
                RTReferencedSeriesInstanceUID = structureSetDataSet(Tags.RTReferencedSeriesSequenceSeriesInstanceUID).Values(0)
                Dim ctImageReceveid As Boolean = False
                Dim numberOfImages As Integer
                Dim refData As ReferenceDataSet = ReferenceDataSet.GetInstance

                If Not ReferenceDataSet.GetInstance.GetDataSetXML Is Nothing Then
                    referencedImageDataSet = ReferenceDataSet.GetInstance.GetCTImage(1, 1).DataSet
                    If (referencedImageDataSet(Tags.SeriesInstanceUID).Values(0) = RTReferencedSeriesInstanceUID) Then
                        m_expedtedReferencedIODType = SOPclass.GetIODType(referencedImageDataSet(Tags.SOPClassUID).Values(0))
                        numberOfImages = ReferenceDataSet.GetInstance.GetImageCount(1, IODType.CTImage)
                    Else
                        referencedImageDataSet = ReferenceDataSet.GetInstance.GetPETImage(1, 1).DataSet
                        If (referencedImageDataSet(Tags.SeriesInstanceUID).Values(0) = RTReferencedSeriesInstanceUID) Then
                            m_expedtedReferencedIODType = SOPclass.GetIODType(referencedImageDataSet(Tags.SOPClassUID).Values(0))
                            numberOfImages = ReferenceDataSet.GetInstance.GetImageCount(1, IODType.PETImage)
                        Else
                            referencedImageDataSet = ReferenceDataSet.GetInstance.GetMRImage(1, 1).DataSet
                            If (referencedImageDataSet(Tags.SeriesInstanceUID).Values(0) = RTReferencedSeriesInstanceUID) Then
                                m_expedtedReferencedIODType = SOPclass.GetIODType(referencedImageDataSet(Tags.SOPClassUID).Values(0))
                                numberOfImages = ReferenceDataSet.GetInstance.GetImageCount(1, IODType.MRImage)
                            End If
                        End If
                    End If

                Else
                    referencedImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.CTImage, 1)
                    If (referencedImageDataSet(Tags.SeriesInstanceUID).Values(0) = RTReferencedSeriesInstanceUID) Then
                        m_expedtedReferencedIODType = SOPclass.GetIODType(referencedImageDataSet(Tags.SOPClassUID).Values(0))
                        numberOfImages = ReferenceDataSet.GetInstance.GetImageCount(1, IODType.CTImage)
                    Else
                        referencedImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.PETImage, 1)
                        If (referencedImageDataSet(Tags.SeriesInstanceUID).Values(0) = RTReferencedSeriesInstanceUID) Then
                            m_expedtedReferencedIODType = SOPclass.GetIODType(referencedImageDataSet(Tags.SOPClassUID).Values(0))
                            numberOfImages = ReferenceDataSet.GetInstance.GetImageCount(1, IODType.PETImage)
                        Else
                            referencedImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.MRImage, 1)
                            If (referencedImageDataSet(Tags.SeriesInstanceUID).Values(0) = RTReferencedSeriesInstanceUID) Then
                                m_expedtedReferencedIODType = SOPclass.GetIODType(referencedImageDataSet(Tags.SOPClassUID).Values(0))
                                numberOfImages = ReferenceDataSet.GetInstance.GetImageCount(1, IODType.MRImage)
                            End If
                        End If
                    End If

                    If referencedImageDataSet Is Nothing Then
                        m_valid = False
                        done = True
                        m_message = "No " + m_expedtedReferencedIODType.ToString() + "s received"
                    End If
                End If

                If numberOfImages > 0 Then

                    Dim imageCounter As Integer
                    'First set fals message in case the for loop does not find the correct z-coordinate.
                    m_valid = False
                    m_message = "Number of Image Sequence Items is one but zcoordinates of the contour does not match the z-coordinate of Image Position Patient in the Image."
                    For imageCounter = 1 To numberOfImages


                        If Not ReferenceDataSet.GetInstance.GetDataSetXML Is Nothing Then
                            If m_expedtedReferencedIODType = IODType.MRImage Then
                                referencedImageDataSet = ReferenceDataSet.GetInstance.GetMRImage(1, imageCounter).DataSet
                            ElseIf m_expedtedReferencedIODType = IODType.PETImage Then
                                referencedImageDataSet = ReferenceDataSet.GetInstance.GetPETImage(1, imageCounter).DataSet
                            ElseIf m_expedtedReferencedIODType = IODType.CTImage Then
                                referencedImageDataSet = ReferenceDataSet.GetInstance.GetCTImage(1, imageCounter).DataSet
                            End If

                        Else
                            If m_expedtedReferencedIODType = IODType.MRImage Then
                                referencedImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.MRImage, imageCounter)
                            ElseIf m_expedtedReferencedIODType = IODType.PETImage Then
                                referencedImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.PETImage, imageCounter)
                            ElseIf m_expedtedReferencedIODType = IODType.CTImage Then
                                referencedImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.CTImage, imageCounter)
                            End If

                            If referencedImageDataSet Is Nothing Then
                                m_valid = False
                                done = True
                                m_message = "No " + m_expedtedReferencedIODType.ToString() + "s received"
                            End If
                        End If

                        If Not _dictionary.ContainsKey(referencedImageDataSet(Tags.SOPInstanceUID).Values(0)) Then
                            _dictionary.Add(referencedImageDataSet(Tags.SOPInstanceUID).Values(0), referencedImageDataSet(Tags.ImagePositionPatient).Values(2).ToString())
                        End If
                    Next
                End If


                roiContourSequenceAttribute = structureSetDataSet(Tags.ROIContourSequence)
                Dim i As Integer

                If done = False Then
                    For i = 1 To roiContourSequenceAttribute.ItemCount()
                        If done = False Then
                            seqItem = roiContourSequenceAttribute.GetItem(i)
                            'Check if Contour Sequence is present
                            If seqItem.Exists(Tags.ContourSequenceTag) = False Then
                                m_valid = False
                                done = True
                                m_message = "The attribute: '" + Tags.GetTagName(Tags.ContourSequenceTag) + "' (" + Tags.ContourSequenceTag + ") is not present"
                            Else
                                'Contour Sequence 3006,0040
                                contourSequenceAttribute = seqItem(Tags.ContourSequenceTag)
                                Dim j As Integer
                                If done = False Then
                                    For j = 1 To contourSequenceAttribute.ItemCount()
                                        seqItem = contourSequenceAttribute.GetItem(j)
                                        'Contour Image Sequence 3006,0016 check if exists
                                        If seqItem.Exists(Tags.ContourImageSequenceTag) = False Then
                                            m_valid = False
                                            done = True
                                            m_message = "The attribute: '" + Tags.GetTagName(Tags.ContourImageSequenceTag) + "' (" + Tags.ContourImageSequenceTag + ") is not present"
                                        Else
                                            'Contour Image Sequence 3006,0016
                                            contourImageSequenceAttribute = seqItem(Tags.ContourImageSequenceTag)
                                            'Get the number of contour image sequence items, should be 1 according to IHE-RO
                                            If contourImageSequenceAttribute.ItemCount() = 1 Then
                                                'If the contour type is CLOSED_PLANAR, then the zcoordinates of the 
                                                'contour(must) match the z-coordinate of Image Position Patient in the image.
                                                If seqItem(Tags.ContourGeometricTypeTag).Values(0).ToString = "CLOSED_PLANAR" Then
                                                    Dim contourDataAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute
                                                    contourDataAttribute = seqItem(Tags.ContourDataTag)
                                                    seqItem = contourImageSequenceAttribute.GetItem(1)

                                                    If done = False Then

                                                        'Compare SopInstanceUID with Referenced SOP InstanceUID of to find the correct image.
                                                        If _dictionary.ContainsKey(seqItem(Tags.ReferencedSOPInstanceUIDMOVE).Values(0)) Then
                                                            'Compare the z-image of the contour data with the z-coordinate of the patient position of the image.
                                                            Dim contourSeqItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = contourSequenceAttribute.GetItem(j)
                                                            Dim zcorContourData As String = contourSeqItem(Tags.ContourDataTag).Values(2).ToString()

                                                            Dim dotIndex As Integer
                                                            Try
                                                                dotIndex = zcorContourData.IndexOf(".")
                                                                'Get value with precision of 1/100
                                                                zcorContourData = zcorContourData.Substring(0, dotIndex + 3)
                                                            Catch ex As System.Exception
                                                                'No decimal point in the value, add 1/100 precision
                                                                zcorContourData = zcorContourData + ".00"
                                                            End Try
                                                            'Dim zcorImagePatienPosition As String = ""
                                                            Dim zcorImagePatienPosition As String = _dictionary.Item(seqItem(Tags.ReferencedSOPInstanceUIDMOVE).Values(0).ToString())

                                                            Try
                                                                dotIndex = zcorContourData.IndexOf(".")
                                                                'Get value with precision of 1/100
                                                                zcorImagePatienPosition = zcorImagePatienPosition.Substring(0, dotIndex + 3)
                                                            Catch ex As System.Exception
                                                                'No decimal point in the value, add 1/100 precision
                                                                zcorImagePatienPosition = zcorImagePatienPosition + ".00"
                                                            End Try

                                                            If zcorContourData = zcorImagePatienPosition Then
                                                                m_valid = True
                                                                m_message = "Number of Contour Image Sequence items is one, and z-coordinate matches the Image Patient Position in the Image."
                                                            Else
                                                                m_valid = False
                                                                done = True
                                                                m_message = "Number of Contour Image Sequence items is one, but z-coordinate does NOT match the Image Patient Position in the Image."
                                                            End If
                                                        Else
                                                            m_valid = False
                                                            done = True
                                                            m_message = "The reference data does not contain a image with SOP Instance UID: " + seqItem(Tags.ReferencedSOPInstanceUIDMOVE).Values(0)
                                                        End If

                                                    End If
                                                Else
                                                    'True scenario when geometric type is not CLOSED_PLANER
                                                    m_valid = True
                                                    m_message = "Number of Contour Image Sequence Items is one"
                                                    seqItem = contourImageSequenceAttribute.GetItem(1)
                                                End If
                                            Else
                                                m_valid = False
                                                done = True
                                                m_message = "Number of Contour Image Sequence Items is not equal to one"
                                            End If
                                        End If
                                    Next

                                End If
                            End If

                        End If
                    Next
                End If
            End If
        End If

        If m_valid = True Then
            Me.SetValid(m_message)
        Else
            Me.SetError(m_message)
        End If

        Me.Report()
    End Sub
End Class