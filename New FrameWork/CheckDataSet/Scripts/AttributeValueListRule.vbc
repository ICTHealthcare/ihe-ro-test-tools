Class AttributeValueListRule
    Inherits ContentValidationRule
    ''' <summary>
    ''' this rule verifies if the value in this attribute is a correct one, according to the valuelist that is provided
    ''' </summary>
    ''' <param name="valueTag">the attribute that needs to be checked</param>
    ''' <param name="valueList">containes the values which the attribute may have</param>
    ''' <param name="iodType"></param>
    ''' <param name="severity"></param>
    ''' <remarks></remarks>

    Public Sub New(ByVal valueTag As String, ByVal valueList() As String, ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Attribute Value List Rule", valueTag, iodType, severity)

        m_ValueList = valueList

    End Sub

    Private m_ValueList() As String
    Private AllSequenceItemsPresent As Boolean = False

    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)
        Dim dicomFile As New DvtkHighLevelInterface.Dicom.Files.DicomFile
        dicomFile.DataSet = dicomMessage.DataSet
        ApplyRule(dicomFile, iodType)
    End Sub

    Public Overrides Sub ApplyRule(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal iodType As IODType)
        Dim message As String
        If iodType = IODTypeRule Then
            Dim sequenceItems As New List(Of String)
            Dim SequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
            Dim count As Integer = 0
            Dim split() As String = {"test"}
            If (m_TagSequence.Contains("/")) Then
                split = m_TagSequence.Split("/")
                If (dicomFile.DataSet.Exists(split(count))) Then
                    For i As Integer = 1 To dicomFile.DataSet.GetitemCount(split(count))
                        SequenceItem = dicomFile.DataSet.Getitem(split(count), i)

                        If (count < split.Length - 1) Then
                            CheckNextSequenceItem(SequenceItem, split, count + 1)
                        Else
                            AllSequenceItemsPresent = True
                            DoTheCheck(Nothing, SequenceItem, split(split.Length - 1))
                        End If

                    Next
                Else
                    AllSequenceItemsPresent = True
                    message = "SequenceItem (" + split(count) + " for attribute: (" + TagSequence + ") is not present."
                    Me.SetError(message)
                    Me.Report()
                End If

            Else
                AllSequenceItemsPresent = True
                DoTheCheck(dicomFile, Nothing, m_TagSequence)
            End If


            If Not AllSequenceItemsPresent Then
                message = "The attribute: (" + TagSequence + ") is not present."
                Me.SetError(message)
                Me.Report()
            End If

        End If
    End Sub

    Public Sub CheckNextSequenceItem(ByVal SequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem, ByVal Split() As String, ByVal Count As Integer)
        Dim NextSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
        If (Count < Split.Length - 1) Then
            If (SequenceItem.Exists(Split(Count))) Then
                For z As Integer = 1 To SequenceItem.GetitemCount(Split(Count))
                    NextSequenceItem = SequenceItem.Getitem(Split(Count), z)
                    CheckNextSequenceItem(NextSequenceItem, Split, Count + 1)
                Next
            End If
        Else
            AllSequenceItemsPresent = True
            DoTheCheck(Nothing, SequenceItem, Split(Split.Length - 1))
        End If

    End Sub

    Public Sub DoTheCheck(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal sequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem, ByVal tag As String)
        Dim message As String
        Dim found As Boolean = False
        Dim n As Integer

        If Not SequenceItem Is Nothing Then
            If Not sequenceItem.Item(tag).Exists Then
                message = "The attribute: (" + TagSequence + ") is not present."
                Me.SetValid(message)
            Else
                For n = 0 To m_ValueList.Length - 1
                    If sequenceItem(tag).Values.Item(0) = m_ValueList(n) Then
                        message = "The attribute: (" + TagSequence + ") contains the value: " + m_ValueList(n) + "."
                        Me.SetValid(message)
                        found = True
                    End If
                Next
                If found = False Then
                    'create error message!
                    message = "The attribute: (" + TagSequence + ") does not contain one of the values:"
                    For n = 0 To m_ValueList.Length - 1
                        If n > 0 Then
                            message = message + " or"
                        End If
                        message = message + " " + m_ValueList(n)
                    Next
                    message = message + " ."
                    Me.SetError(message)
                End If
            End If
        Else
            If Not dicomFile.DataSet.Exists(tag) Then
                message = "The attribute: (" + TagSequence + ") is not present."
                Me.SetValid(message)
            Else
                For n = 0 To m_ValueList.Length - 1
                    If dicomFile.DataSet(tag).Values.Item(0) = m_ValueList(n) Then
                        message = "The attribute: (" + TagSequence + ") contains the value: " + m_ValueList(n) + "."
                        Me.SetValid(message)
                        found = True
                    End If
                Next
                If found = False Then
                    'create error message!
                    message = "The attribute: (" + TagSequence + ") does not contain one of the values:"
                    For n = 0 To m_ValueList.Length - 1
                        If n > 0 Then
                            message = message + " or"
                        End If
                        message = message + " " + m_ValueList(n)
                    Next
                    message = message + " ."
                    Me.SetError(message)
                End If
            End If
        End If

        Me.Report()
    End Sub
End Class
