Class BlockDataRule
    Inherits AttributeRule

    Public Sub New(ByVal iodType As IODType, ByVal severity As ErrorSeverity)
        MyBase.New("Block Data Rule", "", iodType, severity)
    End Sub

    Public Overrides Sub ApplyRule(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal iodType As IODType)

        Dim beamSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim blockSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim blockDataAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing

        Dim seqItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing

        If (iodType = Me.IODTypeRule And (iodType = iodType.RTPlanDosimetric Or iodType = iodType.RTPlanGeometric)) Then
            Dim message As String = ""
            Dim done As Boolean = False
            Dim valid As Boolean = False

            If dicomFile.DataSet.Exists(Tags.BeamSequence) = False Then
                message = "The attribute: '" + Tags.GetTagName(Tags.BeamSequence) + "' (" + Tags.BeamSequence + ") is not present."
                valid = False
                done = True
            End If

            If done = False Then
                beamSequenceAttribute = dicomFile.DataSet(Tags.BeamSequence)
                Dim i As Integer
                For i = 1 To beamSequenceAttribute.ItemCount()
                    If done = False Then
                        seqItem = beamSequenceAttribute.GetItem(i)
                        If seqItem.Exists(Tags.BlockSequenceTagSequence) = True Then
                            blockSequenceAttribute = seqItem(Tags.BlockSequenceTagSequence)
                            Dim j As Integer
                            For j = 1 To blockSequenceAttribute.ItemCount()
                                If done = False Then
                                    seqItem = blockSequenceAttribute.GetItem(j)
                                    If seqItem.Exists(Tags.BlockDataTagSequence) = False Then
                                        message = "The attribute: '" + Tags.GetTagName(Tags.BlockDataTagSequence) + "' (" + Tags.BlockDataTagSequence + ") is not present."
                                        valid = False
                                        done = True
                                    Else
                                        blockDataAttribute = seqItem(Tags.BlockDataTagSequence)
                                        Dim numberOfPoints As Integer


                                        Try
                                            'Every point has three coordinates, x,y and z, 
                                            'so by dividing the VM through 3 we get the number of points
                                            numberOfPoints = Convert.ToInt32(blockDataAttribute.VM / 3)
                                        Catch ex As System.Exception
                                            numberOfPoints = 0
                                        End Try

                                        If numberOfPoints > 0 Then
                                            valid = True
                                        Else
                                            message = "Number of '" + Tags.GetTagName(Tags.BlockDataTagSequence) + "' (" + Tags.BlockDataTagSequence + ") points is " + numberOfPoints.ToString()
                                            valid = False
                                            done = True
                                        End If
                                    End If
                                End If
                            Next
                        Else
                            valid = True
                            message = "No '" + Tags.GetTagName(Tags.BlockDataTagSequence) + "' (" + Tags.BlockDataTagSequence + ") present in '" + Tags.GetTagName(Tags.BeamSequence) + "' (" + Tags.BeamSequence + "), no need to check the block data attribute requirement."
                        End If
                    End If
                Next
            End If

            If valid Then
                message = "Valid Number of '" + Tags.GetTagName(Tags.BlockDataTagSequence) + "' (" + Tags.BlockDataTagSequence + ") points for all blocks"
                Me.SetValid(message)
            Else
                Me.SetError(message)
            End If

            'Reporter, write to results, if there is anything to report
            Me.Report()
        End If
    End Sub
End Class