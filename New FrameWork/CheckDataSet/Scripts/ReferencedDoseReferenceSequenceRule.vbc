Class ReferencedDoseReferenceSequenceRule
    Inherits AttributeRule

    Public Sub New(ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Referenced Dose Reference Sequence Rule", "", iodType, severity)

    End Sub

    Public Overrides Sub ApplyRule(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal iodType As IODType)

        'Dim beamSequenceTagSequence As String = "0x300A00B0"
        Dim beamSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing

        'Dim controlPointSequenceTagSequence As String = "0x300A0111"
        Dim controlPointSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing

        'Dim referencedDoseReferenceSequence As String = "0x300C0050"

        Dim seqItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing

        If iodType = IODTypeRule Then
            Dim message As String
            Dim done As Boolean = False
            Dim valid As Boolean = False

            If dicomFile.DataSet.Exists(Tags.BeamSequence) = False Then
                message = "The attribute: '" + Tags.GetTagName(Tags.BeamSequence) + "' (" + Tags.BeamSequence + ") is not present."
                valid = False
                done = True
            End If

            If done = False Then
                beamSequenceAttribute = dicomFile.DataSet(Tags.BeamSequence)
                Dim i As Integer
                For i = 1 To beamSequenceAttribute.ItemCount()
                    If done = False Then
                        seqItem = beamSequenceAttribute.GetItem(i)
                        If seqItem.Exists(Tags.ControlPointSequenceTagSequence) = False Then
                            message = "The attribute: '" + Tags.GetTagName(Tags.ControlPointSequenceTagSequence) + "' (" + Tags.ControlPointSequenceTagSequence + ") is not present."
                            valid = False
                            done = True
                        Else
                            controlPointSequenceAttribute = seqItem(Tags.ControlPointSequenceTagSequence)
                            If controlPointSequenceAttribute.ItemCount() = 2 Then
                                Dim j As Integer
                                For j = 1 To controlPointSequenceAttribute.ItemCount()
                                    If done = False Then

                                        seqItem = controlPointSequenceAttribute.GetItem(j)

                                        If seqItem.Exists(Tags.ReferencedDoseReferenceSequence) = False Then
                                            message = "The attribute: '" + Tags.GetTagName(Tags.ReferencedDoseReferenceSequence) + "' (" + Tags.ReferencedDoseReferenceSequence + ") is not present."
                                            valid = True
                                        Else
                                            message = "'" + Tags.GetTagName(Tags.ReferencedDoseReferenceSequence) + "' (" + Tags.ReferencedDoseReferenceSequence + ") should not present in Geometric RT-Plans"
                                            valid = False
                                            done = True
                                        End If
                                    End If
                                Next
                            Else
                                message = "'" + Tags.GetTagName(Tags.ControlPointSequenceTagSequence) + "' (" + Tags.ControlPointSequenceTagSequence + ") should contains 2 sequence items, instead of " + controlPointSequenceAttribute.ItemCount().ToString() + " sequence items"
                                valid = False
                                done = True
                            End If
                        End If
                    End If
                Next
            End If

            If valid Then
                Me.SetValid(message)
            Else
                Me.SetError(message)
            End If

            'Reporter, write to results, if there is anything to report
            Me.Report()
        End If
    End Sub
End Class