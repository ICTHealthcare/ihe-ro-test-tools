Class AttributeConditionalNotValueNotPresentRule
    Inherits ContentValidationRule
    ''' <summary>
    ''' This attribute should not be present in the dataset
    ''' </summary>
    ''' <param name="valueTag">the attribute to be checked</param>
    ''' <param name="iodType"></param>
    ''' <param name="severity"></param>
    ''' <remarks></remarks>
    Public Sub New(ByVal tag As String, ByVal conditionalTag As String, ByVal conditionalPosition As Integer, ByVal notBeValue As String, ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Attribute Not Have Given Value Condition Then Not Present Rule", tag, iodType, severity)
        m_notBeValue = notBeValue
        m_ConditionalTag = conditionalTag
        m_ConditionalPosition = conditionalPosition
    End Sub

    Private m_ConditionalTag As String
    Private m_notBeValue As String
    Private m_ConditionalPosition As Integer
    Private AllSequenceItemsPresent As Boolean = False
    Private PreviousSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
    Private m_dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile

    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)
        Dim dicomFile As New DvtkHighLevelInterface.Dicom.Files.DicomFile
        dicomFile.DataSet = dicomMessage.DataSet
        ApplyRule(dicomFile, iodType)
    End Sub

    Public Overrides Sub ApplyRule(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal iodType As IODType)
        m_dicomFile = dicomFile
        Dim message As String
        If iodType = IODTypeRule Then
            Dim sequenceItems As New List(Of String)
            Dim SequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
            Dim count As Integer = 0
            Dim split() As String = {"test"}
            If (m_TagSequence.Contains("/")) Then
                split = m_TagSequence.Split("/")
                If (dicomFile.DataSet.Exists(split(count))) Then
                    For i As Integer = 1 To dicomFile.DataSet.GetitemCount(split(count))
                        SequenceItem = dicomFile.DataSet.Getitem(split(count), i)

                        If (count < split.Length - 1) Then
                            CheckNextSequenceItem(SequenceItem, split, count + 1)
                        Else
                            AllSequenceItemsPresent = True
                            DoTheCheckWithSequenceItem(SequenceItem, split(split.Length - 1))
                        End If

                    Next
                Else
                    AllSequenceItemsPresent = True
                    message = "SequenceItem (" + split(count) + " for attribute: (" + TagSequence + ") is not present."
                    Me.SetError(message)
                    Me.Report()
                End If

            Else
                AllSequenceItemsPresent = True
                DoTheCheckWithDicomFile(dicomFile, m_TagSequence)
            End If


            If Not AllSequenceItemsPresent Then
                message = "The attribute: (" + TagSequence + ") is not present."
                Me.SetError(message)
                Me.Report()
            End If

        End If
    End Sub

    Public Sub CheckNextSequenceItem(ByVal SequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem, ByVal Split() As String, ByVal Count As Integer)
        Dim NextSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
        If (Count < Split.Length - 1) Then
            If (Count = Split.Length - 2) Then
                PreviousSequenceItem = SequenceItem
            End If
            If (SequenceItem.Exists(Split(Count))) Then
                For z As Integer = 1 To SequenceItem.GetitemCount(Split(Count))
                    NextSequenceItem = SequenceItem.Getitem(Split(Count), z)
                    CheckNextSequenceItem(NextSequenceItem, Split, Count + 1)
                Next
            End If
        Else
            AllSequenceItemsPresent = True
            DoTheCheckWithSequenceItem(SequenceItem, Split(Split.Length - 1))
        End If


    End Sub

    Public Sub DoTheCheckWithDicomFile(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal tag As String)
        Dim message As String
        
        If dicomFile.DataSet.Exists(m_ConditionalTag) Then
            If Not dicomFile.DataSet(m_ConditionalTag).Values.Item(m_ConditionalPosition) = m_notBeValue Then
                If Not dicomFile.DataSet.Exists(m_TagSequence) Then
                    message = "The attribute (" + TagSequence + ") is not present."
                    Me.SetValid(message)
                Else
                    message = "The attribute (" + TagSequence + ") is present."
                    Me.SetError(message)
                End If
            Else
                message = "Conditional attribute (" + m_ConditionalTag + ") does contain the value: " + m_notBeValue + "."
                Me.SetValid(message)
            End If
        Else
            message = "Conditional attribute (" + m_ConditionalTag + ") is not present in the dataset."
            Me.SetValid(message)
        End If

        Me.Report()

    End Sub

    Public Sub DoTheCheckWithSequenceItem(ByVal sequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem, ByVal tag As String)
        Dim message As String
        Dim ConditionalSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing
        Dim CorrectConditionalTag As String

        If (m_ConditionalTag.StartsWith("../")) Then
            ConditionalSequenceItem = PreviousSequenceItem
            CorrectConditionalTag = m_ConditionalTag.Remove(0, 3)
        ElseIf (m_ConditionalTag.StartsWith("/")) Then
            ConditionalSequenceItem = sequenceItem
            CorrectConditionalTag = m_ConditionalTag.Remove(0, 1)
        Else
            CorrectConditionalTag = m_ConditionalTag
        End If

        If ConditionalSequenceItem Is Nothing Then

            If m_dicomFile.DataSet.Exists(m_ConditionalTag) Then
                If Not m_dicomFile.DataSet(m_ConditionalTag).Values.Item(m_ConditionalPosition) = m_notBeValue Then
                    If Not sequenceItem.Item(tag).Exists Then
                        message = "The attribute (" + TagSequence + ") is not present."
                        Me.SetValid(message)
                    Else
                        message = "The attribute (" + TagSequence + ") is present."
                        Me.SetError(message)
                    End If
                Else
                    message = "Conditional attribute (" + m_ConditionalTag + ") does contain the value: " + m_notBeValue + "."
                    Me.SetValid(message)
                End If
            Else
                message = "Conditional attribute (" + m_ConditionalTag + ") is not present in the dataset."
                Me.SetValid(message)
            End If
        Else
            If ConditionalSequenceItem.Exists(CorrectConditionalTag) Then
                If Not ConditionalSequenceItem(CorrectConditionalTag).Values.Item(m_ConditionalPosition) = m_notBeValue Then
                    If Not sequenceItem.Item(tag).Exists Then
                        message = "The attribute (" + TagSequence + ") is not present."
                        Me.SetValid(message)
                    Else
                        message = "The attribute (" + TagSequence + ") is present."
                        Me.SetError(message)
                    End If
                Else
                    message = "Conditional attribute (" + m_ConditionalTag + ") does contain the value: " + m_notBeValue + "."
                    Me.SetValid(message)
                End If
            Else
                message = "Conditional attribute (" + m_ConditionalTag + ") is not present in the dataset."
                Me.SetValid(message)
            End If
        End If

        Me.Report()

    End Sub
End Class