Class AttributeConditionalWithPositionsValueRule
    Inherits AttributeRule
    ''' <summary>
    ''' this rule verifies if the value in this attribute is a correct one, according to the value that is provided
    ''' </summary>
    ''' <param name="valueTag">the attribute that needs to be checked</param>
    ''' <param name="value">contains the value which the attribute may have</param>
    ''' <param name="iodType"></param>
    ''' <param name="severity"></param>
    ''' <remarks></remarks>

    Public Sub New(ByVal valueTag As String, ByVal position As Integer, ByVal value As String, ByVal conditionalValueTag As String, ByVal conditionalPosition As Integer, ByVal conditionalValue As String, ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Attribute Conditional With Positions Value Rule", valueTag, iodType, severity)
        m_Value = value
        m_ConditionalValue = conditionalValue
        m_ConditionalValueTag = conditionalValueTag
        m_PositionValue = position
        m_PositionConditionalValue = conditionalPosition
    End Sub

    Private m_Value As String
    Private m_ConditionalValueTag As String
    Private m_ConditionalValue As String
    Private m_PositionValue As Integer
    Private m_PositionConditionalValue As Integer
    Private AllSequenceItemsPresent As Boolean = False
    Private PreviousSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
    Private m_dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile

    Public Overrides Sub ApplyRule(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal iodType As IODType)
        Dim message As String
        m_dicomFile = dicomFile
        If iodType = IODTypeRule Then
            Dim sequenceItems As New List(Of String)
            Dim SequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
            Dim count As Integer = 0
            Dim split() As String = {"test"}
            If (m_TagSequence.Contains("/")) Then
                split = m_TagSequence.Split("/")
                If (dicomFile.DataSet.Exists(split(count))) Then
                    For i As Integer = 1 To dicomFile.DataSet.GetitemCount(split(count))
                        SequenceItem = dicomFile.DataSet.Getitem(split(count), i)

                        If (count < split.Length - 1) Then
                            CheckNextSequenceItem(SequenceItem, split, count + 1)
                        Else
                            AllSequenceItemsPresent = True
                            DoTheCheckWithSequenceItem(SequenceItem, split(split.Length - 1))
                        End If

                    Next
                Else
                    AllSequenceItemsPresent = True
                    message = "SequenceItem (" + split(count) + " for attribute: (" + split(split.Length - 1) + ") is not present."
                    Me.SetError(message)
                    Me.Report()
                End If

            Else
                AllSequenceItemsPresent = True
                DoTheCheckWithDicomFile(dicomFile, m_TagSequence)
            End If


            If Not AllSequenceItemsPresent Then
                message = "The attribute: (" + split(split.Length - 1) + ") is not present."
                Me.SetError(message)
                Me.Report()
            End If

        End If
    End Sub

    Public Sub CheckNextSequenceItem(ByVal SequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem, ByVal Split() As String, ByVal Count As Integer)
        Dim NextSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
        If (Count < Split.Length - 1) Then
            If (Count = Split.Length - 2) Then
                PreviousSequenceItem = SequenceItem
            End If
            If (SequenceItem.Exists(Split(Count))) Then
                For z As Integer = 1 To SequenceItem.GetitemCount(Split(Count))
                    NextSequenceItem = SequenceItem.Getitem(Split(Count), z)
                    CheckNextSequenceItem(NextSequenceItem, Split, Count + 1)
                Next
            End If
        Else
            AllSequenceItemsPresent = True
            DoTheCheckWithSequenceItem(SequenceItem, Split(Split.Length - 1))
        End If

    End Sub

    Public Sub DoTheCheckWithDicomFile(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal tag As String)
        Dim message As String

        If dicomFile.DataSet.Exists(m_ConditionalValueTag) Then
            If dicomFile.DataSet(m_ConditionalValueTag).Values.Item(m_PositionConditionalValue) = m_ConditionalValue Then
                If Not dicomFile.DataSet.Exists(tag) Then
                    message = "The attribute (" + tag + ") is not present in the dataset."
                    Me.SetValid(message)
                ElseIf Not dicomFile.DataSet(tag).Values.Item(m_PositionValue) = m_Value Then
                    message = "The attribute (" + tag + ") contains the value: " + dicomFile.DataSet(tag).Values.Item(m_PositionValue).ToString() + " but should contain the value: " + m_Value + "."
                    Me.SetError(message)
                Else
                    message = "The attribute (" + tag + ") contains the value: " + m_Value + "."
                    Me.SetValid(message)
                End If
            Else
                message = "Conditional attribute (" + m_ConditionalValueTag + ") does not contain the value: " + m_ConditionalValue + " on position: " + m_PositionConditionalValue.ToString() + "."
                Me.SetValid(message)
            End If
        Else
            message = "Conditional attribute (" + m_ConditionalValueTag + ") is not present in the dataset."
            Me.SetValid(message)
        End If

        Me.Report()

    End Sub

    Public Sub DoTheCheckWithSequenceItem(ByVal sequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem, ByVal tag As String)
        Dim message As String
        Dim ConditionalSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing
        Dim CorrectConditionalTag As String

        If (m_ConditionalValueTag.StartsWith("../")) Then
            ConditionalSequenceItem = PreviousSequenceItem
            CorrectConditionalTag = m_ConditionalValueTag.Remove(0, 3)
        ElseIf (m_ConditionalValueTag.StartsWith("/")) Then
            ConditionalSequenceItem = sequenceItem
            CorrectConditionalTag = m_ConditionalValueTag.Remove(0, 1)
        Else
            CorrectConditionalTag = m_ConditionalValueTag
        End If

        If ConditionalSequenceItem Is Nothing Then
            If m_dicomFile.DataSet.Exists(m_ConditionalValueTag) Then
                If m_dicomFile.DataSet(m_ConditionalValueTag).Values.Item(m_PositionConditionalValue) = m_ConditionalValue Then
                    If Not sequenceItem.Exists(tag) Then
                        message = "The attribute (" + tag + ") is not present in the dataset."
                        Me.SetValid(message)
                    ElseIf Not sequenceItem(tag).Values.Item(m_PositionValue) = m_Value Then
                        message = "The attribute (" + tag + ") contains the value: " + sequenceItem(tag).Values.Item(m_PositionValue).ToString() + " but should contain the value: " + m_Value + "."
                        Me.SetError(message)
                    Else
                        message = "The attribute (" + tag + ") contains the value: " + m_Value + "."
                        Me.SetValid(message)
                    End If
                Else
                    message = "Conditional attribute (" + m_ConditionalValueTag + ") does not contain the value: " + m_ConditionalValue + " on position: " + m_PositionConditionalValue.ToString() + "."
                    Me.SetValid(message)
                End If
            Else
                message = "Conditional attribute (" + m_ConditionalValueTag + ") is not present in the dataset."
                Me.SetValid(message)
            End If
        Else
            If ConditionalSequenceItem.Exists(CorrectConditionalTag) Then
                If ConditionalSequenceItem(CorrectConditionalTag).Values.Item(m_PositionConditionalValue) = m_ConditionalValue Then
                    If Not sequenceItem.Exists(tag) Then
                        message = "The attribute (" + tag + ") is not present in the dataset."
                        Me.SetValid(message)
                    ElseIf Not sequenceItem(tag).Values.Item(m_PositionValue) = m_Value Then
                        message = "The attribute (" + tag + ") contains the value: " + sequenceItem(tag).Values.Item(m_PositionValue).ToString() + " but should contain the value: " + m_Value + "."
                        Me.SetError(message)
                    Else
                        message = "The attribute (" + tag + ") contains the value: " + m_Value + "."
                        Me.SetValid(message)
                    End If
                Else
                    message = "Conditional attribute (" + m_ConditionalValueTag + ") does not contain the value: " + m_ConditionalValue + " on position: " + m_PositionConditionalValue.ToString() + "."
                    Me.SetValid(message)
                End If
            Else
                message = "Conditional attribute (" + m_ConditionalValueTag + ") is not present in the dataset."
                Me.SetValid(message)
            End If
        End If


        Me.Report()

    End Sub

End Class