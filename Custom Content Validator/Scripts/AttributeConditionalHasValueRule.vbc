Class AttributeConditionalHasValueRule
    Inherits AttributeRule
    ''' <summary>
    ''' this rule verifies if the value in this attribute is a correct one, according to the value that is provided
    ''' </summary>
    ''' <param name="valueTag">the attribute that needs to be checked</param>
    ''' <param name="value">contains the value which the attribute may have</param>
    ''' <param name="iodType"></param>
    ''' <param name="severity"></param>
    ''' <remarks></remarks>

    Public Sub New(ByVal tag As String, ByVal conditionalTag As String, ByVal conditionalPosition As Integer, ByVal conditionalValue() As String, ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Attribute Conditional Has Value Rule", tag, iodType, severity)
        m_ConditionalValue = conditionalValue
        m_ConditionalTag = conditionalTag
        m_ConditionalPosition = conditionalPosition
    End Sub

    Private m_ConditionalTag As String
    Private m_ConditionalValue() As String
    Private m_ConditionalPosition As Integer
    Private AllSequenceItemsPresent As Boolean = False
    Private PreviousSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
    Private m_dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile

    Public Overrides Sub ApplyRule(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal iodType As IODType)
        m_dicomFile = dicomFile
        Dim message As String
        If iodType = IODTypeRule Then
            Dim sequenceItems As New List(Of String)
            Dim SequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
            Dim count As Integer = 0
            Dim split() As String = {"test"}
            If (m_TagSequence.Contains("/")) Then
                split = m_TagSequence.Split("/")
                If (dicomFile.DataSet.Exists(split(count))) Then
                    For i As Integer = 1 To dicomFile.DataSet.GetitemCount(split(count))
                        SequenceItem = dicomFile.DataSet.Getitem(split(count), i)

                        If (count < split.Length - 1) Then
                            CheckNextSequenceItem(SequenceItem, split, count + 1)
                        Else
                            AllSequenceItemsPresent = True
                            DoTheCheckWithSequenceItem(SequenceItem, split(split.Length - 1))
                        End If

                    Next
                Else
                    AllSequenceItemsPresent = True
                    message = "SequenceItem (" + split(count) + " for attribute: (" + split(split.Length - 1) + ") is not present."
                    Me.SetError(message)
                    Me.Report()
                End If

            Else
                AllSequenceItemsPresent = True
                DoTheCheckWithDicomFile(dicomFile, m_TagSequence)
            End If


            If Not AllSequenceItemsPresent Then
                message = "The attribute: (" + split(split.Length - 1) + ") is not present."
                Me.SetError(message)
                Me.Report()
            End If

        End If
    End Sub

    Public Sub CheckNextSequenceItem(ByVal SequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem, ByVal Split() As String, ByVal Count As Integer)
        Dim NextSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
        If (Count < Split.Length - 1) Then
            If (Count = Split.Length - 2) Then
                PreviousSequenceItem = SequenceItem
            End If
            If (SequenceItem.Exists(Split(Count))) Then
                For z As Integer = 1 To SequenceItem.GetitemCount(Split(Count))
                    NextSequenceItem = SequenceItem.Getitem(Split(Count), z)
                    CheckNextSequenceItem(NextSequenceItem, Split, Count + 1)
                Next
            End If
        Else
            AllSequenceItemsPresent = True
            DoTheCheckWithSequenceItem(SequenceItem, Split(Split.Length - 1))
        End If

    End Sub

    Public Sub DoTheCheckWithDicomFile(ByRef dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile, ByVal tag As String)
        Dim message As String
        Dim n As Integer
        Dim found As Boolean = False

        If dicomFile.DataSet.Exists(m_ConditionalTag) Then
            If Not m_ConditionalValue Is Nothing Then
                For n = 0 To m_ConditionalValue.Length - 1
                    If dicomFile.DataSet(m_ConditionalTag).Values.Item(m_ConditionalPosition) = m_ConditionalValue(n) Then
                        found = True
                    End If
                Next
            Else
                found = True
            End If

            If found Then
                If Not dicomFile.DataSet(tag).Exists Then
                    message = "The attribute: (" + tag + ") is not present but should be present with a value."
                    Me.SetError(message)
                ElseIf dicomFile.DataSet(tag).Values.Item(0) = "" Then
                    message = "The attribute (" + tag + ") contains an empty value, but should contain a value."
                    Me.SetError(message)
                Else
                    message = "The attribute (" + tag + ") contains a value: " + dicomFile.DataSet(tag).Values.Item(0).ToString()
                    Me.SetValid(message)
                End If
            Else
                message = "Conditional attribute (" + m_ConditionalTag + ") does not contain the value: "
                For n = 0 To m_ConditionalValue.Length - 1
                    If n > 0 Then
                        message = message + " or"
                    End If
                    message = message + " " + m_ConditionalValue(n)
                Next
                Me.SetValid(message)
            End If
        Else
            message = "Conditional attribute (" + m_ConditionalTag + ") is not present in the dataset."
            Me.SetValid(message)
        End If

        Me.Report()

    End Sub

    Public Sub DoTheCheckWithSequenceItem(ByVal SequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem, ByVal tag As String)
        Dim message As String
        Dim n As Integer
        Dim found As Boolean = False
        Dim done As Boolean = False
        Dim ConditionalSequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing
        Dim CorrectConditionalTag As String

        If (m_ConditionalTag.StartsWith("../")) Then
            ConditionalSequenceItem = PreviousSequenceItem
            CorrectConditionalTag = m_ConditionalTag.Remove(0, 3)
        ElseIf (m_ConditionalTag.StartsWith("/")) Then
            ConditionalSequenceItem = SequenceItem
            CorrectConditionalTag = m_ConditionalTag.Remove(0, 1)
        Else
            CorrectConditionalTag = m_ConditionalTag
        End If

        If ConditionalSequenceItem Is Nothing Then
            If m_dicomFile.DataSet.Exists(m_ConditionalTag) Then
                If Not m_ConditionalValue Is Nothing Then
                    For n = 0 To m_ConditionalValue.Length - 1
                        If m_dicomFile.DataSet(m_ConditionalTag).Values.Item(m_ConditionalPosition) = m_ConditionalValue(n) Then
                            found = True
                        End If
                    Next
                Else
                    found = True
                End If
            Else
                message = "Conditional attribute (" + m_ConditionalTag + ") is not present in the dataset."
                Me.SetValid(message)
                done = True
            End If

        Else
            If ConditionalSequenceItem.Item(CorrectConditionalTag).Exists Then
                If Not m_ConditionalValue Is Nothing Then
                    For n = 0 To m_ConditionalValue.Length - 1
                        If ConditionalSequenceItem(CorrectConditionalTag).Values.Item(m_ConditionalPosition) = m_ConditionalValue(n) Then
                            found = True
                        End If
                    Next
                Else
                    found = True
                End If
            Else
                message = "Conditional attribute (" + m_ConditionalTag + ") is not present in the dataset."
                Me.SetValid(message)
                done = True
            End If
        End If

        If found Then
            If Not SequenceItem.Item(tag).Exists Then
                message = "The attribute: (" + tag + ") is not present but should be present with a value."
                Me.SetError(message)
            ElseIf SequenceItem(tag).Values.Item(0) = "" Then
                message = "The attribute (" + tag + ") contains an empty value, but should contain a value."
                Me.SetError(message)
            Else
                message = "The attribute (" + tag + ") contains a value: " + SequenceItem(tag).Values.Item(0).ToString()
                Me.SetValid(message)
            End If
        ElseIf Not done Then
            message = "Conditional attribute (" + m_ConditionalTag + ") does not contain the value: "
            For n = 0 To m_ConditionalValue.Length - 1
                If n > 0 Then
                    message = message + " or"
                End If
                message = message + " " + m_ConditionalValue(n)
            Next
            Me.SetValid(message)
        End If

        Me.Report()

    End Sub
End Class