Class RequestedCMoveSopInstanceUIDsRule
    Inherits MappingRule

    Private m_SourceDataSetName As String ' for logging purposes
    Private m_sourceDataSet As DvtkHighLevelInterface.Dicom.Other.DataSet
    Private m_sourceTag As String
    Private m_targetTag As String


    ''' <summary>
    ''' Ctor.
    ''' </summary>
    ''' <param name="sourceDataSet">The source dataset</param>
    ''' <param name="iodType">IODType of the rule</param>
    ''' <param name="severity">Error severiry of the rule</param>
    ''' <remarks></remarks>
    Public Sub New(ByVal sourceDataSet As DvtkHighLevelInterface.Dicom.Other.DataSet, ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("RequestedCMoveSopInstanceUIDsRule", iodType, severity)

        m_sourceDataSet = sourceDataSet
        m_sourceTag = Tags.ReferencedSOPInstanceUIDMOVE
        m_targetTag = Tags.SOPInstanceUID

        ' Set the dataset name to a FIXED value for logging purpose:
        m_SourceDataSetName = "Reference Dataset"

    End Sub

    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)

        Dim sourceValue As String = ""
        Dim targetValue As String = ""
        Dim errorEncountered As Boolean = False
        Dim sourceValues(0) As String
        Dim targetValues(0) As String
        Dim countSourceValue As Integer = Nothing
        Dim i As Integer = 0

        If iodType = IODTypeRule Then

            Dim ReferencedSOPInstanceUID As String
            Dim counter As Integer = 0
            Dim nrOfIisItems As Integer = m_sourceDataSet.Item(Tags.InputInformationSequence).ItemCount
            If nrOfIisItems > 0 Then

                ' Read all SOP Instance UIDs from Input Information Sequence from C-Find Response
                For iisItem As Integer = 1 To nrOfIisItems
                    Dim sqIisItem As Dicom.Other.SequenceItem = m_sourceDataSet.Item(Tags.InputInformationSequence).GetItem(iisItem)

                    'loop through items

                    If sqIisItem.Exists(Tags.StudyInstanceUID) Then
                        'Dim studyInstanceUID1 As String = sqIisItem.GetValues(Tags.StudyInstanceUID).Item(0)

                        'Dim nrOfSeriesItems As Integer = sqIisItem.GetitemCount(Tags.ReferencedSeriesSequenceMOVE)
                        'For serieItem As Integer = 1 To nrOfSeriesItems
                        'Dim sqSerieItem As Dicom.Other.SequenceItem = sqIisItem.Getitem(Tags.ReferencedSeriesSequenceMOVE, serieItem)
                        Dim nrOfSOPItems As Integer = sqIisItem.GetitemCount(Tags.ReferencedSOPSequenceMOVE)
                        For SOPItem As Integer = 1 To nrOfSOPItems
                            Dim sqSOPItem As Dicom.Other.SequenceItem = sqIisItem.Getitem(Tags.ReferencedSOPSequenceMOVE, SOPItem)
                            If sqSOPItem.Exists(Tags.ReferencedSOPInstanceUIDMOVE) Then
                                ReferencedSOPInstanceUID = sqSOPItem.GetValues(Tags.ReferencedSOPInstanceUIDMOVE).Item(0)
                                Array.Resize(sourceValues, counter + 1)
                                sourceValues(counter) = ReferencedSOPInstanceUID
                                counter = counter + 1
                            Else
                                Me.SetError("The Attribute: " + Tags.GetTagName(Tags.ReferencedSOPInstanceUIDMOVE) + "'(" + Tags.ReferencedSOPInstanceUIDMOVE + ") is not present in the reference Dataset: " + m_SourceDataSetName + ".")
                                errorEncountered = True
                            End If
                        Next
                        'Next
                    Else
                        Me.SetError("The Attribute: " + Tags.GetTagName(Tags.StudyInstanceUID) + "'(" + Tags.StudyInstanceUID + ") is not present in the reference Dataset: " + m_SourceDataSetName + ".")
                        errorEncountered = True
                    End If
                Next
            Else
                Me.SetError("The Attribute: " + Tags.GetTagName(Tags.InputInformationSequence) + "'(" + Tags.InputInformationSequence + ") is not present in the reference Dataset: " + m_SourceDataSetName + ".")
                errorEncountered = True
            End If


            ' If target tag exist in received message, get it's value
            targetValue = getValueOfTag(dicomMessage, m_targetTag)
            If targetValue Is Nothing Then
                Me.SetError("The Attribute: " + Tags.GetTagName(m_targetTag) + "'(" + m_targetTag + ") is not present in the received message.")
                errorEncountered = True
            ElseIf targetValue Is "" Then
                'Target tag contains empty value, this is not allowed, setError and stop processing
                Me.SetError("The Attribute: " + Tags.GetTagName(m_targetTag) + "'(" + m_targetTag + ") contains an empty value.")
                errorEncountered = True
            End If

            If Not errorEncountered Then
                Dim WordIndex As Integer = -1
                If targetValue.Contains("\") Then
                    Array.Resize(targetValues, (targetValue.Split("\"c)).Length)
                    targetValues = targetValue.Split("\"c)
                Else
                    Array.Resize(targetValues, (targetValue.Split("\"c)).Length)
                    targetValues(0) = targetValue
                End If

                For Each targetValue In targetValues
                    If WordIndex = -1 Then
                        WordIndex = Array.IndexOf(sourceValues, targetValue)
                    End If
                    If WordIndex = -1 Then
                        Me.SetError("The Value: " + targetValue + " is not present in the C-FIND-RSP.")
                        errorEncountered = True
                    Else
                        If errorEncountered = True Then
                            Me.SetError("The Value: " + targetValue + " is present in the C-FIND-RSP. but one of the previously checked is not present.")
                        Else
                            Me.SetValid("The Value: " + targetValue + " is present in the C-FIND-RSP.")
                        End If

                    End If
                Next
                WordIndex = -1
            End If
            Me.Report()
        End If
    End Sub

    Private Function getValueOfTag(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal tag As String) As String
        Dim retVal As String = Nothing

        If (dicomMessage.DataSet.Exists(tag)) Then
            retVal = dicomMessage.DataSet(tag).Values(0)
        ElseIf (dicomMessage.CommandSet.Exists(tag)) Then
            retVal = dicomMessage.CommandSet(tag).Values(0)
        End If
        Return retVal
    End Function

End Class