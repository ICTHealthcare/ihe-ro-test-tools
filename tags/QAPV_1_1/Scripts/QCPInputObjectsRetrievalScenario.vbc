Class QCPInputObjectsRetrievalScenario
    Inherits Scenario

    'Constructor
    Public Sub New()
        Dim qcpActor As QCPActor = New QCPActor()
        Dim qcrActor As QCRActor = New QCRActor()

        Dim kindOfCheckDialog As ChooseKindOfCheckDialog = New ChooseKindOfCheckDialog(True)
        Dim errorDialog As ErrorDialog = New ErrorDialog()

        Try

            ' Check if dataset is present
            DataSetHandler.CheckUpsInputDataSets()

            'Check if the N-Create-req that is created by the QCP Start – testscenario is present, if not then stop execution and inform the user (in the validation results)
            Try
                DataSetHandler.CheckUPSMessageExists(DataSetHandler.UPSCacheXMLFileName, "N-CREATE-REQ")
            Catch ex As Exception
                Dim errorMessage As String = "First run the QCP Start Scenario, at least once."
                errorDialog.SetMessage(errorMessage)
                errorDialog.ShowDialog()
                Throw ex
            End Try

            kindOfCheckDialog.ShowDialog()
            Dim roq3transaction As ROQ3Transaction = Nothing
            Dim roq4transaction As ROQ4Transaction = Nothing

            'Configure the receive step: set the cstore thread as part of the C-Move command
            Dim receive As ReceiveScenarioStep

            If (kindOfCheckDialog.Difference) Then
                receive = New ReceiveScenarioStep(New QCRActor(), New QCPActor(), True, CMOVERQ, "Difference")
                roq3transaction = New ROQ3Transaction(qcrActor, qcpActor)
                receive.AddTransaction(roq3transaction)
            Else
                receive = New ReceiveScenarioStep(New QCRActor(), New QCPActor(), True, CMOVERQ, "Dose")
                roq4transaction = New ROQ4Transaction(qcrActor, qcpActor)
                receive.AddTransaction(roq4transaction)
            End If

            
            'Configure the validate step
            Dim validate As ValidateScenarioStep = New ValidateScenarioStep(receive)

            If Not (roq3transaction Is Nothing) Then
                validate.AddRules(roq3transaction.GetCommonTransactionRulesForRequest())
            Else
                validate.AddRules(roq4transaction.GetCommonTransactionRulesForRequest())
            End If

            'Add the steps to the list
            m_scenarioSteps.Add(receive)
            m_scenarioSteps.Add(validate)

        Catch ex As Exception
            ErrorDialog.SetMessage(ex.Message)
            ErrorDialog.ShowDialog()
            Throw ex
        End Try

    End Sub
End Class
