

Class ReferenceDataSet

    'Contains all the loaded XML files which contain the paths to the dicomfiles of the Dataset
    Private m_DataSetXML As System.Xml.XmlDocument = Nothing

    'Contains the datasets from the dicomfiles
    Private m_RTDose As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing
    Private m_RTStructureSet As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing
    Private m_RTPlanGeometric As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing
    Private m_RTPlanDosimetric As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing
    Private m_CTImageSets As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing
    Private m_SpatialRegistration() As DvtkHighLevelInterface.Dicom.Messages.DicomMessage
    Private m_CTImageFiles As Hashtable = Nothing

    'the actual instance of the ReferenceDataSet class
    Private Shared m_instance As ReferenceDataSet = Nothing
    Private m_datasetPath As String

    'we hide the constructor from the outside
    Private Sub New()
    End Sub

    'Static method for creating one single instance
    Public Shared Function GetInstance() As ReferenceDataSet
        ' initialize if not already done
        If m_instance Is Nothing Then
            m_instance = New ReferenceDataSet
        End If
        ' return the initialized instance of the ReferenceDataSet Class
        Return m_instance
    End Function 'Instance

    'Make the ReferenceDataSet class aware of a dataset on a given location. Returns false when failed, true when succeeded.
    Public Function LoadNewDataSet(ByVal XMLFilePath As String) As Boolean
        Dim loadingSucceeded As Boolean = False

        'Reset Member Variables
        m_DataSetXML = New System.Xml.XmlDocument
        m_CTImageFiles = New Hashtable
        m_RTDose = Nothing
        m_RTStructureSet = Nothing
        m_RTPlanGeometric = Nothing
        m_RTPlanDosimetric = Nothing
        m_CTImageSets = Nothing

        Try 'loading the XML file
            m_DataSetXML.Load(XMLFilePath)
            loadingSucceeded = True
        Catch ex As System.Exception
            'failed reading the file
            'debug.writeLine("Failed reading: " + XMLFilePath + ". Make sure the file is present, formatted correctly and you have readaccess")
        End Try

        If loadingSucceeded Then
            'check whether the path in the xml file exists

            Dim relativeTestDataPath As String
            relativeTestDataPath = m_DataSetXML.SelectSingleNode("/DataSet/DataSetPath").InnerText
            m_datasetPath = TestToolConfiguration.GetInstance.SessionPath + "\" + relativeTestDataPath
            Logger.GetInstance.LogMessage(m_datasetPath)
            If Not System.IO.Directory.Exists(m_datasetPath) Then
                loadingSucceeded = False
                'debug.writeLine("Could not find the directory of the testdata in the XML system.io.File.")
                Return loadingSucceeded
            End If

            'The testdataset folder seems to exist. Lets check wether all files (except for CTImages) mentioned in the XML are present.
            If Not ValidateFilesExistance() Then
                loadingSucceeded = False
                'No debug line, ValidateFilesExistance() does that for us
                Return loadingSucceeded
            End If

            'Checking the existance of CTImage files now
            If Not validateCTImageFilesExistance() Then
                loadingSucceeded = False
                'No debug line, validateCTImageFilesExistance() does that for us
                Return loadingSucceeded
            End If
        End If

        Return loadingSucceeded
    End Function


    Public Function GetCTImage(ByVal CTImageSetNumber As Integer, ByVal ImageNumber As Integer) As DvtkHighLevelInterface.Dicom.Messages.DicomMessage
        Dim requestedDataset As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ)
        'Make a key for the HashTable based on the input parameters
        Dim requestedKey As String = CTImageSetNumber.ToString + "," + ImageNumber.ToString

        'Check if the CTImage file is loaded allready
        If m_CTImageFiles.Contains(requestedKey) Then
            'If its loaded allready then just return it
            requestedDataset = CType(m_CTImageFiles(requestedKey), DvtkHighLevelInterface.Dicom.Messages.DicomMessage)
        Else 'If its not loaded yet then Load it, put it in the HashTable and return the DataSet
            CTImageSetNumber = CTImageSetNumber
            ImageNumber = ImageNumber
            'Get the FileName (without the path) of the requested image
            Dim requestedImageName As String = m_DataSetXML.SelectSingleNode("/DataSet/CTImageSet[" + CTImageSetNumber.ToString + "]/CTImage[" + ImageNumber.ToString + "]").InnerText
            'Add the filename to the filepath the file is located
            'Dim fileName As String = m_DataSetXML.SelectSingleNode("/DataSet/DataSetPath").InnerText + "\" + requestedImageName
            Dim fileName As String = m_datasetPath + "\" + requestedImageName
            Try
                'Read the Dataset from the file
                requestedDataset.DataSet.Read(fileName)
                'Add the DataSet to the HashTable
                m_CTImageFiles.Add(requestedKey, requestedDataset)
            Catch ex As DvtkHighLevelInterface.Common.Other.HliException
                Throw New System.Exception("Error Reading the file from the Dataset: " + fileName)
            End Try
        End If

        Return requestedDataset
    End Function
    'returns the requested image using the ImageSetNumber, ImageNumber and iodType // for CT, MR and PET only
    Public Function GetSliceImage(ByVal ImageSetNumber As Integer, ByVal ImageNumber As Integer, ByVal iodType As IODType) As DvtkHighLevelInterface.Dicom.Messages.DicomMessage

        Dim requestedDataset As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ)
        'Make a key for the HashTable based on the input parameters
        Dim requestedKey As String = ImageSetNumber.ToString + "," + ImageNumber.ToString
        Dim sliceImagefiles
        Dim part1 As String
        Dim part2 As String

        'set the correct values for CT, Mr or PET
        Select Case iodType
            Case iodType.CTImage
                sliceImagefiles = m_CTImageFiles
                part1 = "/DataSet/CTImageSet["
                part2 = "]/CTImage["
        End Select

        'Check if the CTImage file is loaded allready
        If sliceImagefiles.Contains(requestedKey) Then
            'If its loaded allready then just return it
            requestedDataset = CType(sliceImagefiles(requestedKey), DvtkHighLevelInterface.Dicom.Messages.DicomMessage)
        Else 'If its not loaded yet then Load it, put it in the HashTable and return the DataSet
            ImageSetNumber = ImageSetNumber
            ImageNumber = ImageNumber
            'Get the FileName (without the path) of the requested image
            Dim requestedImageName As String = m_DataSetXML.SelectSingleNode(part1 + ImageSetNumber.ToString + part2 + ImageNumber.ToString + "]").InnerText
            'Add the filename to the filepath the file is located
            'Dim fileName As String = m_DataSetXML.SelectSingleNode("/DataSet/DataSetPath").InnerText + "\" + requestedImageName
            Dim fileName As String = m_datasetPath + "\" + requestedImageName
            Try
                'Read the Dataset from the file
                requestedDataset.DataSet.Read(fileName)
                'Add the DataSet to the HashTable
                sliceImagefiles.Add(requestedKey, requestedDataset)
            Catch ex As DvtkHighLevelInterface.Common.Other.HliException
                Throw New System.Exception("Error Reading the file from the Dataset: " + fileName)
            End Try
        End If

        Return requestedDataset
    End Function

    'Returns the DataSet of the RTStructureSet object in the ReferenceDataSet
    Public Function GetRTStructureSet() As DvtkHighLevelInterface.Dicom.Messages.DicomMessage
        'Dim fileName As String = m_DataSetXML.SelectSingleNode("/DataSet/DataSetPath").InnerText + "\" + m_DataSetXML.SelectSingleNode("/DataSet/RTStructureSet").InnerText
        Dim fileName As String = m_datasetPath + "\" + m_DataSetXML.SelectSingleNode("/DataSet/RTStructureSet").InnerText

        'Check if the StructureSet has been loaded allready
        If m_RTStructureSet Is Nothing Then
            m_RTStructureSet = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ)
            Try
                'Read the RT StructureSet file
                m_RTStructureSet.DataSet.Read(fileName)
            Catch ex As DvtkHighLevelInterface.Common.Other.HliException
                Throw New System.Exception("Error Reading the file from the Dataset: " + fileName)
            End Try
        End If

        Return m_RTStructureSet
    End Function


    'Returns the DataSet of the RTDose object in the ReferenceDataSet
    Public Function GetRTDose() As DvtkHighLevelInterface.Dicom.Messages.DicomMessage
        'Dim fileName As String = m_DataSetXML.SelectSingleNode("/DataSet/DataSetPath").InnerText + "\" + m_DataSetXML.SelectSingleNode("/DataSet/RTDose").InnerText
        Dim fileName As String = m_datasetPath + "\" + m_DataSetXML.SelectSingleNode("/DataSet/RTDose").InnerText

        'Check if the RTDose has been loaded allready
        If m_RTDose Is Nothing Then
            m_RTDose = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ)
            Try
                'Read the RTDose file
                m_RTDose.DataSet.Read(fileName)
            Catch ex As DvtkHighLevelInterface.Common.Other.HliException
                Throw New System.Exception("Error Reading the file from the Dataset: " + fileName)
            End Try
        End If

        Return m_RTDose
    End Function


    'Returns the DataSet of the RTPlan Geometric Object in the ReferenceDataSet
    Public Function GetRTPlanGeometric() As DvtkHighLevelInterface.Dicom.Messages.DicomMessage
        'Dim fileName As String = m_DataSetXML.SelectSingleNode("/DataSet/DataSetPath").InnerText + "\" + m_DataSetXML.SelectSingleNode("/DataSet/RTPlanGeometric").InnerText
        Dim fileName As String = m_datasetPath + "\" + m_DataSetXML.SelectSingleNode("/DataSet/RTPlanGeometric").InnerText

        'Check if the RT Plan Geometric has been loaded allready
        If m_RTPlanGeometric Is Nothing Then
            m_RTPlanGeometric = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ)
            Try
                'Read the RT Plan Geometric file
                m_RTPlanGeometric.DataSet.Read(fileName)
            Catch ex As DvtkHighLevelInterface.Common.Other.HliException
                Throw New System.Exception("Error Reading the file from the Dataset: " + fileName)
            End Try
        End If

        Return m_RTPlanGeometric
    End Function


    'Returns the DataSet of the RTPlan Dosimetric Object in the ReferenceDataSet
    Public Function GetRTPlanDosimetric() As DvtkHighLevelInterface.Dicom.Messages.DicomMessage
        'Dim fileName As String = m_DataSetXML.SelectSingleNode("/DataSet/DataSetPath").InnerText + "\" + m_DataSetXML.SelectSingleNode("/DataSet/RTPlanDosimetric").InnerText
        Dim fileName As String = m_datasetPath + "\" + m_DataSetXML.SelectSingleNode("/DataSet/RTPlanDosimetric").InnerText

        'Check if the RT Plan Dosimetric has been loaded allready
        If m_RTPlanDosimetric Is Nothing Then
            m_RTPlanDosimetric = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ)
            Try
                'Read the RTPlan Dosimetric
                m_RTPlanDosimetric.DataSet.Read(fileName)
            Catch ex As DvtkHighLevelInterface.Common.Other.HliException
                Throw New System.Exception("Error Reading the file from the Dataset: " + fileName)
            End Try
        End If

        Return m_RTPlanDosimetric
    End Function

    'Counts the number of Images in the given ImageSet. Returns 0 when the imageset does not exist
    Public Function GetImageCount(ByVal ImageSetNr As Integer, ByVal IodType As IODType) As Integer

        Dim a As String = "/DataSet/CTImageSet[" + (ImageSetNr).ToString + "]"
        'Get the ImageSetNode
        Dim node As System.Xml.XmlNode = m_DataSetXML.SelectSingleNode(a)

        'Check wether the ImageSetNumber is Valid
        If (ImageSetNr < 1) Or (ImageSetNr > m_DataSetXML.SelectNodes("/DataSet/CTImageSet").Count()) Then
            Return 0
        End If

        'return the number of childs of the CTImageSet node
        Return m_DataSetXML.SelectSingleNode(a).ChildNodes.Count()
    End Function

    'Counts the number of Images in the given ImageSet. Returns 0 when the imageset does not exist
    Public Function GetImageSetCount() As Integer

        Dim a As String = "/DataSet/CTImageSet"
        'Get the ImageSetNode
        Dim nodes As System.Xml.XmlNodeList = m_DataSetXML.SelectNodes(a)

        Return nodes.Count
    End Function

    'Checks wether the files named in the configuration exist in the dataset folder. True when valid. False when not valid.
    Private Function ValidateFilesExistance() As Boolean
        Dim filesExist As Boolean = True
        'The directory where the files are located
        'Dim dirPath As String = m_DataSetXML.SelectSingleNode("/DataSet/DataSetPath").InnerText + "\"
        Dim dirPath As String = m_datasetPath + "\"

        'For every dataset Object we check wether the config file contains a filename and wether the data set files exists.
        If Not (XMLAttributeExists("/DataSet/RTStructureSet") And System.IO.File.Exists(dirPath + m_DataSetXML.SelectSingleNode("/DataSet/RTStructureSet").InnerText)) Then
            filesExist = False
            'debug.writeLine("Failed to locate the RTStructureSet object. Check your DataSet files and your dataset XML system.io.system.io.File.")
        End If
        If Not (XMLAttributeExists("/DataSet/RTPlanDosimetric") And System.IO.File.Exists(dirPath + m_DataSetXML.SelectSingleNode("/DataSet/RTPlanDosimetric").InnerText)) Then
            filesExist = False
            'debug.writeLine("Failed to locate the RTPlanDosimetric object. Check your DataSet files and your dataset XML system.io.system.io.File.")
        End If
        If Not (XMLAttributeExists("/DataSet/RTPlanGeometric") And System.IO.File.Exists(dirPath + m_DataSetXML.SelectSingleNode("/DataSet/RTPlanGeometric").InnerText)) Then
            filesExist = False
            'debug.writeLine("Failed to locate the RTPlanGeometric object. Check your DataSet files and your dataset XML system.io.system.io.File.")
        End If
        If Not (XMLAttributeExists("/DataSet/RTDose") And System.IO.File.Exists(dirPath + m_DataSetXML.SelectSingleNode("/DataSet/RTDose").InnerText)) Then
            filesExist = False
            'debug.writeLine("Failed to locate the RTDose object. Check your DataSet files and your dataset XML system.io.File.")
        End If

        Return filesExist
    End Function


    'Checks wether the CTImage files exist in the ReferenceDataSet folder
    Private Function validateCTImageFilesExistance() As Boolean
        'The directory where the files are located
        'Dim dirPath As String = m_DataSetXML.SelectSingleNode("/DataSet/DataSetPath").InnerText + "\"
        Dim dirPath As String = m_datasetPath + "\"

        'First we select all the CTImageSet in the XML file
        Dim ImageSetList As System.Xml.XmlNodeList = m_DataSetXML.SelectNodes("/DataSet/CTImageSet")

        If ImageSetList.Count = 0 Then
            'debug.writeLine("No CTImage sets found in the XML system.io.File.")
        Else
            Dim i As Integer
            'for every <CTImageSet> Tag in the XML file
            For i = 0 To ImageSetList.Count - 1
                Dim imageSet As System.Xml.XmlNodeList = ImageSetList.Item(i).ChildNodes()
                Dim index As Integer
                'Check if the <CTImageSet> tag contains images
                If imageSet.Count = 0 Then
                    Return False 'files do not exist so we return false
                Else
                    'For every CTImage in the <CTImageSet> tag
                    For index = 0 To imageSet.Count - 1
                        Dim fileName As String = imageSet.Item(i).InnerText
                        'Check if the FIle Exists
                        If Not System.IO.File.Exists(dirPath + "\" + fileName) Then
                            'debug.writeLine("Cannot find a file. Make sure your config XML is correct and the dataset exists. File not found: " + dirPath + "\" + fileName)
                            Return False 'files do not exist so we return false
                        End If
                    Next
                End If
            Next
        End If
        Return True
    End Function


    'Checks if an XML attribute exists on given XPath location
    Private Function XMLAttributeExists(ByVal XPathToXMLAttribute As String) As Boolean
        Dim XmlAttribute As String
        Dim attributeIsValid As Boolean = False

        Try
            XmlAttribute = m_DataSetXML.SelectSingleNode(XPathToXMLAttribute).InnerText
            attributeIsValid = True
        Catch ex As System.Exception
            'debug.writeLine("Could not locate \"" + XPathToXMLAttribute " \ " in the XML system.io.File. Is this dataset needed for this scenario?")
        End Try

        Return attributeIsValid
    End Function

    Public Function GetSpatialRegistration() As Object
        Dim nodes As System.Xml.XmlNodeList = m_DataSetXML.SelectNodes("/DataSet/SpatialRegistration")

        If m_SpatialRegistration Is Nothing Then
            Dim regSet As System.Xml.XmlNodeList = nodes.Item(0).ChildNodes()
            ReDim m_SpatialRegistration(regSet.Count - 1)

            Dim i As Integer
            For i = 0 To regSet.Count - 1
                Dim fileName = m_datasetPath + "\" + regSet.Item(i).InnerText
                m_SpatialRegistration(i) = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ)
                Try
                    m_SpatialRegistration(i).DataSet.Read(fileName)
                Catch ex As DvtkHighLevelInterface.Common.Other.HliException
                    Throw New System.Exception("Error Reading the file from the Dataset: " + fileName)
                End Try
            Next
        End If
        Return m_SpatialRegistration
    End Function

    Public Function GetDataSetXML()
        If Not m_DataSetXML Is Nothing Then
            Return m_DataSetXML
        Else
            Return Nothing
        End If
    End Function

End Class 'ReferenceDataSet 