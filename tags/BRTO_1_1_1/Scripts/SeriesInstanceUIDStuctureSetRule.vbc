Class SeriesInstanceUIDStuctureSetRule
    Inherits MessageCollectionRule

    Public Sub New(ByVal iodType As IODType, ByVal severity As ErrorSeverity, ByVal ctSet As CTSet)

        MyBase.New("Series Instance UID Stucture Set Rule", iodType, severity)
        m_ctSet = ctSet

    End Sub
    Private m_iodType As IODType
    Private m_severity As ErrorSeverity
    Private m_ctSet As CTSet
    Private m_message As String
    Private m_valid As Boolean = False
    Private m_messageCollectionHelper As messageCollectionHelper


    Public Overrides Sub ApplyRule(ByRef dataSetCollection As DvtkHighLevelInterface.Dicom.Messages.DicomMessageCollection)
        m_messageCollectionHelper = New messageCollectionHelper(dataSetCollection)

        Dim structureSetDataSet As DvtkHighLevelInterface.Dicom.Other.DataSet = Nothing
        Dim ctImageDataSet As DvtkHighLevelInterface.Dicom.Other.DataSet = Nothing
        Dim done As Boolean = False

        Dim seqItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing
        Dim referencedFrameofReferenceSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim rtReferencedStudySequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim rtReferencedSeriesSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing
        Dim seriesInstanceUIDAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = Nothing

        If m_messageCollectionHelper.GetStructureSet() Is Nothing Then
            m_valid = False
            m_message = "No RT Structure Set received"
        Else
            structureSetDataSet = m_messageCollectionHelper.GetStructureSet()

            If structureSetDataSet.Exists(Tags.ReferencedFrameofReferenceSequence) = False Then
                m_valid = False
                done = True
                m_message = "The attribute: '" + Tags.GetTagName(Tags.ReferencedFrameofReferenceSequence) + "' (" + Tags.ReferencedFrameofReferenceSequence + ") is not present."
            Else
                referencedFrameofReferenceSequenceAttribute = structureSetDataSet(Tags.ReferencedFrameofReferenceSequence)
                Dim i As Integer
                If done = False Then
                    For i = 1 To referencedFrameofReferenceSequenceAttribute.ItemCount()
                        If done = False Then
                            seqItem = referencedFrameofReferenceSequenceAttribute.GetItem(i)
                            'RT Referenced Study Sequence (0x30060012) check if exists
                            If seqItem.Exists(Tags.RtReferencedStudySequenceTag) = False Then
                                m_valid = False
                                done = True
                                m_message = "The attribute: '" + Tags.GetTagName(Tags.RtReferencedStudySequenceTag) + "' (" + Tags.RtReferencedStudySequenceTag + ") is not present."
                            Else
                                'RT Referenced Study Sequence (0x30060012)
                                rtReferencedStudySequenceAttribute = seqItem(Tags.RtReferencedStudySequenceTag)
                                Dim j As Integer
                                For j = 1 To rtReferencedStudySequenceAttribute.ItemCount()
                                    If done = False Then
                                        seqItem = rtReferencedStudySequenceAttribute.GetItem(j)
                                        'RT Referenced Series Sequence (0x30060014) check if exists
                                        If seqItem.Exists(Tags.RtReferencedSeriesSequenceTag) = False Then
                                            m_valid = False
                                            done = True
                                            m_message = "The attribute: '" + Tags.GetTagName(Tags.RtReferencedSeriesSequenceTag) + "' (" + Tags.RtReferencedSeriesSequenceTag + ") is not present."
                                        Else
                                            'RT Referenced Series Sequence (0x30060014)
                                            rtReferencedSeriesSequenceAttribute = seqItem(Tags.RtReferencedSeriesSequenceTag)
                                            Dim k As Integer
                                            For k = 1 To rtReferencedSeriesSequenceAttribute.ItemCount()

                                                If done = False Then
                                                    seqItem = rtReferencedSeriesSequenceAttribute.GetItem(k)
                                                    If seqItem.Exists(Tags.SeriesInstanceUID) = True Then

                                                        seriesInstanceUIDAttribute = seqItem(Tags.SeriesInstanceUID)

                                                        'Get the first image, for alle images in the series the Series Instance Uid is the same.
                                                        Dim refData As ReferenceDataSet = ReferenceDataSet.GetInstance
                                                        If Not refData.GetDataSetXML Is Nothing Then
                                                            ctImageDataSet = ReferenceDataSet.GetInstance().GetCTImage(1, 1).DataSet
                                                        Else
                                                            ctImageDataSet = m_messageCollectionHelper.GetSliceImage(IODType.CTImage, 1)
                                                        End If

                                                        If ctImageDataSet Is Nothing Then
                                                            m_valid = False
                                                            done = True
                                                            m_message = "No CT-Images received"
                                                        Else
                                                            If ctImageDataSet(Tags.SeriesInstanceUID).Values.Equals(seriesInstanceUIDAttribute.Values) Then
                                                                m_valid = True
                                                                m_message = "'" + Tags.GetTagName(Tags.SeriesInstanceUID) + "' (" + Tags.SeriesInstanceUID + ") of the Structure Set matches the 'SeriesInstanceUID' of the CT-images"
                                                            Else
                                                                m_valid = False
                                                                done = True
                                                                m_message = "'" + Tags.GetTagName(Tags.SeriesInstanceUID) + "' (" + Tags.SeriesInstanceUID + ") of the Structure Set does not match the 'SeriesInstanceUID' of the CT-images"
                                                            End If
                                                        End If
                                                    Else
                                                        m_valid = False
                                                        done = True
                                                        m_message = "'" + Tags.GetTagName(Tags.SeriesInstanceUID) + "' (" + Tags.SeriesInstanceUID + ") of '" + Tags.GetTagName(Tags.RtReferencedSeriesSequenceTag) + "' (" + Tags.RtReferencedSeriesSequenceTag + ") is not present"
                                                    End If
                                                End If
                                            Next
                                        End If
                                    End If
                                Next
                            End If
                        End If
                    Next
                End If
            End If
        End If

        If m_valid = True Then
            Me.SetValid(m_message)
        Else
            Me.SetError(m_message)
        End If

        Me.Report()
    End Sub
End Class