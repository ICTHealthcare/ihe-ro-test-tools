Class QCRDoseCheckSuccess
    Inherits Scenario

    'Constructor
    Public Sub New()

        Dim qcpActor As QCPActor = New QCPActor()
        Dim qcrActor As QCRActor = New QCRActor()

        Dim issuesFoundDialog As IssuesFoundDialog = New IssuesFoundDialog(True)
        Dim errorDialog As ErrorDialog = New ErrorDialog()

        Try
            ' Check if dataset is present
            DataSetHandler.CheckUpsOutputDoseDataSets()

            'Check if the N-Create-req that is created by the QCP Start – testscenario is present, if not then stop execution and inform the user (in the validation results)
            Try
                DataSetHandler.CheckUPSMessageExists(DataSetHandler.UPSCacheXMLFileName, "N-CREATE-REQ")
            Catch ex As Exception
                Dim errorMessage As String = "First run the QCR Start Scenario, at least once."
                errorDialog.SetMessage(errorMessage)
                errorDialog.ShowDialog()
                Throw ex
            End Try

            issuesFoundDialog.ShowDialog()
            Dim roq5transactionInProgress As ROQ5Transaction = New ROQ5Transaction("INPROGRESS")
            Dim roq5transactionCompleted As ROQ5Transaction = New ROQ5Transaction("COMPLETED")
            Dim roq6transaction As ROQ6Transaction = New ROQ6Transaction(issuesFoundDialog.Yes, "Dose")
            Dim roq7transaction As ROQ7Transaction = New ROQ7Transaction(qcpActor, qcrActor, issuesFoundDialog.Yes)
            Dim roq8transaction As ROQ8Transaction = New ROQ8Transaction()

            Dim send As SendScenarioStep = New SendScenarioStep(qcpActor, qcrActor, True)

            Dim config As TestToolConfiguration = TestToolConfiguration.GetInstance()

            Dim UPSDvtkSettings As SUTAESettingWrapper = config.GetDVTKAEConfiguration(qcpActor.Id, NGETRQ)
            Dim CMOVEDvtkSettings As SUTAESettingWrapper = config.GetDVTKAEConfiguration(qcpActor.Id, CMOVERQ)

            Dim receive As ReceiveScenarioStep = Nothing
            If (issuesFoundDialog.Yes) Then

                If (UPSDvtkSettings.Port = CMOVEDvtkSettings.Port) Then

                    receive = New ReceiveScenarioStep(qcpActor, qcrActor, True, NGETRQ, "DoseIssues")
                Else
                    receive = New ReceiveScenarioStep(qcpActor, qcrActor, True, qcpActor, NGETRQ, "DoseIssues")
                End If

            Else
                If (UPSDvtkSettings.Port = CMOVEDvtkSettings.Port) Then
                    receive = New ReceiveScenarioStep(qcpActor, qcrActor, True, NGETRQ, "DoseGood")
                Else
                    receive = New ReceiveScenarioStep(qcpActor, qcrActor, True, qcpActor, NGETRQ, "DoseGood")
                End If

            End If

            receive.setKindOfCheckAndIssues("Dose", issuesFoundDialog.Yes)

            send.AddTransaction(roq5transactionInProgress)
            send.AddTransaction(roq5transactionCompleted)

            receive.AddTransaction(roq6transaction)
            receive.AddTransaction(roq7transaction)
            receive.AddTransaction(roq8transaction)

            'Configure the validate step
            Dim validateROQ5_InProgress As ValidateScenarioStep = New ValidateScenarioStep(send, 0)
            validateROQ5_InProgress.AddRules(roq5transactionInProgress.GetCommonTransactionRulesForResponse())
            Dim validateROQ5_Completed As ValidateScenarioStep = New ValidateScenarioStep(send, 1)
            validateROQ5_Completed.AddRules(roq5transactionCompleted.GetCommonTransactionRulesForResponse())

            Dim validateROQ6 As ValidateScenarioStep = New ValidateScenarioStep(receive, 0)
            validateROQ6.AddRules(roq6transaction.GetCommonTransactionRulesForRequest())


            Dim validateROQ7 As ValidateScenarioStep = Nothing
            Dim validateROQ8 As ValidateScenarioStep = Nothing

            If (UPSDvtkSettings.Port = CMOVEDvtkSettings.Port) Then
                validateROQ7 = New ValidateScenarioStep(receive, True, 1)
                validateROQ8 = New ValidateScenarioStep(receive, True, 0)
            Else
                validateROQ7 = New ValidateScenarioStep(receive, True, 0)
                validateROQ8 = New ValidateScenarioStep(receive, 1)
            End If


            validateROQ7.AddRules(roq7transaction.GetCommonTransactionRulesForRequest())
            validateROQ8.AddRules(roq8transaction.GetCommonTransactionRulesForRequest())

            'Add the steps to the list
            m_scenarioSteps.Add(send)
            m_scenarioSteps.Add(receive)
            m_scenarioSteps.Add(validateROQ5_InProgress)
            m_scenarioSteps.Add(validateROQ5_Completed)
            m_scenarioSteps.Add(validateROQ6)
            m_scenarioSteps.Add(validateROQ7)
            m_scenarioSteps.Add(validateROQ8)


        Catch ex As Exception
            errorDialog.SetMessage(ex.Message)
            errorDialog.ShowDialog()
            Throw ex
        End Try

    End Sub
End Class
