Class CheckCustomDataset

    'Contains the datasets from the dicomfiles


    Private m_CTImageFiles As List(Of DvtkHighLevelInterface.Dicom.Messages.DicomMessage) = Nothing
    Private m_MRImageFiles As List(Of DvtkHighLevelInterface.Dicom.Messages.DicomMessage) = Nothing
    Private m_PETImageFiles As List(Of DvtkHighLevelInterface.Dicom.Messages.DicomMessage) = Nothing
    Private m_SpatialRegistration As List(Of DvtkHighLevelInterface.Dicom.Messages.DicomMessage) = Nothing
    Private m_RTDose As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing
    Private m_RTStructureSet As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing
    Private m_RTPlanDosimetric As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing
    Private m_RTPlanGeometric As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing

    Private m_CTSerieInstanceUID As String
    Private m_PETSerieInstanceUID As String
    Private m_MRSerieInstanceUID As String
    Private m_StudyInstanceUID As String

    'the actual instance of the ReferenceDataSet class
    Private Shared m_instance As CheckCustomDataset = Nothing
    Private m_datasetPath As String

    'we hide the constructor from the outside
    Private Sub New()
        m_CTImageFiles = New List(Of DvtkHighLevelInterface.Dicom.Messages.DicomMessage)
        m_MRImageFiles = New List(Of DvtkHighLevelInterface.Dicom.Messages.DicomMessage)
        m_PETImageFiles = New List(Of DvtkHighLevelInterface.Dicom.Messages.DicomMessage)
        m_SpatialRegistration = New List(Of DvtkHighLevelInterface.Dicom.Messages.DicomMessage)
    End Sub

    'Static method for creating one single instance
    Public Shared Function GetInstance() As CheckCustomDataset
        ' initialize if not already done
        If m_instance Is Nothing Then
            m_instance = New CheckCustomDataset
        End If
        ' return the initialized instance of the ReferenceDataSet Class
        Return m_instance
    End Function 'Instance

    'Make the ReferenceDataSet class aware of a dataset on a given location. Returns false when failed, true when succeeded.
    Public Function LoadNewDataSet(ByVal XMLFilePath As String) As Boolean
        Dim loadingSucceeded As Boolean = False
        Dim chozenFolder As String = ""

        Try 'load the custom dataset

            Dim DefOrCustomDatasetDialog As DefaultOrCustomDatasetDialog = New DefaultOrCustomDatasetDialog()

            DefOrCustomDatasetDialog.lbCustomDatasets.DataSource = ReferenceDataSet.GetInstance().GetCustomDatasetNames()

            DefOrCustomDatasetDialog.ShowDialog()

            If DefOrCustomDatasetDialog.Custom Then
                chozenFolder = DefOrCustomDatasetDialog.lbCustomDatasets.SelectedItem.ToString()
            End If

            loadingSucceeded = True
        Catch ex As System.Exception
            'failed reading the file
            'debug.writeLine("Failed reading: " + XMLFilePath + ". Make sure the file is present, formatted correctly and you have readaccess")
        End Try

        If loadingSucceeded Then
            'check whether the path in the xml file exists

            'The testdataset folder seems to exist. Lets check wether all files (except for CTImages) mentioned in the XML are present.
            If Not ValidateCTImages(chozenFolder) Then
                loadingSucceeded = False
                'No debug line, ValidateFilesExistance() does that for us
                Return loadingSucceeded
            End If

            'Checking the existance of CTImage files now
            If Not validateMRImages(chozenFolder) Then
                loadingSucceeded = False
                'No debug line, validateCTImageFilesExistance() does that for us
                Return loadingSucceeded
            End If

            'Checking the existance of MRImage files now
            If Not validatePETImages(chozenFolder) Then
                loadingSucceeded = False
                'No debug line, validateCTImageFilesExistance() does that for us
                Return loadingSucceeded
            End If

            'Checking the existance of PETImage files now
            If Not validateSpatialReg(chozenFolder) Then
                loadingSucceeded = False
                'No debug line, validateCTImageFilesExistance() does that for us
                Return loadingSucceeded
            End If
        End If

        Return loadingSucceeded
    End Function
    'clears the hybrid and non hybrid data sets
    Public Sub unloadDatasets()
        'clear the CT file collection
        If m_CTImageFiles.Count > 0 Then
            m_CTImageFiles = Nothing
        End If

        'clear the MR file collection
        If m_MRImageFiles.Count > 0 Then
            m_MRImageFiles = Nothing
        End If

        'clear the PET file collection
        If m_PETImageFiles.Count > 0 Then
            m_PETImageFiles = Nothing
        End If

        m_RTDose = Nothing
        m_RTStructureSet = Nothing
        m_SpatialRegistration = Nothing
        m_RTPlanGeometric = Nothing
        m_RTPlanDosimetric = Nothing
    End Sub


    'Load all CT images and checks if these are from the same serie. 
    Private Function ValidateCTImages(ByVal customFolder As String) As Boolean
        Dim valid As Boolean = True

        Dim path As String = TestToolConfiguration.GetInstance.SessionPath + "\..\Datasets\Custom\" + customFolder


        Dim fileName As String
        For Each fileName In Directory.GetFiles(path)
            If (fileName.EndsWith(".dcm")) Then
                Dim dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile = New DvtkHighLevelInterface.Dicom.Files.DicomFile()
                dicomFile.Read(fileName)



                m_CTImageFiles.Add(New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ, dicomFile.DataSet))
            End If
        Next


        Return valid
    End Function

    'Load all CT images and checks if these are from the same serie. 
    Private Function validateMRImages(ByVal customFolder As String) As Boolean
        Dim valid As Boolean = True
        'The directory where the files are located

        Return valid
    End Function

    'Load all CT images and checks if these are from the same serie. 
    Private Function ValidatePETImages(ByVal customFolder As String) As Boolean
        Dim valid As Boolean = True
        'The directory where the files are located

        Return valid
    End Function

    'Load all CT images and checks if these are from the same serie. 
    Private Function validateSpatialReg(ByVal customFolder As String) As Boolean
        Dim valid As Boolean = True
        'The directory where the files are located

        Return valid
    End Function

    Private Sub loadDataset(ByVal customFolder As String)
        Dim path As String = TestToolConfiguration.GetInstance.SessionPath + "\..\Datasets\Custom\" + customFolder

        Dim fileName As String
        For Each fileName In Directory.GetFiles(path)
            If (fileName.EndsWith(".dcm")) Then
                Dim dicomFile As DvtkHighLevelInterface.Dicom.Files.DicomFile = New DvtkHighLevelInterface.Dicom.Files.DicomFile()
                dicomFile.Read(fileName)

                If (dicomFile.DataSet(Tags.SOPClassUID).Values(0) = SOPclass.CTImageSOPClassUID) Then
                    m_CTImageFiles.Add(New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ, dicomFile.DataSet))
                ElseIf (dicomFile.DataSet(Tags.SOPClassUID).Values(0) = SOPclass.MRImageSOPClassUID) Then
                    m_MRImageFiles.Add(New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ, dicomFile.DataSet))
                ElseIf (dicomFile.DataSet(Tags.SOPClassUID).Values(0) = SOPclass.PetImageSOPClassUID) Then
                    m_PETImageFiles.Add(New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ, dicomFile.DataSet))
                ElseIf (dicomFile.DataSet(Tags.SOPClassUID).Values(0) = SOPclass.RTStructureSetSOPClassUID) Then
                    m_RTStructureSet = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ, dicomFile.DataSet)
                ElseIf (dicomFile.DataSet(Tags.SOPClassUID).Values(0) = SOPclass.RTDoseSOPClassUID) Then
                    m_RTDose = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ, dicomFile.DataSet)
                ElseIf (dicomFile.DataSet(Tags.SOPClassUID).Values(0) = SOPclass.SpatialRegistrationSOPClassUID) Then
                    m_SpatialRegistration.Add(New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERQ, dicomFile.DataSet))
                End If

            End If
        Next
    End Sub

End Class 'ReferenceDataSet 




