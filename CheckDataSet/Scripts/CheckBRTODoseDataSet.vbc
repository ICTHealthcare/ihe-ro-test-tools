Class CheckBRTODoseDataSet
    Inherits Scenario

    Dim m_mediaSession As Dvtk.Sessions.MediaSession

    Public Sub New(ByVal mediaSession As Dvtk.Sessions.MediaSession)

        m_mediaSession = mediaSession

        Dim contourerCheckDataSetSelectionDialog As ContourerCheckDataSetSelection = New ContourerCheckDataSetSelection
        Dim CustomFolder As String

        'Const DefaultEmptyReferenceDataset As String = "Scripts\EmptyReferenceDataSet.xml"

        'Dim doc As Xml.XmlDocument = New Xml.XmlDocument()
        'doc.Load(DefaultEmptyReferenceDataset)

        'Dim datasetPath As Xml.XmlNode = doc.SelectSingleNode("//DataSet/DataSetPath")
        'datasetPath.InnerText = "..\\..\\Datasets\\Custom\\CustomDataSet"

        'Dim CTNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/CTImageSet")
        'Dim MRNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/MRImageSet")
        'Dim PETNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/PETImageSet")
        'Dim REGNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/SpatialRegistration")
        'Dim STRUCTNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/RTStructureSet")
        'Dim DOSENode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/RTDose")
        'Dim GEOMETICPlanNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/RTPlanGeometric")
        'Dim DOSIMETRICPlanNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/RTPlanDosimetric")

        'Dim DeleteDirInfo As New IO.DirectoryInfo("..\Datasets\Custom\CustomDataSet")
        'DeleteDirInfo.Delete(True)

        'Dim path As String = IO.Path.GetFullPath("..\Datasets\Custom\CustomDataSet")
        'IO.Directory.CreateDirectory(path + "\CT")
        'IO.Directory.CreateDirectory(path + "\MR")
        'IO.Directory.CreateDirectory(path + "\PET")
        'IO.Directory.CreateDirectory(path + "\REG")
        'IO.Directory.CreateDirectory(path + "\RTSTRUCT")
        'IO.Directory.CreateDirectory(path + "\RTDOSE")
        'IO.Directory.CreateDirectory(path + "\GEOMETRICPLAN")
        'IO.Directory.CreateDirectory(path + "\DOSIMETRICPLAN")

        CustomFolder = "CustomDataSet"

        contourerCheckDataSetSelectionDialog.Text = "RT Dose selection"
        contourerCheckDataSetSelectionDialog.lblReturnDataSet.Text = "RT dose path:"
        contourerCheckDataSetSelectionDialog.btnSelectReceivedItem.Text = "Select RT Dose"
        If Not String.IsNullOrEmpty(m_mediaSession.Manufacturer) Then
            contourerCheckDataSetSelectionDialog.ofdReceivedDataSet.InitialDirectory = m_mediaSession.Manufacturer
            contourerCheckDataSetSelectionDialog.ImageSetFolderBrowserDialog.SelectedPath = m_mediaSession.Manufacturer
        End If
        contourerCheckDataSetSelectionDialog.ShowDialog()

        Dim receivedFilesArray(0) As DvtkHighLevelInterface.Dicom.Files.DicomFile
        Dim receivedDicomFile As New DvtkHighLevelInterface.Dicom.Files.DicomFile
        Dim referencedStructureSet As New DvtkHighLevelInterface.Dicom.Files.DicomFile
        Dim referencedPlan As New DvtkHighLevelInterface.Dicom.Files.DicomFile

        receivedDicomFile.Read(contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text)
        receivedFilesArray(0) = receivedDicomFile

        If (receivedDicomFile.DataSet.Exists(Tags.ReferencedRtPlanSequenceRSSRSSReferencedSopInstanceUid)) Then
            Dim PlanSOPInstanceUID As String = receivedDicomFile.DataSet(Tags.ReferencedRtPlanSequenceRSSRSSReferencedSopInstanceUid).Values(0).ToString()
            Dim referencedObjects As New List(Of String)
            Dim FOR1iodType As IODType

            'Begin Search RT Plan
            Dim file As IO.FileInfo
            Dim directory As String
            Dim split() As String = contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text.Split("\")
            directory = contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text.Substring(0, contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text.Length - split(split.Length - 1).Length)

            Dim dirInfo As IO.DirectoryInfo = New IO.DirectoryInfo(directory)
            For Each file In dirInfo.GetFiles()

                If (file.Name.EndsWith(".dcm")) Then
                    Dim tempDICOMfile As New DvtkHighLevelInterface.Dicom.Files.DicomFile
                    Try
                        tempDICOMfile.Read(file.FullName)
                        If (PlanSOPInstanceUID = tempDICOMfile.DataSet(Tags.SOPInstanceUID).Values(0).ToString()) Then
                            referencedObjects.Add(file.FullName)
                            'file.CopyTo(path + "\DOSIMETRICPLAN\" + file.Name, True)
                            'DOSIMETRICPlanNode.InnerText = "DOSIMETRICPLAN\\" + file.Name
                            referencedPlan = tempDICOMfile
                        End If
                    Catch ex As Exception
                        Reporter.GetInstance.ReportWarningMessage(file.FullName + " cannot be read by DVTk")
                    End Try
                End If
            Next

            'End Search RT Plan


            'Begin Search structure set
            If (referencedPlan.DataSet.Exists(Tags.ReferencedStructureSetSOPInstanceUID)) Then
                Dim structureSetSOPInstanceUID As String = referencedPlan.DataSet(Tags.ReferencedStructureSetSOPInstanceUID).Values(0).ToString()

                For Each file In dirInfo.GetFiles()

                    If (file.Name.EndsWith(".dcm")) Then
                        Dim tempDICOMfile As New DvtkHighLevelInterface.Dicom.Files.DicomFile
                        Try
                            tempDICOMfile.Read(file.FullName)
                            If (structureSetSOPInstanceUID = tempDICOMfile.DataSet(Tags.SOPInstanceUID).Values(0).ToString()) Then
                                referencedObjects.Add(file.FullName)
                                'file.CopyTo(path + "\RTSTRUCT\" + file.Name, True)
                                'STRUCTNode.InnerText = "RTSTRUCT\\" + file.Name
                                referencedStructureSet = tempDICOMfile
                            End If
                        Catch ex As Exception
                            Reporter.GetInstance.ReportWarningMessage(file.FullName + " cannot be read by DVTk")
                        End Try
                    End If
                Next

                'End Search structure set

                'Begin Search images in structure set
                If Not referencedStructureSet Is Nothing Then
                    If (referencedStructureSet.DataSet.Exists(Tags.RTReferencedContourImageSequence)) Then
                        Dim contourImageSequenceAttribute As DvtkHighLevelInterface.Dicom.Other.Attribute = referencedStructureSet.DataSet(Tags.RTReferencedContourImageSequence)

                        Dim referencedSOPInstanceUIDs As New List(Of String)
                        Dim seqItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing
                        Dim j As Integer
                        For j = 1 To contourImageSequenceAttribute.ItemCount()
                            seqItem = contourImageSequenceAttribute.GetItem(j)

                            referencedSOPInstanceUIDs.Add(seqItem(Tags.ReferencedSOPInstanceUIDMOVE).Values(0).ToString())
                        Next

                        If (contourerCheckDataSetSelectionDialog.tbSelectedImageSet.Text = "") Then
                            Dim split2() As String = contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text.Split("\")
                            directory = contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text.Substring(0, contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text.Length - split2(split2.Length - 1).Length)
                        Else
                            directory = contourerCheckDataSetSelectionDialog.tbSelectedImageSet.Text
                        End If

                        dirInfo = New IO.DirectoryInfo(directory)
                        For Each file In dirInfo.GetFiles()

                            If (file.Name.EndsWith(".dcm")) Then
                                Dim tempImage As New DvtkHighLevelInterface.Dicom.Files.DicomFile
                                Try
                                    tempImage.Read(file.FullName)
                                    If referencedSOPInstanceUIDs.Contains(tempImage.DataSet(Tags.SOPInstanceUID).Values(0).ToString()) Then
                                        referencedObjects.Add(file.FullName)

                                        If (tempImage.DataSet(Tags.SOPClassUID).Values(0).ToString() = SOPclass.CTImageSOPClassUID) Then
                                            'file.CopyTo(path + "\CT\" + file.Name, True)
                                            'Dim Child As Xml.XmlNode = doc.CreateNode("element", "CTImage", "")
                                            'Child.InnerText = "CT\\" + file.Name
                                            'CTNode.AppendChild(Child)
                                            FOR1iodType = IODType.CTImage
                                        ElseIf (tempImage.DataSet(Tags.SOPClassUID).Values(0).ToString() = SOPclass.MRImageSOPClassUID) Then
                                            'file.CopyTo(path + "\MR\" + file.Name, True)
                                            'Dim Child As Xml.XmlNode = doc.CreateNode("element", "MRImage", "")
                                            'Child.InnerText = "MR\\" + file.Name
                                            'MRNode.AppendChild(Child)
                                            FOR1iodType = IODType.MRImage
                                        ElseIf (tempImage.DataSet(Tags.SOPClassUID).Values(0).ToString() = SOPclass.PetImageSOPClassUID) Then
                                            'file.CopyTo(path + "\PET\" + file.Name, True)
                                            'Dim Child As Xml.XmlNode = doc.CreateNode("element", "PETImage", "")
                                            'Child.InnerText = "PET\\" + file.Name
                                            'PETNode.AppendChild(Child)
                                            FOR1iodType = IODType.PETImage
                                        End If
                                    End If
                                Catch ex As Exception
                                    Reporter.GetInstance.ReportWarningMessage(file.FullName + " cannot be read by DVTk")
                                End Try
                            End If
                        Next

                        'End Search images in structure set

                        'doc.Save(IO.Path.GetFullPath("..\Sessionfiles\Scripts\CustomDataSet.xml"))

                        'm_scenarioDatasetXmlFileName = "CustomDataSet.xml"

                        referencedObjects.Add(contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text)
                        ReferenceDataSet.GetInstance.setReferencedDICOMFileNames(referencedObjects)

                        Dim dicomFileNames() As String = referencedObjects.ToArray()

                        Dim i As Integer
                        Dim sendFilesArray() As DvtkHighLevelInterface.Dicom.Files.DicomFile

                        ReDim sendFilesArray(dicomFileNames.Length - 1)


                        For i = 0 To dicomFileNames.Length - 1
                            Dim dicomFile As New DvtkHighLevelInterface.Dicom.Files.DicomFile
                            dicomFile.Read(dicomFileNames(i))
                            sendFilesArray(i) = dicomFile
                        Next

                        Dim validate As ValidateScenarioStep = New ValidateScenarioStep(sendFilesArray, receivedFilesArray)

                        m_mediaSession.StartResultsGathering("CustomDatasetValidation.xml")

                        m_mediaSession.ValidateMediaFiles(dicomFileNames)

                        m_mediaSession.EndResultsGathering()

                        ReferenceDataSet.GetInstance.ConvertXmlToHtml("..\ResultDicomValidation\", "Summary_CustomDatasetValidation.xml", "CustomDatasetValidation.html", True, Nothing)

                        m_mediaSession.Manufacturer = directory
                        m_mediaSession.SaveToFile()

                        If Not (referencedSOPInstanceUIDs.Count = referencedObjects.Count - 3) Then
                            Reporter.GetInstance.ReportErrorMessage("Not all referenced images are in the dataset " + referencedSOPInstanceUIDs.Count.ToString() + " are referenced in the Structure set, " + (referencedObjects.Count - 3).ToString() + " images are in the dataset")
                        End If

                        If (referencedObjects.Count > 3) Then

                            validate.Rules = BRTO_RTDose_Rules.CreateRules()

                            'C.7.1.1 Patient Module
                            'Patient's Name	(0010,0010), same as in other received objects
                            validate.AddRule((New CriticalAttributeInterRelationRule(Tags.PatientName, True, False, ErrorSeverity.RuleError, IODType.Generic)))
                            'Patient ID	(0010,0020), same as in other received objects
                            validate.AddRule(New CriticalAttributeInterRelationRule(Tags.PatientID, True, False, ErrorSeverity.RuleError, IODType.Generic))
                            'Patient's Birthdate (0010,0030), same as in other received objects
                            validate.AddRule(New CriticalAttributeInterRelationRule(Tags.PatientsBirthDate, True, False, ErrorSeverity.RuleError, IODType.Generic))
                            'Patient's Sex (0010,0040), same as in other received objects
                            validate.AddRule(New CriticalAttributeInterRelationRule(Tags.PatientSex, True, False, ErrorSeverity.RuleError, IODType.Generic))

                            'Patient() 's Name	(0010,0010), same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.PatientName, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Patient ID	(0010,0020), same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.PatientID, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Patient() 's Birthdate	(0010,0030), same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.PatientsBirthDate, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Patient() 's Sex	(0010,0040), same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.PatientSex, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))

                            'C.7.2.1 General Study Module		
                            'Study Instance UID (0020,000D), same as in other received objects
                            validate.AddRule(New CriticalAttributeInterRelationRule(Tags.StudyInstanceUID, True, False, ErrorSeverity.RuleError, IODType.Generic))
                            'Study Date (0008,0020), same as in other received objects
                            validate.AddRule(New CriticalAttributeInterRelationRule(Tags.StudyDate, True, False, ErrorSeverity.RuleError, IODType.Generic))
                            'Study Time (0008,0030), same as in other received objects
                            validate.AddRule(New CriticalAttributeInterRelationRule(Tags.StudyTime, True, False, ErrorSeverity.RuleError, IODType.Generic))
                            'Referring Physician's Name (0008,0090), same as in other received objects
                            validate.AddRule(New CriticalAttributeInterRelationRule(Tags.ReferringPhysiciansName, True, False, ErrorSeverity.RuleError, IODType.Generic))
                            'Study ID (0020,0010), same as in other received objects
                            validate.AddRule(New CriticalAttributeInterRelationRule(Tags.StudyID, True, False, ErrorSeverity.RuleError, IODType.Generic))
                            'Accession Number (0008,0050), same as in other received objects
                            validate.AddRule(New CriticalAttributeInterRelationRule(Tags.AccessionNumber, True, False, ErrorSeverity.RuleError, IODType.Generic))
                            'Study Description (0008,1030), same as in other received objects
                            validate.AddRule(New StudyDescriptionInterrelationRule(True, False, ErrorSeverity.RuleError, IODType.Generic))

                            'Study Instance UID	(0020,000D), New value, but maybe the same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyInstanceUID, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Study Date	(0008,0020), New value, but maybe the same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyDate, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Study Time	(0008,0030), New value, but maybe the same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyTime, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Referring(Physician)(0008,0090), New value, but maybe the same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.ReferringPhysiciansName, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Study ID	(0020,0010), New value, but maybe the same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyID, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Accession Number	(0008,0050), New value, but maybe the same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.AccessionNumber, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Study Description	(0008,1030), New value, but maybe the same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyDescription, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))

                            'C.7.4.1 Frame Of Reference Module		
                            'Frame of Reference UID	(0020,0052), same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.FrameofReferenceUID, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                            'Position Reference Indicator (0020,1040), same as in reference data
                            validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.PositionReferenceIndicator, IODType.RTDose, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))

                            '============== RT-Dose =============================================================

                            'C.7.6.2 Image Plane Module		
                            'Image Orientation(Patient) (0020,0037)	
                            '1. Shall be present in every RT Dose IOD.
                            '2. For an axial image (Image Type, (0008,0008) should be AXIAL), direction cosines shall be (+/-1, 0, 0, 0, +/1, 0) with an angle tolerance of 0.001 radians (0.057 degrees)"
                            validate.AddRule(New ImageOrientationPatientRule(IODType.RTDose, ErrorSeverity.RuleError))

                            'Pixel Spacing	(0028,0030)	For RT Dose IOD, pixel spacing may be nonisotropic"
                            validate.AddRule(New PixelSpacingRule(IODType.RTDose, ErrorSeverity.RuleError))


                            'C.7.6.6 Multi-Frame Module		
                            'Frame Increment Pointer (0028,0009) Value should be the equal to the value of the Grid Offset Vector (3004,000C)
                            validate.AddRule(New FrameIncrementPointerRule(IODType.RTDose, ErrorSeverity.RuleError))

                            'C.8.8.3 RT Dose

                            'Bits Stored (0028,0101) Value equal to Bits Allocated (0028,0100)
                            validate.AddRule(New EqualToRule(Tags.BitsStored, IODType.RTDose, ErrorSeverity.RuleError, Tags.BitsAllocated))
                            'High Bit (0028,0102) Value = Bits Stored(0028,0101) - 1
                            validate.AddRule(New HighBitRule(IODType.RTDose, ErrorSeverity.RuleError))
                            'Dose Comment (3004,0006) Shall be present if Referenced RT Plan Sequence is NOT PRESENT
                            'If present it should have the same value as RT Plan Description and it should not be empty"

                            validate.AddRule(New DoseCommentRule(IODType.Generic, ErrorSeverity.RuleError))

                            'Referenced Fraction(Group) Sequence (300C,0020) Shall be present if the parent sequence is present, and
                            'shall reference a single fraction group within the referenced RT Plan. Referenced Frame of Reference"
                            validate.AddRule(New ReferencedFractionGroupSequenceRule(ErrorSeverity.RuleError, IODType.RTDose))
                            'Grid Frame Offset Vector (3004,000C)
                            '1. First z coordinate shall be equal to zero. 
                            '2. The remaining z coordinates shall be relative to the starting z position in Image Position (Patient) (0020,0032).
                            validate.AddRule(New GridFrameOffsetVectorRule(Tags.GridFrameOffsetVector, IODType.RTDose, ErrorSeverity.RuleError))


                            'C.12.1 SOP Common Module

                            m_scenarioSteps.Add(validate)

                        Else
                            Reporter.GetInstance.ReportErrorMessage("Not one referenced images is in the dataset")
                        End If
                    Else
                        Reporter.GetInstance.ReportErrorMessage("Selected RT Structure Set doesn't contain " + Tags.GetTagName(Tags.RTReferencedContourImageSequence) + "' (" + Tags.RTReferencedContourImageSequence + ")")
                    End If
                    Else
                        Reporter.GetInstance.ReportErrorMessage("RT Structure Set is not in the dataset")
                    End If
            Else
                Reporter.GetInstance.ReportErrorMessage("Referenced dosimetric plan doesn't contain " + Tags.GetTagName(Tags.ReferencedStructureSetSOPInstanceUID) + "' (" + Tags.ReferencedStructureSetSOPInstanceUID + ")")
            End If
        Else
            Reporter.GetInstance.ReportErrorMessage("Selected RT Dose doesn't contain " + Tags.GetTagName(Tags.ReferencedRtPlanSequenceRSSRSSReferencedSopInstanceUid) + "' (" + Tags.ReferencedRtPlanSequenceRSSRSSReferencedSopInstanceUid + ")")
        End If

    End Sub
End Class