Class CheckMMRORegistratorDataSet
    Inherits Scenario

    Dim m_mediaSession As Dvtk.Sessions.MediaSession

    Public Sub New(ByVal mediaSession As Dvtk.Sessions.MediaSession)

        m_mediaSession = mediaSession

        Dim contourerCheckDataSetSelectionDialog As ContourerCheckDataSetSelection = New ContourerCheckDataSetSelection
        Dim CustomFolder As String

        'Const DefaultEmptyReferenceDataset As String = "Scripts\EmptyReferenceDataSet.xml"

        'Dim doc As Xml.XmlDocument = New Xml.XmlDocument()
        'doc.Load(DefaultEmptyReferenceDataset)

        'Dim datasetPath As Xml.XmlNode = doc.SelectSingleNode("//DataSet/DataSetPath")
        'datasetPath.InnerText = "..\\..\\Datasets\\Custom\\CustomDataSet"

        'Dim CTNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/CTImageSet")
        'Dim MRNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/MRImageSet")
        'Dim PETNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/PETImageSet")
        'Dim REGNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/SpatialRegistration")
        'Dim STRUCTNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/RTStructureSet")
        'Dim DOSENode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/RTDose")
        'Dim GEOMETICPlanNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/RTPlanGeometric")
        'Dim DOSIMETRICPlanNode As Xml.XmlNode = doc.SelectSingleNode("//DataSet/RTPlanDosimetric")

        'Dim DeleteDirInfo As New IO.DirectoryInfo("..\Datasets\Custom\CustomDataSet")
        'DeleteDirInfo.Delete(True)

        'Dim path As String = IO.Path.GetFullPath("..\Datasets\Custom\CustomDataSet")
        'IO.Directory.CreateDirectory(path + "\CT")
        'IO.Directory.CreateDirectory(path + "\MR")
        'IO.Directory.CreateDirectory(path + "\PET")
        'IO.Directory.CreateDirectory(path + "\REG")
        'IO.Directory.CreateDirectory(path + "\RTSTRUCT")
        'IO.Directory.CreateDirectory(path + "\RTDOSE")
        'IO.Directory.CreateDirectory(path + "\GEOMETRICPLAN")
        'IO.Directory.CreateDirectory(path + "\DOSIMETRICPLAN")

        CustomFolder = "CustomDataSet"

        contourerCheckDataSetSelectionDialog.Text = "Registrator Selection"
        contourerCheckDataSetSelectionDialog.lblReturnDataSet.Text = "Spatial reg path:"
        contourerCheckDataSetSelectionDialog.btnSelectReceivedItem.Text = "Select spatial reg"
        If Not String.IsNullOrEmpty(m_mediaSession.Manufacturer) Then
            contourerCheckDataSetSelectionDialog.ofdReceivedDataSet.InitialDirectory = m_mediaSession.Manufacturer
            contourerCheckDataSetSelectionDialog.ImageSetFolderBrowserDialog.SelectedPath = m_mediaSession.Manufacturer
        End If
        contourerCheckDataSetSelectionDialog.ShowDialog()

        Dim receivedFilesArray(0) As DvtkHighLevelInterface.Dicom.Files.DicomFile
        Dim receivedDicomFile As New DvtkHighLevelInterface.Dicom.Files.DicomFile

        receivedDicomFile.Read(contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text)
        receivedFilesArray(0) = receivedDicomFile

        If (receivedDicomFile.DataSet.Exists(Tags.ReferencedSeriesSequence1RefInstanceSeq) And receivedDicomFile.DataSet.Exists(Tags.ReferencedSeriesSequence2RefInstanceSeq)) Then
            Dim FOR1iodType As IODType
            Dim FOR2iodType As IODType
            Dim referencedSeriesSequence1RefInstanceSeq As DvtkHighLevelInterface.Dicom.Other.Attribute = receivedDicomFile.DataSet(Tags.ReferencedSeriesSequence1RefInstanceSeq)
            Dim referencedSeriesSequence2RefInstanceSeq As DvtkHighLevelInterface.Dicom.Other.Attribute = receivedDicomFile.DataSet(Tags.ReferencedSeriesSequence2RefInstanceSeq)

            Dim referencedSOPInstanceUIDs As New List(Of String)
            Dim referencedImages As New List(Of String)
            Dim seqItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = Nothing
            Dim j As Integer
            For j = 1 To referencedSeriesSequence1RefInstanceSeq.ItemCount()
                seqItem = referencedSeriesSequence1RefInstanceSeq.GetItem(j)
                referencedSOPInstanceUIDs.Add(seqItem(Tags.ReferencedSOPInstanceUIDMOVE).Values(0).ToString())

                If (j = 1) Then

                    If (seqItem(Tags.ReferencedSOPClassUID).Values(0).ToString() = SOPclass.CTImageSOPClassUID) Then
                        FOR1iodType = IODType.CTImage
                    ElseIf (seqItem(Tags.ReferencedSOPClassUID).Values(0).ToString() = SOPclass.MRImageSOPClassUID) Then
                        FOR1iodType = IODType.MRImage
                    ElseIf (seqItem(Tags.ReferencedSOPClassUID).Values(0).ToString() = SOPclass.PetImageSOPClassUID) Then
                        FOR1iodType = IODType.PETImage
                    End If
                End If
            Next

            For j = 1 To referencedSeriesSequence2RefInstanceSeq.ItemCount()
                seqItem = referencedSeriesSequence2RefInstanceSeq.GetItem(j)
                referencedSOPInstanceUIDs.Add(seqItem(Tags.ReferencedSOPInstanceUIDMOVE).Values(0).ToString())

                If (j = 1) Then
                    If (seqItem(Tags.ReferencedSOPClassUID).Values(0).ToString() = SOPclass.CTImageSOPClassUID) Then
                        FOR2iodType = IODType.CTImage
                    ElseIf (seqItem(Tags.ReferencedSOPClassUID).Values(0).ToString() = SOPclass.MRImageSOPClassUID) Then
                        FOR2iodType = IODType.MRImage
                    ElseIf (seqItem(Tags.ReferencedSOPClassUID).Values(0).ToString() = SOPclass.PetImageSOPClassUID) Then
                        FOR2iodType = IODType.PETImage
                    End If
                End If
            Next

            Dim file As IO.FileInfo
            Dim directory As String
            If (contourerCheckDataSetSelectionDialog.tbSelectedImageSet.Text = "") Then
                Dim split() As String = contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text.Split("\")
                directory = contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text.Substring(0, contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text.Length - split(split.Length - 1).Length)
            Else
                directory = contourerCheckDataSetSelectionDialog.tbSelectedImageSet.Text
            End If

            

            Dim dirInfo As IO.DirectoryInfo = New IO.DirectoryInfo(directory)
            For Each file In dirInfo.GetFiles()

                If (file.Name.EndsWith(".dcm")) Then
                    Dim tempImage As New DvtkHighLevelInterface.Dicom.Files.DicomFile
                    Try
                        tempImage.Read(file.FullName)
                        If referencedSOPInstanceUIDs.Contains(tempImage.DataSet(Tags.SOPInstanceUID).Values(0).ToString()) Then
                            referencedImages.Add(file.FullName)

                            'If (tempImage.DataSet(Tags.SOPClassUID).Values(0).ToString() = SOPclass.CTImageSOPClassUID) Then
                            '    file.CopyTo(path + "\CT\" + file.Name, True)
                            '    Dim Child As Xml.XmlNode = doc.CreateNode("element", "CTImage", "")
                            '    Child.InnerText = "CT\\" + file.Name
                            '    CTNode.AppendChild(Child)
                            'ElseIf (tempImage.DataSet(Tags.SOPClassUID).Values(0).ToString() = SOPclass.MRImageSOPClassUID) Then
                            '    file.CopyTo(path + "\MR\" + file.Name, True)
                            '    Dim Child As Xml.XmlNode = doc.CreateNode("element", "MRImage", "")
                            '    Child.InnerText = "MR\\" + file.Name
                            '    MRNode.AppendChild(Child)
                            'ElseIf (tempImage.DataSet(Tags.SOPClassUID).Values(0).ToString() = SOPclass.PetImageSOPClassUID) Then
                            '    file.CopyTo(path + "\PET\" + file.Name, True)
                            '    Dim Child As Xml.XmlNode = doc.CreateNode("element", "PETImage", "")
                            '    Child.InnerText = "PET\\" + file.Name
                            '    PETNode.AppendChild(Child)
                            'End If
                        End If
                    Catch ex As Exception
                        Reporter.GetInstance.ReportWarningMessage(file.FullName + " cannot be read by DVTk")
                    End Try
                End If
            Next

            'doc.Save(IO.Path.GetFullPath("..\Sessionfiles\Scripts\CustomDataSet.xml"))

            'm_scenarioDatasetXmlFileName = "CustomDataSet.xml"

            referencedImages.Add(contourerCheckDataSetSelectionDialog.tbSelectedStructureSet.Text)
            ReferenceDataSet.GetInstance.setReferencedDICOMFileNames(referencedImages)
            Dim dicomFileNames() As String = referencedImages.ToArray()

            Dim i As Integer
            Dim sendFilesArray() As DvtkHighLevelInterface.Dicom.Files.DicomFile

            ReDim sendFilesArray(dicomFileNames.Length - 1)


            For i = 0 To dicomFileNames.Length - 1
                Dim dicomFile As New DvtkHighLevelInterface.Dicom.Files.DicomFile
                dicomFile.Read(dicomFileNames(i))
                sendFilesArray(i) = dicomFile
            Next

            Dim validate As ValidateScenarioStep = New ValidateScenarioStep(sendFilesArray, receivedFilesArray)

            m_mediaSession.StartResultsGathering("CustomDatasetValidation.xml")

            m_mediaSession.ValidateMediaFiles(dicomFileNames)

            m_mediaSession.EndResultsGathering()

            ReferenceDataSet.GetInstance.ConvertXmlToHtml("..\ResultDicomValidation\", "Summary_CustomDatasetValidation.xml", "CustomDatasetValidation.html", True, Nothing)

            m_mediaSession.Manufacturer = directory
            m_mediaSession.SaveToFile()

            If Not (referencedSOPInstanceUIDs.Count = referencedImages.Count - 1) Then
                Reporter.GetInstance.ReportWarningMessage("Not all referenced images are in the dataset " + referencedSOPInstanceUIDs.Count.ToString() + " are referenced in the Spatial Registration, " + (referencedImages.Count - 1).ToString() + " images are in the dataset")
            End If

            If (referencedImages.Count > 1) Then
                'C.7.1.1 Patient Module
                'Patient's Name	(0010,0010), same as in other received objects
                validate.AddRule((New CriticalAttributeInterRelationRule(Tags.PatientName, False, False, ErrorSeverity.RuleError, IODType.Generic)))
                'Patient ID	(0010,0020), same as in other received objects
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.PatientID, False, False, ErrorSeverity.RuleError, IODType.Generic))
                'Patient's Birthdate (0010,0030), same as in other received objects
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.PatientsBirthDate, False, False, ErrorSeverity.RuleError, IODType.Generic))
                'Patient's Sex (0010,0040), same as in other received objects
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.PatientSex, False, False, ErrorSeverity.RuleError, IODType.Generic))

                'Patient() 's Name	(0010,0010), same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.PatientName, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                'Patient ID	(0010,0020), same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.PatientID, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                'Patient() 's Birthdate	(0010,0030), same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.PatientsBirthDate, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                'Patient() 's Sex	(0010,0040), same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.PatientSex, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))

                'C.7.2.1 General Study Module		
                'Study Instance UID (0020,000D), same as in other received objects
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.StudyInstanceUID, False, False, ErrorSeverity.RuleError, IODType.Generic))
                'Study Date (0008,0020), same as in other received objects
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.StudyDate, False, False, ErrorSeverity.RuleError, IODType.Generic))
                'Study Time (0008,0030), same as in other received objects
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.StudyTime, False, False, ErrorSeverity.RuleError, IODType.Generic))
                'Referring Physician's Name (0008,0090), same as in other received objects
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.ReferringPhysiciansName, False, False, ErrorSeverity.RuleError, IODType.Generic))
                'Study ID (0020,0010), same as in other received objects
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.StudyID, False, False, ErrorSeverity.RuleError, IODType.Generic))
                'Accession Number (0008,0050), same as in other received objects
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.AccessionNumber, False, False, ErrorSeverity.RuleError, IODType.Generic))
                'Study Description (0008,1030), same as in other received objects
                validate.AddRule(New StudyDescriptionInterrelationRule(False, False, ErrorSeverity.RuleError, IODType.Generic))

                'Study Instance UID	(0020,000D), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyInstanceUID, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                'Study Date	(0008,0020), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyDate, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                'Study Time	(0008,0030), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyTime, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                'Referring(Physician)(0008,0090), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.ReferringPhysiciansName, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                'Study ID	(0020,0010), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyID, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                'Accession Number	(0008,0050), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.AccessionNumber, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))
                'Study Description	(0008,1030), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingCustomDatasetRule(Tags.StudyDescription, IODType.SpatialRegistration, FOR1iodType, ErrorSeverity.RuleError, CustomFolder))


                'C.7.3.1 General Series Module
                'Series Instance (0020,000E), the Spatial Registration object shall be stored in a different series from images.
                'So series instance UID in the Spatial Registration will be unique.
                validate.AddRule(New SeriesInstanceUIDInterRelationRule(ErrorSeverity.RuleError, IODType.Generic))
                'TODO C.7.3.1 Critical attribute rules, can we use CriticalAttributeInterRelationRule for this?

                'Patient Position should be one of these values HFS, FFS, HFP, FFP.
                Dim values(3) As String
                values(0) = "HFS"
                values(1) = "FFS"
                values(2) = "HFP"
                values(3) = "FFP"
                validate.AddRule(New ValueListRule(Tags.PatientPosition, values, IODType.CTImage, ErrorSeverity.RuleError))
                validate.AddRule(New ValueListRule(Tags.PatientPosition, values, IODType.MRImage, ErrorSeverity.RuleError))
                validate.AddRule(New ValueListRule(Tags.PatientPosition, values, IODType.PETImage, ErrorSeverity.RuleError))

                If FOR1iodType = IODType.PETImage Then
                    validate.AddRule(New SeriesInstanceUIDMappingCustomDatasetRule(ErrorSeverity.RuleError, IODType.SpatialRegistration, False, False, True, False, False, True, CustomFolder))
                ElseIf FOR1iodType = IODType.MRImage Then
                    validate.AddRule(New SeriesInstanceUIDMappingCustomDatasetRule(ErrorSeverity.RuleError, IODType.SpatialRegistration, False, True, False, False, False, True, CustomFolder))
                ElseIf FOR1iodType = IODType.CTImage Then
                    validate.AddRule(New SeriesInstanceUIDMappingCustomDatasetRule(ErrorSeverity.RuleError, IODType.SpatialRegistration, True, False, False, False, False, True, CustomFolder))
                End If

                'C.7.4.1 Frame Of Reference Module
                'The Frame of Reference UID (0020,0052) of the Registration instance will have the same Frame of Reference UID
                'as the registered image set
                '!!! Also for hybrid? !!!
                validate.AddRule(New SameFrameOfReferenceInterRelationRule(Tags.FrameofReferenceUID, ErrorSeverity.RuleError, False))
                'The Frame of Reference UID (0020,0052) has to be different in all other image modality types
                '!!! Also for hybrid? !!!
                validate.AddRule(New ImageModalityFrameOfReferenceRule(ErrorSeverity.RuleError, False, IODType.Generic))
                'Position Reference Indicator (0020,1040), the same comments as the Frame of Reference UID apply here
                validate.AddRule(New CriticalAttributeInterRelationRule(Tags.PositionReferenceIndicator, False, False, ErrorSeverity.RuleError, IODType.Generic))

                validate.AddRule(New SameFrameOfReferenceMappingCustomDatasetRule(Tags.FrameofReferenceUID, IODType.SpatialRegistration, ErrorSeverity.RuleError, CustomFolder))


                'C.7.5.1 General Equipment Module
                'Manufacturer (0008,0070) If a new structure set is created from a previous structure set, the manufacturer of the equipment
                'producing the new structure set shall insert their identifier in this element
                'validate.AddRule(New ManufacturerMappingCustomDatasetRule(Tags.Manufacturer, ErrorSeverity.RuleError, IODType.SpatialRegistration, CustomFolder))
                'Manufacturer (0008,1090) If a new structure set is created from a previous structure set, the manufacturer of the equipment
                'producing the new structure set shall insert their identifier in this element
                'validate.AddRule(New ManufacturerMappingCustomDatasetRule(Tags.ManufacturersModelName, ErrorSeverity.RuleError, IODType.SpatialRegistration, CustomFolder))

                'C.7.6.2 Image Plane Module

                '1. For CTImage IOD, non-isotropic pixels are outside the scope of the profile
                '2. For RT Dose IOD, pixel spacing may be non-isotropic
                '3. For IHE-RO 2008 (MR, PET): We do require the X and Y resolutions are equal, the z resolution may be different
                validate.AddRule(New PixelSpacingRule(IODType.CTImage, ErrorSeverity.RuleError))
                validate.AddRule(New PixelSpacingRule(IODType.MRImage, ErrorSeverity.RuleError))
                validate.AddRule(New PixelSpacingRule(IODType.PETImage, ErrorSeverity.RuleError))


                'C.12.1 SOP Common Module

                'Specific Character Set (0008,0005) if present shall be the value "ISO_IR 100".
                validate.AddRule(New ValueInterRelationRule(Tags.SpecificCharacterSet, "ISO_IR 100", FOR1iodType, ErrorSeverity.RuleError))
                'Specific Character Set (0008,0005) if present shall be the value "ISO_IR 100".
                validate.AddRule(New ValueInterRelationRule(Tags.SpecificCharacterSet, "ISO_IR 100", FOR2iodType, ErrorSeverity.RuleError))
                'Specific Character Set (0008,0005) if present shall be the value "ISO_IR 100".
                validate.AddRule(New ValueRule(Tags.SpecificCharacterSet, "ISO_IR 100", IODType.SpatialRegistration, ErrorSeverity.RuleError))

                'C.20.1 Spatial Registration Series Module
                'Modality (0008,0060) shall be the value "REG".
                validate.AddRule(New IsRequiredRule(Tags.Modality, IODType.SpatialRegistration, ErrorSeverity.RuleError))
                validate.AddRule(New ValueRule(Tags.Modality, "REG", IODType.SpatialRegistration, ErrorSeverity.RuleError))

                'C.20.2 Spatial Registration
                'Registration sequence (0070,0308) must contain exactly 2 items
                validate.AddRule(New NrIntOfSequenceItemRule(Tags.RegistrationSequence, 2, IODType.SpatialRegistration, ErrorSeverity.RuleError))

                'each item in (0070,0308) must contain 1 item in (0070,0309)
                validate.AddRule(New NrIntOfSequenceItemRule(Tags.MatrixRegistrationSequence, 1, IODType.SpatialRegistration, ErrorSeverity.RuleError))
                validate.AddRule(New NrIntOfSequenceItemRule(Tags.MatrixRegistrationSequence2, 1, IODType.SpatialRegistration, ErrorSeverity.RuleError))

                'each item in (0070,0309) must contain 1 item in (0070,030A)
                validate.AddRule(New NrIntOfSequenceItemRule(Tags.MatrixSequence, 1, IODType.SpatialRegistration, ErrorSeverity.RuleError))
                validate.AddRule(New NrIntOfSequenceItemRule(Tags.MatrixSequence2, 1, IODType.SpatialRegistration, ErrorSeverity.RuleError))
                'each item in (0070,030A) must contain a 4x4 matrix in (3006,00C6) of which the last 4 positions are 0/0/0/1
                validate.AddRule(New CorrectMatrixRule(Tags.FrameofReferenceTransformationMatrix, IODType.SpatialRegistration, ErrorSeverity.RuleError))
                validate.AddRule(New CorrectMatrixRule(Tags.FrameofReferenceTransformationMatrix2, IODType.SpatialRegistration, ErrorSeverity.RuleError))
                'the matrix in the first item in the registration sequence must contain the values 1/0/0/0/0/1/0/0/0/0/1/0/0/0/0/1
                validate.AddRule(New CorrectIdentityMatrixRule(Tags.FrameofReferenceTransformationMatrix, IODType.SpatialRegistration, ErrorSeverity.RuleError))
                'the matrix in the second item in the registration sequence must contain the same values as the registration item in the reference dataset
                validate.AddRule(New CorrectExpectedMatrixRule(Tags.FrameofReferenceTransformationMatrix2, IODType.SpatialRegistration, ErrorSeverity.RuleError))
                'the value of the frame of reference UID must be the same both in the base of the object and in the first registration object
                validate.AddRule(New EqualToRule(Tags.FrameofReferenceUID, IODType.SpatialRegistration, ErrorSeverity.RuleError, Tags.RegistrationFrameofReferenceUID))
                'check for each of the FoRUIDs whether there is an image with the same FoRUID
                validate.AddRule(New SameFrameOfReferenceMappingCustomDatasetRule(Tags.RegistrationFrameofReferenceUID, IODType.SpatialRegistration, ErrorSeverity.RuleError, CustomFolder))
                validate.AddRule(New SameFrameOfReferenceMappingCustomDatasetRule(Tags.RegistrationFrameofReferenceUID2, IODType.SpatialRegistration, ErrorSeverity.RuleError, CustomFolder))

                'Frame of Reference Transformation Matrix Type (0070,030C) if present shall be the value "RIGID".
                validate.AddRule(New IsRequiredRule(Tags.FrameofReferenceTransformationMatrixType, IODType.SpatialRegistration, ErrorSeverity.RuleError))
                validate.AddRule(New ValueRule(Tags.FrameofReferenceTransformationMatrixType, "RIGID", IODType.SpatialRegistration, ErrorSeverity.RuleError))

                m_scenarioSteps.Add(validate)

            Else
                Reporter.GetInstance.ReportErrorMessage("Not all referenced images are in the dataset " + referencedSOPInstanceUIDs.Count.ToString() + " are referenced in the Spatial Registration, " + (referencedImages.Count - 1).ToString() + " images are in the dataset")
            End If
        Else
            Reporter.GetInstance.ReportErrorMessage("Selected Spatial Registration doesn't contain 2 sets of referenced images")
        End If

    End Sub
End Class