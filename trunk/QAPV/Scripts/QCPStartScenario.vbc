Class QCPStartScenario
    Inherits Scenario
    'Constructor
    Public Sub New()

        Dim kindOfCheckDialog As ChooseKindOfCheckDialog = New ChooseKindOfCheckDialog(True)
        Dim errorDialog As ErrorDialog = New ErrorDialog()

        Try
            ' Check if dataset is present
            DataSetHandler.CheckUpsInputDataSets()

            'clean up cache directory
            DataSetHandler.CleanUpsCacheFolder()

            kindOfCheckDialog.ShowDialog()

            Dim ROQ1transaction As ROQ1Transaction = New ROQ1Transaction(kindOfCheckDialog.Difference)
            Dim ROQ2transaction As ROQ2Transaction = New ROQ2Transaction()

            'Configure the Create UPS for Quality Check request step
            Dim send As SendScenarioStep = New SendScenarioStep(New QCRActor(), New QCPActor(), True)
            send.AddTransaction(ROQ1transaction)

            'Configure the UPS subscribe request step
            'RO-Q2: UPS subscribe
            send.AddTransaction(ROQ2transaction)

            'Configure the validate response steps ROQ1
            Dim validate1 As ValidateScenarioStep = New ValidateScenarioStep(send, 0)
            'Configure the validate response steps ROQ2
            Dim validate2 As ValidateScenarioStep = New ValidateScenarioStep(send, 1)

            ' apply rules for C-FIND Response ROQ1
            validate1.AddRules(ROQ1transaction.GetCommonTransactionRulesForResponse())
            ' apply rules for C-FIND Response ROQ1
            validate2.AddRules(ROQ2transaction.GetCommonTransactionRulesForResponse())

            'Add the steps to the list
            m_scenarioSteps.Add(send)

            'save message to cache
            'save must be done on both sides of the testtool

            Dim saveStep1 As SaveScenarioStep = New SaveScenarioStep(send, 0, "N-CREATE-RSP")

            'step 1
            m_scenarioSteps.Add(saveStep1)
            m_scenarioSteps.Add(validate1)
            m_scenarioSteps.Add(validate2)

        Catch ex As Exception
            errorDialog.SetMessage(ex.Message)
            errorDialog.ShowDialog()
            Throw ex
        End Try
    End Sub

End Class
