#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Windows.Forms
Imports System.Collections.Generic
#End If

Public Class ResumeTreatmentDialog

    Public m_requestDataset As DvtkHighLevelInterface.Dicom.Other.DataSet
    Public numberOfBeams As Integer
    Public cancelledBeamNumber As Integer

    Private Sub OK_Button_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OK_Button.Click

        If txtBxBundleNumber.Text = "" Or txtBxDosimeterUnit.Text = "" Or txtBxStartMeterset.Text = "" Or txtBxEndMeterset.Text = "" Or txtBxFractionNumber.Text = "" Then
            MessageBox.Show("Not all value's are filled in")
            Me.Show()
        Else
            Dim i As Integer
            cancelledBeamNumber = CInt(txtBxBundleNumber.Text)
            Dim sequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem = New DvtkHighLevelInterface.Dicom.Other.SequenceItem
            Dim datasetPath As String = DataSetHandler.GetDataPath(DataSetHandler.UPSDataXMLFileName)

            m_requestDataset.Delete(Tags.BeamTaskSequence)

            For i = 1 To (numberOfBeams - cancelledBeamNumber) + 1

                If i = 1 Then

                    m_requestDataset.Set(Tags.BeamTaskType, CS, "TREAT")
                    m_requestDataset.Set(Tags.BeamTaskSequenceTreatmentDeliveryType, CS, "CONTINUATION")
                    m_requestDataset.Set(Tags.BeamTaskSequencePrimaryDosimeterUnit, CS, txtBxDosimeterUnit.Text)
                    m_requestDataset.Set(Tags.BeamTaskSequenceContinuationStartMeterset, FD, txtBxStartMeterset.Text)
                    m_requestDataset.Set(Tags.BeamTaskSequenceContinuationEndMeterset, FD, txtBxEndMeterset.Text)
                    'm_requestDataset.Set(Tags.BeamTaskSequenceReferencedRtPlanSequenceStudyInstanceUID, UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.StudyInstanceUID))
                    'm_requestDataset.Set(Tags.BeamTaskSequenceReferencedRtPlanSequenceReferencedSeriesSequenceSeriesInstanceUID, UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SeriesInstanceUID))
                    'm_requestDataset.Set(Tags.BeamTaskSequenceReferencedRtPlanSequenceRSSRSSReferencedSopClassUid, UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SOPClassUID))
                    'm_requestDataset.Set(Tags.BeamTaskSequenceReferencedRtPlanSequenceRSSRSSReferencedSopInstanceUid, UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SOPInstanceUID))
                    m_requestDataset.Set(Tags.CurrentFractionNumber, [IS], txtBxFractionNumber.Text)
                    m_requestDataset.Set(Tags.BeamNumberBeamTask, [IS], txtBxBundleNumber.Text)

                    m_requestDataset.Set(Tags.TableTopVerticalAdjustedPosition, FD, "")
                    m_requestDataset.Set(Tags.TableTopLongitudinalAdjustedPosition, FD, "")
                    m_requestDataset.Set(Tags.TableTopLateralAdjustedPosition, FD, "")
                    m_requestDataset.Set(Tags.PatientSupportAdjustedAngle, FD, "")
                    m_requestDataset.Set(Tags.TableTopEccentricAdjustedAngle, FD, "")
                    m_requestDataset.Set(Tags.TableTopPitchAdjustedAngle, FD, "")
                    m_requestDataset.Set(Tags.TableTopRollAdjustedAngle, FD, "")
                    m_requestDataset.Set(Tags.BeamTaskSequenceTableTopVerticalSetupDisplacement, DS, "")
                    m_requestDataset.Set(Tags.BeamTaskSequenceTableTopLongitudinalSetupDisplacement, DS, "")
                    m_requestDataset.Set(Tags.BeamTaskSequenceTableTopLateralSetupDisplacement, DS, "")

                    m_requestDataset.Set(Tags.ReferencedRTPlanSequence, SQ)
                    m_requestDataset.Set(Tags.ReferencedRtPlanSequenceRSSRSSReferencedSopClassUid, UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SOPClassUID))
                    m_requestDataset.Set(Tags.ReferencedRtPlanSequenceRSSRSSReferencedSopInstanceUid, UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SOPInstanceUID))

                Else

                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamTaskType, i), CS, "TREAT")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamTaskSequenceTreatmentDeliveryType, i), CS, "TREATMENT")
                    'm_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamTaskSequenceReferencedRtPlanSequenceStudyInstanceUID, i), UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.StudyInstanceUID))
                    'm_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamTaskSequenceReferencedRtPlanSequenceReferencedSeriesSequenceSeriesInstanceUID, i), UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SeriesInstanceUID))
                    'm_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamTaskSequenceReferencedRtPlanSequenceRSSRSSReferencedSopClassUid, i), UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SOPClassUID))
                    'm_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamTaskSequenceReferencedRtPlanSequenceRSSRSSReferencedSopInstanceUid, i), UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SOPInstanceUID))
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.CurrentFractionNumber, i), [IS], 1)
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamNumberBeamTask, i), [IS], i)

                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.TableTopVerticalAdjustedPosition, i), FD, "")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.TableTopLongitudinalAdjustedPosition, i), FD, "")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.TableTopLateralAdjustedPosition, i), FD, "")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.PatientSupportAdjustedAngle, i), FD, "")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.TableTopEccentricAdjustedAngle, i), FD, "")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.TableTopPitchAdjustedAngle, i), FD, "")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.TableTopRollAdjustedAngle, i), FD, "")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamTaskSequenceTableTopVerticalSetupDisplacement, i), DS, "")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamTaskSequenceTableTopLongitudinalSetupDisplacement, i), DS, "")
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.BeamTaskSequenceTableTopLateralSetupDisplacement, i), DS, "")

                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.ReferencedRTPlanSequence, i), SQ)
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.ReferencedRtPlanSequenceRSSRSSReferencedSopClassUid, i), UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SOPClassUID))
                    m_requestDataset.Set(Tags.GetTagNameWithCounter(Tags.ReferencedRtPlanSequenceRSSRSSReferencedSopInstanceUid, i), UI, DataSetHandler.GetAttributeValueFromDataSetBySopClassUID(datasetPath, SOPclass.RTPlanDosimetricSOPClassUID, Tags.SOPInstanceUID))
                End If

            Next i

            'save updated data to cached dataset
            DataSetHandler.SaveDatasetToFile(m_requestDataset, DataSetHandler.UPSCacheXMLFileName, "RtBeamDeliv")

            Me.DialogResult = System.Windows.Forms.DialogResult.OK
            Me.Close()
        End If

    End Sub

    Public Sub addMessage(ByVal dataset As DvtkHighLevelInterface.Dicom.Other.DataSet)
        m_requestDataset = dataset
    End Sub

    Public Sub CheckRTPlan()
        'Dim g, o As String
        'Dim i As Integer
        numberOfBeams = m_requestDataset.GetitemCount(Tags.BeamSequence)

        'Dim values As Dicom.Other.Values = m_requestDataset(Tags.BeamSequence).Values()
        'Dim sequenceItem As DvtkHighLevelInterface.Dicom.Other.SequenceItem
        'Dim attribute As DvtkHighLevelInterface.Dicom.Other.Attribute
        'Dim sequence As DvtkData.Dimse.Sequence = m_requestDataset.DvtkDataDataSet.GetSequence(0)
        'Dim tag As DvtkHighLevelInterface.Dicom.Other.Tag = Tags.GetTagName(Tags.TreatmentDeliveryType)

        'Dim p As String = Tags.TreatmentDeliveryType
        'Dim r As String() = p.Split("/"c)
        'g = g + i.ToString() + "]/" + r(1)
        'o = DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSDataXMLFileName, "RTPlan", g)

        'For i = 1 To numberOfBeams
        '    g = Microsoft.VisualBasic.Left(r(0), 11)
        '    g = g + i.ToString() + "]/" + r(1)
        '    o = DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSDataXMLFileName, "RTPlan", g)
        '    If o = "CONTINUATION" Then
        '        cancelledBeamNumber = i
        '        i = numberOfBeams
        '    End If
        'Next

    End Sub

End Class
