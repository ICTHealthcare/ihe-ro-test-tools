#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Collections.Generic
#End If

Class RO62Transaction
    Inherits Transaction

    Private ro62IODType As IODType = Nothing
    Private m_progress As Integer
    Private m_isTheFirstRO62 As Boolean

    'Constructor
    Public Sub New()
        MyBase.New("RO-62", "Treatment Delivery Progress Update", IODType.UnifiedProcedureStepPush, True)
        ro62IODType = IODType.UnifiedProcedureStepPush
        m_progress = -1
        m_isTheFirstRO62 = True
    End Sub

    'Constructor
    Public Sub New(ByVal progress As Integer)

        MyBase.New("RO-62", "Treatment Delivery Progress Update", IODType.UnifiedProcedureStepPush, True)
        ro62IODType = IODType.UnifiedProcedureStepPush
        m_progress = progress
        If m_progress > 0 Then
            m_isTheFirstRO62 = False
        End If

    End Sub


    Private Sub CopyInterOperabilityAttributes(ByVal message As DicomMessage)
        ' Fill  (0x00001001)  Requested SOP Instance UID
        message.CommandSet.Set(Tags.RequestedSOPInstanceUID, UI, DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", Tags.SOPInstanceUID))

        ' Fill  (0x00081195)  Transaction UID
        message.DataSet.Set(Tags.TransactionUID, UI, DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSCacheXMLFileName, "N-ACTION-REQ-RO60", Tags.TransactionUID))

        ' Fill > (0x00404019)  Performed Workitem Code Sequence
        If DataSetHandler.AttributeExistsInDataSet(DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", Tags.ScheduledWorkitemCodeSequence) Then
            ' Fill >> (0x00080100)  Code Value
            message.DataSet.Set(Tags.UPSPerformedProcedurePerformedWorkitemCodeCodeValue, SH, DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", Tags.ScheduledWorkitemCodeValue))
            ' Fill >> (0x00080102)  Coding Scheme Designator
            message.DataSet.Set(Tags.UPSPerformedProcedurePerformedWorkitemCodeCodingSchemeDesignator, SH, DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", Tags.ScheduledWorkitemCodingSchemeDesignator))
            ' Fill >> (0x00080104)  Code Meaning
            message.DataSet.Set(Tags.UPSPerformedProcedurePerformedWorkitemCodeCodeMeaning, LO, DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", Tags.ScheduledWorkitemCodeMeaning))
        End If
    End Sub

    Protected Overrides Function GetTransactionReferenceDataMessages() As System.Collections.ArrayList

        ' Some rules need the dataset used in the request.
        Dim referenceData As ReferenceDataSet = ReferenceDataSet.GetInstance
        referenceData.LoadNewDataSet(DataSetHandler.UPSMessagesXMLFileName)

        Dim datasetMessages As ArrayList = New ArrayList()

        Dim message As DicomMessage = ReferenceDataSet.GetInstance().GetUnifiedProcedureStepPush_NSET_REQ_RO62()
        CopyInterOperabilityAttributes(message)

        ' Set the Requested SOPClassUID 
        message.Set(Tags.RequestedSOPClassUID, UI, SOPclass.UnifiedProcedureStepPushSOPClassUID)

        ' Set Unified Procedure Step Progress
        message.Set(Tags.UPSProgressInformationUnifiedProcedureStepProgress, DS, m_progress.ToString())

        datasetMessages.Add(message)

        Return datasetMessages

    End Function

    Public Function GetCommonTransactionRulesForRequest() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        '(0x00001001)  Requested SOP Instance UID
        m_rules.Add(New InterOperabilityRule(Tags.SOPInstanceUID, Tags.RequestedSOPInstanceUID, DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", ro62IODType, ErrorSeverity.RuleError))

        '(0x00081195)  Transaction UID
        m_rules.Add(New IsRequiredRule(Tags.TransactionUID, ro62IODType, ErrorSeverity.RuleError))
        'Use Transaction UID of RO-60 that is send by tms, this transaction UID is used during the total delivery.
        m_rules.Add(New InterOperabilityRule(Tags.TransactionUID, Tags.TransactionUID, DataSetHandler.UPSCacheXMLFileName, "N-ACTION-REQ-RO60", ro62IODType, ErrorSeverity.RuleError))

        '(0x00404003)  UPS Progress Information Sequence
        m_rules.Add(New IsRequiredRule(Tags.UPSProgressInformationSequence, ro62IODType, ErrorSeverity.RuleError))

        ' > (0x00741004)  Unified Procedure Step Progress
        m_rules.Add(New IsRequiredRule(Tags.UPSProgressInformationUnifiedProcedureStepProgress, ro62IODType, ErrorSeverity.RuleError))

        ' If it is the first RO-62 transaction then the progress should always be 0
        If m_isTheFirstRO62 Then
            m_rules.Add(New ValueRule(Tags.UPSProgressInformationUnifiedProcedureStepProgress, "0", ro62IODType, ErrorSeverity.RuleError))
        Else
            m_rules.Add(New ValueInRangeRule(Tags.UPSProgressInformationUnifiedProcedureStepProgress, 0, 100, ro62IODType, ErrorSeverity.RuleError))
        End If

        ' (0x00741216)  UPS Performed Procedure Sequence
        m_rules.Add(New IsRequiredRule(Tags.UPSPerformedProcedureSequence, ro62IODType, ErrorSeverity.RuleError))

        ' > (0x00741212)  Performed Processing Parameters Sequence
        m_rules.Add(New IsRequiredRule(Tags.UPSPerformedProcedurePerformedProcessingParametersSequence, ro62IODType, ErrorSeverity.RuleError))

        ' >> (0x0040A040)  Value Type
        m_rules.Add(New IsRequiredRule(Tags.UPSPerformedProcedurePerformedProcessingParametersValueType, ro62IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.UPSPerformedProcedurePerformedProcessingParametersValueType, "TEXT", ro62IODType, ErrorSeverity.RuleError))
        ' >>> (0x00080100)  Code Value
        m_rules.Add(New IsRequiredRule(Tags.UPSPerformedProcedurePerformedProcessingParametersConceptNameCodeCodeValue, ro62IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.UPSPerformedProcedurePerformedProcessingParametersConceptNameCodeCodeValue, "121700", ro62IODType, ErrorSeverity.RuleError))
        ' >>> (0x00080102)  Coding Scheme Designator
        m_rules.Add(New IsRequiredRule(Tags.UPSPerformedProcedurePerformedProcessingParametersConceptNameCodeCodingSchemeDesignator, ro62IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.UPSPerformedProcedurePerformedProcessingParametersConceptNameCodeCodingSchemeDesignator, "DCM", ro62IODType, ErrorSeverity.RuleError))
        ' >>> (0x00080104)  Code Meaning
        m_rules.Add(New IsRequiredRule(Tags.UPSPerformedProcedurePerformedProcessingParametersConceptNameCodeCodeMeaning, ro62IODType, ErrorSeverity.RuleError))
        m_rules.Add(New ValueRule(Tags.UPSPerformedProcedurePerformedProcessingParametersConceptNameCodeCodeMeaning, "Referenced Beam Number In Progress", ro62IODType, ErrorSeverity.RuleError))

        ' >> (0x0040A160)  Text Value
        m_rules.Add(New IsRequiredRule(Tags.UPSPerformedProcedurePerformedProcessingParametersTextValue, ro62IODType, ErrorSeverity.RuleError))
        m_rules.Add(New PIMTextValueRule(Tags.UPSPerformedProcedurePerformedProcessingParametersTextValue, ro62IODType, ErrorSeverity.RuleError))

        ' > (0x00404033)  Output Information Sequence
        m_rules.Add(New IsRequiredRule(Tags.UPSPerformedProcedureOutputInformationSequence, ro62IODType, ErrorSeverity.RuleError))
        m_rules.Add(New EmptySequenceRule(Tags.UPSPerformedProcedureOutputInformationSequence, ro62IODType, ErrorSeverity.RuleError))

        ' > (0x00404032)  Non-DICOM Output Information Sequence
        'm_rules.Add(New IsRequiredRule(Tags.UPSPerformedProcedureNonDICOMOutputInformationSequence, ro62IODType, ErrorSeverity.RuleError))
        'm_rules.Add(New EmptySequenceRule(Tags.UPSPerformedProcedureNonDICOMOutputInformationSequence, ro62IODType, ErrorSeverity.RuleError))

        ' > (0x00404019)  Performed Workitem Code Sequence
        'm_rules.Add(New OptionalRule(Tags.UPSPerformedProcedurePerformedWorkitemCodeSequence, ro62IODType, ErrorSeverity.RuleError))
        ' >> (0x00080100)  Code Value
        'm_rules.Add(New ConditionalSequenceRule(Tags.UPSPerformedProcedurePerformedWorkitemCodeSequence, New InterOperabilityRule(Tags.ScheduledWorkitemCodeValue, Tags.UPSPerformedProcedurePerformedWorkitemCodeCodeValue, DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", ro62IODType, ErrorSeverity.RuleError)))
        ' >> (0x00080102)  Coding Scheme Designator
        'm_rules.Add(New ConditionalSequenceRule(Tags.UPSPerformedProcedurePerformedWorkitemCodeSequence, New InterOperabilityRule(Tags.ScheduledWorkitemCodingSchemeDesignator, Tags.UPSPerformedProcedurePerformedWorkitemCodeCodingSchemeDesignator, DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", ro62IODType, ErrorSeverity.RuleError)))
        ' >> (0x00080104)  Code Meaning
        'm_rules.Add(New ConditionalSequenceRule(Tags.UPSPerformedProcedurePerformedWorkitemCodeSequence, New InterOperabilityRule(Tags.ScheduledWorkitemCodeMeaning, Tags.UPSPerformedProcedurePerformedWorkitemCodeCodeMeaning, DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", ro62IODType, ErrorSeverity.RuleError)))

        Return m_rules

    End Function

    Public Function GetCommonTransactionRulesForResponse() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        ' Some rules need the dicomMessage send in the request

        '(0x00000900)  Status '0'= Succcess
        m_rules.Add(New ValueRule(Tags.StatusCommandElement, "0", ro62IODType, ErrorSeverity.RuleError))

        ' (0x00000002) Affected SOP Class UID

        m_rules.Add(New ValueRule(Tags.AffectedSOPClassUID, SOPclass.UnifiedProcedureStepPushSOPClassUID, ro62IODType, ErrorSeverity.RuleError))
        '(0x00001000)  Affected SOP Instance UID
        m_rules.Add(New IsRequiredRule(Tags.AffectedSOPInstanceUID, ro62IODType, ErrorSeverity.RuleError))
        m_rules.Add(New InterOperabilityRule(Tags.SOPInstanceUID, Tags.AffectedSOPInstanceUID, DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP", ro62IODType, ErrorSeverity.RuleError))


        ''(0x00081195)  Transaction UID
        'm_rules.Add(New IsRequiredRule(Tags.TransactionUID, ro62IODType, ErrorSeverity.RuleError))
        ''Use Transaction UID of RO-60 that is send by tms, this transaction UID is used during the total delivery.
        'm_rules.Add(New InterOperabilityRule(Tags.TransactionUID, Tags.TransactionUID, DataSetHandler.UPSCacheXMLFileName, "N-ACTION-REQ-RO60", ro62IODType, ErrorSeverity.RuleError))
        Return m_rules

    End Function

End Class
