Class TMSDeliverCancelScenario
    Inherits Scenario

    'Constructor
    Public Sub New()
        Dim tddActor As TDDActor = New TDDActor
        Dim tmsActor As TMSActor = New TMSActor
        Dim ostActor As OSTActor = New OSTActor
        Dim errorDialog As ErrorDialog = New ErrorDialog()
        Dim radiationDialog As RadiationDeliveryDialog = New RadiationDeliveryDialog(True)

        Try
            ' Check if dataset is present
            DataSetHandler.CheckUpsDataSets()

            'Check if RO-60 Response is present in the cache directory, if not then stop execution and inform the user (in the validation results)
            Try
                DataSetHandler.CheckUPSMessageExists(DataSetHandler.UPSCacheXMLFileName, "N-ACTION-RSP-RO60")
            Catch ex As Exception
                Dim errorMessage As String = "First run the 'TDD Deliver initialization testscenario', at least once."
                errorDialog.SetMessage(errorMessage)
                errorDialog.ShowDialog()
                Throw ex
            End Try

            'Check if the C-Find is present in cache directory
            DataSetHandler.CheckUPSMessageExists(DataSetHandler.UPSCacheXMLFileName, "C-FIND-RSP")

            'Remove the N-Set response (RO-62) if present from the cache directory
            Try
                DataSetHandler.DeleteDatasetFile(DataSetHandler.UPSCacheXMLFileName, "N-SET-RSP-RO62")
            Catch ex As Exception
                'do nothing - if not present everything is fine
            End Try

            'scenario dataset
            m_scenarioDatasetXmlFileName = DataSetHandler.UPSDataXMLFileName

            radiationDialog.ShowDialog()

            ' Create transactions used in both scenario flows
            Dim ro64transaction As RO64Transaction = New RO64Transaction(True)
            Dim ro65transaction As RO65Transaction = New RO65Transaction(True)

            ' Create senders used in both scenario flows
            Dim sendRO64 As SendScenarioStep = New SendScenarioStep(tddActor, tmsActor, True)
            Dim sendRO65 As SendScenarioStep = New SendScenarioStep(tddActor, tmsActor, True)
            sendRO64.AddTransaction(ro64transaction)  ' RO-64: Treatment Delivery Final Update
            sendRO65.AddTransaction(ro65transaction)  ' RO-65: Treatment Delivery Completed/Canceled

            'Configure the validate step for RO-64
            Dim validateRO64 As ValidateScenarioStep = New ValidateScenarioStep(sendRO64)
            'Configure the validate step for RO-65
            Dim validateRO65 As ValidateScenarioStep = New ValidateScenarioStep(sendRO65)
            validateRO64.AddRules(ro64transaction.GetCommonTransactionRulesForResponse())
            validateRO65.AddRules(ro65transaction.GetCommonTransactionRulesForResponse())

            If radiationDialog.Delivered Then
                Dim ro62transaction_0 As RO62Transaction = New RO62Transaction(0)    '(progress = 0%)
                Dim ro62transaction_UserDefined As RO62Transaction = New RO62Transaction(radiationDialog.Percentage)
                Dim ro63transaction As RO63Transaction = New RO63Transaction(True)

                ' RO-62: Treatment Delivery Progress Update (progress = 0%)
                Dim sendRO62_0 As SendScenarioStep = New SendScenarioStep(tddActor, tmsActor, True)
                ' RO-62: Treatment Delivery Progress Update (progress = user defined)
                Dim sendRO62_UserDefined As SendScenarioStep = New SendScenarioStep(tddActor, tmsActor, True)
                Dim sendRO63 As SendScenarioStep = New SendScenarioStep(tddActor, ostActor, True)

                ' Create senders used only for the flow: with radiation
                sendRO62_0.AddTransaction(ro62transaction_0)
                sendRO62_UserDefined.AddTransaction(ro62transaction_UserDefined)
                sendRO63.AddTransaction(ro63transaction)  ' RO-63: Treatment Delivery Store Results

                'Add the send steps to the list
                m_scenarioSteps.Add(sendRO62_0)
                m_scenarioSteps.Add(sendRO62_UserDefined)
                m_scenarioSteps.Add(sendRO63)
                m_scenarioSteps.Add(sendRO64)
                m_scenarioSteps.Add(sendRO65)

                'Configure the validate step for RO-62 (progress 0%)
                Dim validateRO62_0 As ValidateScenarioStep = New ValidateScenarioStep(sendRO62_0)
                'Configure the validate step for RO-62 (user defined progress)
                Dim validateRO62_UserDefined As ValidateScenarioStep = New ValidateScenarioStep(sendRO62_UserDefined)
                'Configure the validate step for RO-63
                Dim validateRO63 As ValidateScenarioStep = New ValidateScenarioStep(sendRO63)

                validateRO62_0.AddRules(ro62transaction_0.GetCommonTransactionRulesForResponse())
                validateRO62_UserDefined.AddRules(ro62transaction_UserDefined.GetCommonTransactionRulesForResponse())
                validateRO63.AddRules(ro63transaction.GetCommonTransactionRulesForResponse())

                'Add the validate steps to the list
                m_scenarioSteps.Add(validateRO62_0)
                m_scenarioSteps.Add(validateRO62_UserDefined)
                m_scenarioSteps.Add(validateRO63)
                m_scenarioSteps.Add(validateRO64)
                m_scenarioSteps.Add(validateRO65)

            Else
                'Add the send steps to the list
                m_scenarioSteps.Add(sendRO64)
                m_scenarioSteps.Add(sendRO65)

                'Add the validate steps to the list
                m_scenarioSteps.Add(validateRO64)
                m_scenarioSteps.Add(validateRO65)
            End If

        Catch ex As Exception
            errorDialog.SetMessage(ex.Message)
            errorDialog.ShowDialog()
            Throw ex
        End Try

    End Sub
End Class
