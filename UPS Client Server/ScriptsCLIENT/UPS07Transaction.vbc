#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Collections.Generic
#End If

Class UPS07Transaction
    Inherits Transaction

    Private m_procedureStep As ProcedureStep
    Private ups07IODType As IODType = Nothing
    Private _isCompleted As Boolean
    Private m_SOPInstanceUID As String
    Private m_customSOPClassUID, m_customSOPInstanceUID, m_customActionTypeID, m_customProcedureStepState, m_customTransactionUID As String

    'Constructor
    Public Sub New(ByVal isCompleted As Boolean, ByVal clearMessageDataAfterSend As Boolean, ByVal SOPInstanceUID As String)

        MyBase.New("UPS-07", "UPS Completed/Canceleled", IODType.UnifiedProcedureStepPush, clearMessageDataAfterSend)
        ups07IODType = IODType.UnifiedProcedureStepPush
        _isCompleted = isCompleted
        m_SOPInstanceUID = SOPInstanceUID
        m_customSOPClassUID = Nothing
        m_customSOPInstanceUID = Nothing
        m_customActionTypeID = Nothing
        m_customProcedureStepState = Nothing
        m_customTransactionUID = Nothing
    End Sub

    Public Sub New(ByVal isCompleted As Boolean, ByVal clearMessageDataAfterSend As Boolean, ByVal SOPInstanceUID As String, ByVal customSOPClassUID As String, ByVal customSOPInstanceUID As String, ByVal customActionTypeID As String, ByVal customProcedureStepState As String, ByVal customTransactionUID As String)

        MyBase.New("UPS-07", "UPS Completed/Canceleled", IODType.UnifiedProcedureStepPush, clearMessageDataAfterSend)
        ups07IODType = IODType.UnifiedProcedureStepPush
        _isCompleted = isCompleted
        m_SOPInstanceUID = SOPInstanceUID
        m_customSOPClassUID = customSOPClassUID
        m_customSOPInstanceUID = customSOPInstanceUID
        m_customActionTypeID = customActionTypeID
        m_customProcedureStepState = customProcedureStepState
        m_customTransactionUID = customTransactionUID
    End Sub

    Protected Overrides Function GetTransactionReferenceDataMessages() As System.Collections.ArrayList
        Dim datasetMessages As ArrayList = New ArrayList()

        Dim currentAutomaticTestXMLfile As New System.Xml.XmlDocument()
        Try
            currentAutomaticTestXMLfile.Load(TestToolConfiguration.GetInstance().GetScriptPath() + ReferenceDataSet.GetInstance().getCurrentAutomaticTestXMLFileName)
        Catch ex As Exception
            currentAutomaticTestXMLfile = Nothing
            Reporter.GetInstance().ReportDebugMessage("Automatic test scenario not loaded")
        End Try

        If (m_SOPInstanceUID = "") Then

            Dim selectUPSForm As SelectUPS = New SelectUPS(True)
            selectUPSForm.DataGridUPS.MultiSelect = False
            selectUPSForm.SetUPSInProgress.Text = "Send N-Action-RQ with COMPLETED/CANCELED status to selected UPS"
            selectUPSForm.responseDataSets = ReferenceDataSet.GetInstance.GetCacheCFind_Responses()

            selectUPSForm.ShowDialog()

            If selectUPSForm.DialogResult = Windows.Forms.DialogResult.OK Then

                For Each DataRow As DataGridViewRow In selectUPSForm.UPSDataGridView.Rows

                    If (DataRow.Selected) Then

                        Dim SOPInstanceUID As String = DataRow.Cells("SopInstanceUIDColumn").Value.ToString()

                        If Not (String.IsNullOrEmpty(SOPInstanceUID)) Then


                            ' Make the N-ACTION-RQ message
                            Dim message As DicomMessage = New DicomMessage(NACTIONRQ)

                            ' Set the Requested SOPClassUID 
                            message.Set(Tags.RequestedSOPClassUID, UI, SOPclass.UnifiedProcedureStepPushSOPClassUID)

                            ' Set the Requested SOP Instance UID
                            message.Set(Tags.RequestedSOPInstanceUID, UI, SOPInstanceUID)

                            ' ActionType ID
                            message.Set(Tags.ActionTypeID, US, "1")

                            'Set Unified Procedure Step State 

                            If _isCompleted Then

                                message.Set(Tags.ProcedureStepState, CS, "COMPLETED")
                            Else
                                message.Set(Tags.ProcedureStepState, CS, "CANCELED")
                            End If


                            If Not (String.IsNullOrEmpty(ReferenceDataSet.GetInstance.getTrainsactionUIDUPS(SOPInstanceUID))) Then
                                ' Transaction UID
                                message.DataSet.Set(Tags.TransactionUID, UI, ReferenceDataSet.GetInstance.getTrainsactionUIDUPS(SOPInstanceUID))

                                datasetMessages.Add(message)
                            Else
                                Logger.GetInstance().LogErrorMessage(String.Format("Selected UPS has not an Transaction UID"))
                            End If

                            If Not currentAutomaticTestXMLfile Is Nothing Then

                                Dim ScenarioNode As System.Xml.XmlNode = currentAutomaticTestXMLfile.CreateNode("element", "Scenario", "")
                                Dim nameAttr As System.Xml.XmlAttribute = currentAutomaticTestXMLfile.CreateAttribute("Name")
                                nameAttr.Value = "SendUPSCompletedOrCanceled"
                                ScenarioNode.Attributes.Append(nameAttr)

                                Dim TemplateNode As System.Xml.XmlNode = currentAutomaticTestXMLfile.CreateNode("element", "isCompleted", "")
                                TemplateNode.InnerText = _isCompleted.ToString()
                                ScenarioNode.AppendChild(TemplateNode)

                                currentAutomaticTestXMLfile.SelectSingleNode("//Scenarios").AppendChild(ScenarioNode)
                                currentAutomaticTestXMLfile.Save(TestToolConfiguration.GetInstance().GetScriptPath() + ReferenceDataSet.GetInstance().getCurrentAutomaticTestXMLFileName)
                            End If


                        Else
                            Logger.GetInstance().LogErrorMessage(String.Format("Selected UPS has not an SOP Instance UID"))
                        End If
                    End If
                Next

            Else
                ' cancel scenario
            End If
        Else
            ' Make the N-ACTION-RQ message
            Dim message As DicomMessage = New DicomMessage(NACTIONRQ)

            ' Set the Requested SOPClassUID 
            If m_customSOPClassUID Is Nothing Then
                message.Set(Tags.RequestedSOPClassUID, UI, SOPclass.UnifiedProcedureStepPushSOPClassUID)
            Else
                message.Set(Tags.RequestedSOPClassUID, UI, m_customSOPClassUID)
            End If

            ' Set the Requested SOP Instance UID
            If m_customSOPInstanceUID Is Nothing Then
                message.Set(Tags.RequestedSOPInstanceUID, UI, m_SOPInstanceUID)
            Else
                message.Set(Tags.RequestedSOPInstanceUID, UI, m_customSOPInstanceUID)
            End If

            ' ActionType ID
            If m_customActionTypeID Is Nothing Then
                message.Set(Tags.ActionTypeID, US, "1")
            Else
                message.Set(Tags.ActionTypeID, US, m_customActionTypeID)
            End If


            'Set Unified Procedure Step State 
            If m_customProcedureStepState Is Nothing Then
                If _isCompleted Then

                    message.Set(Tags.ProcedureStepState, CS, "COMPLETED")
                Else
                    message.Set(Tags.ProcedureStepState, CS, "CANCELED")
                End If
            Else
                message.Set(Tags.ProcedureStepState, CS, m_customProcedureStepState)
            End If


            If Not currentAutomaticTestXMLfile Is Nothing Then
                ' Transaction UID
                If m_customTransactionUID Is Nothing Then
                    message.DataSet.Set(Tags.TransactionUID, UI, currentAutomaticTestXMLfile.SelectSingleNode("//Scenarios/UPSTransactionUID").InnerText)
                Else
                    message.Set(Tags.TransactionUID, UI, m_customTransactionUID)
                End If

                datasetMessages.Add(message)
            Else
                Logger.GetInstance().LogErrorMessage(String.Format("Used UPS has not an Transaction UID"))
            End If

        End If
        Return datasetMessages


    End Function

    ' This function returns all common rules that apply on a response of this transaction
    Public Function GetCommonTransactionRulesForResponse() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        ' Some rules need the dicomMessage send in the request
        Dim msg As ArrayList = DirectCast(TransactionDataMessages, ArrayList)

        '(0x00000900)  Status
        m_rules.Add(New UpdateClientUPSRule(Tags.StatusCommandElement, "0", msg, ups07IODType, ErrorSeverity.RuleError))

        Return m_rules

    End Function


End Class
