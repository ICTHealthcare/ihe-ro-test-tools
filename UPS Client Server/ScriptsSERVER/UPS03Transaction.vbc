#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Collections.Generic
#End If

Class UPS03Transaction
    Inherits Transaction

    Private ups03IODType As IODType = Nothing
    Private countSelectedUPSes As Integer = 0
    Private m_useAutomaticTesting As Boolean
    Private m_customSOPClassUID, m_customSOPInstanceUID, m_customActionTypeID, m_customProcedureStepState, m_customTransactionUID As String

    'Constructor
    Public Sub New()
        MyClass.New(True, False)
    End Sub

    'Constructor
    Public Sub New(ByVal clearMessageDataAfterSend As Boolean, ByVal useAutomaticTesting As Boolean)
        MyBase.New("UPS-03", "UPS in progress", IODType.UnifiedProcedureStepPull, clearMessageDataAfterSend)
        ups03IODType = IODType.UnifiedProcedureStepPull
        m_useAutomaticTesting = useAutomaticTesting
        m_customSOPClassUID = Nothing
        m_customSOPInstanceUID = Nothing
        m_customActionTypeID = Nothing
        m_customProcedureStepState = Nothing
        m_customTransactionUID = Nothing
    End Sub

    Public Sub New(ByVal clearMessageDataAfterSend As Boolean, ByVal useAutomaticTesting As Boolean, ByVal customSOPClassUID As String, ByVal customSOPInstanceUID As String, ByVal customActionTypeID As String, ByVal customProcedureStepState As String, ByVal customTransactionUID As String)
        MyBase.New("UPS-03", "UPS in progress", IODType.UnifiedProcedureStepPull, clearMessageDataAfterSend)
        ups03IODType = IODType.UnifiedProcedureStepPull
        m_useAutomaticTesting = useAutomaticTesting
        m_customSOPClassUID = customSOPClassUID
        m_customSOPInstanceUID = customSOPInstanceUID
        m_customActionTypeID = customActionTypeID
        m_customProcedureStepState = customProcedureStepState
        m_customTransactionUID = customTransactionUID
    End Sub

    Protected Overrides Function GetTransactionReferenceDataMessages() As System.Collections.ArrayList
        Dim datasetMessages As ArrayList = New ArrayList()

        Dim currentAutomaticTestXMLfile As New System.Xml.XmlDocument()
        Try
            currentAutomaticTestXMLfile.Load(TestToolConfiguration.GetInstance().GetScriptPath() + ReferenceDataSet.GetInstance().getCurrentAutomaticTestXMLFileName)
        Catch ex As Exception
            currentAutomaticTestXMLfile = Nothing
            Reporter.GetInstance().ReportDebugMessage("Automatic test scenario not loaded")
        End Try

        If Not (m_useAutomaticTesting) Then

            Dim selectUPSForm As SelectUPS = New SelectUPS(True)

            selectUPSForm.responseDataSets = ReferenceDataSet.GetInstance.GetCacheCFind_Responses()

            selectUPSForm.ShowDialog()

            If selectUPSForm.DialogResult = Windows.Forms.DialogResult.OK Then

                For Each DataRow As DataGridViewRow In selectUPSForm.UPSDataGridView.Rows

                    If (DataRow.Selected) Then

                        Dim SOPInstanceUID As String = DataRow.Cells("SopInstanceUIDColumn").Value.ToString()

                        If Not (String.IsNullOrEmpty(SOPInstanceUID)) Then
                            ' Make the N-ACTION-RQ message
                            Dim message As DicomMessage = New DicomMessage(NACTIONRQ)

                            ' Set the Requested SOPClassUID 
                            message.Set(Tags.RequestedSOPClassUID, UI, SOPclass.UnifiedProcedureStepPushSOPClassUID)

                            ' Set the Requested SOP Instance UID
                            message.Set(Tags.RequestedSOPInstanceUID, UI, SOPInstanceUID)

                            ' ActionType ID
                            message.Set(Tags.ActionTypeID, US, "1")

                            'Set Unified Procedure Step State to "IN PROGRESS"
                            message.Set(Tags.ProcedureStepState, CS, "IN PROGRESS")

                            ' Transaction UID
                            Dim transactionUID As String = DvtkHighLevelInterface.Dicom.Other.UID.Create()
                            message.Set(Tags.TransactionUID, UI, transactionUID)


                            'ReferenceDataSet.GetInstance.UpdateCacheCFind_Response(SOPInstanceUID, message)

                            If Not currentAutomaticTestXMLfile Is Nothing Then
                                Dim ScenarioNode As System.Xml.XmlNode = currentAutomaticTestXMLfile.CreateNode("element", "Scenario", "")
                                Dim nameAttr As System.Xml.XmlAttribute = currentAutomaticTestXMLfile.CreateAttribute("Name")
                                nameAttr.Value = "SendUPSInProgress"
                                ScenarioNode.Attributes.Append(nameAttr)

                                currentAutomaticTestXMLfile.SelectSingleNode("//Scenarios").AppendChild(ScenarioNode)

                                currentAutomaticTestXMLfile.Save(TestToolConfiguration.GetInstance().GetScriptPath() + ReferenceDataSet.GetInstance().getCurrentAutomaticTestXMLFileName)
                            End If

                            datasetMessages.Add(message)

                        Else
                            Logger.GetInstance().LogErrorMessage(String.Format("Selected UPS has not an SOP Instance UID"))
                        End If

                    End If

                Next
            Else
                ' cancel scenario
            End If

        Else

            If Not currentAutomaticTestXMLfile Is Nothing Then
                ' Make the N-ACTION-RQ message
                Dim message As DicomMessage = New DicomMessage(NACTIONRQ)

                ' Set the Requested SOPClassUID 
                If m_customSOPClassUID Is Nothing Then
                    message.Set(Tags.RequestedSOPClassUID, UI, SOPclass.UnifiedProcedureStepPushSOPClassUID)
                Else
                    message.Set(Tags.RequestedSOPClassUID, UI, m_customSOPClassUID)
                End If

                ' Set the Requested SOP Instance UID
                If m_customSOPInstanceUID Is Nothing Then
                    message.Set(Tags.RequestedSOPInstanceUID, UI, currentAutomaticTestXMLfile.SelectSingleNode("//Scenarios/UPSSOPInstanceUID").InnerText)
                Else
                    message.Set(Tags.RequestedSOPInstanceUID, UI, m_customSOPInstanceUID)
                End If

                ' ActionType ID
                If m_customActionTypeID Is Nothing Then
                    message.Set(Tags.ActionTypeID, US, "1")
                Else
                    message.Set(Tags.ActionTypeID, US, m_customActionTypeID)
                End If

                'Set Unified Procedure Step State to "IN PROGRESS"
                If m_customProcedureStepState Is Nothing Then
                    message.Set(Tags.ProcedureStepState, CS, "IN PROGRESS")
                Else
                    message.Set(Tags.ProcedureStepState, CS, m_customProcedureStepState)
                End If

                ' Transaction UID
                If m_customTransactionUID Is Nothing Then
                    Dim transactionUID As String = DvtkHighLevelInterface.Dicom.Other.UID.Create()
                    message.Set(Tags.TransactionUID, UI, transactionUID)
                    currentAutomaticTestXMLfile.SelectSingleNode("//Scenarios/UPSTransactionUID").InnerText = transactionUID
                    currentAutomaticTestXMLfile.Save(TestToolConfiguration.GetInstance().GetScriptPath() + ReferenceDataSet.GetInstance().getCurrentAutomaticTestXMLFileName)
                Else
                    message.Set(Tags.TransactionUID, UI, m_customTransactionUID)
                End If

                datasetMessages.Add(message)

            Else
                Logger.GetInstance().LogErrorMessage(String.Format("First run the Create UPS or the WorklistQuery scenario, now not a UPS available on the server"))
            End If
        End If

        Return datasetMessages

    End Function


    ' This function returns all common rules that apply on a response of this transaction
    Public Function GetCommonTransactionRulesForResponse() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        ' Some rules need the dicomMessage send in the request
        Dim msg As ArrayList = DirectCast(TransactionDataMessages, ArrayList)

        '(0x00000900)  Status
        m_rules.Add(New UpdateClientUPSRule(Tags.StatusCommandElement, "0", msg, ups03IODType, ErrorSeverity.RuleError))

        Return m_rules

    End Function

End Class
