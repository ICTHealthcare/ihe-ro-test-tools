Public Class SelectUPS
    Public responseDataSets As DvtkHighLevelInterface.Dicom.Other.DataSetCollection
    Public UPSDataGridView As DataGridView
    Public selectedDataGridRows As DataGridViewRowCollection
    Private Sub SelectUPS_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        loadTable()

    End Sub

    Private Sub loadTable()
        For Each dataSet As DvtkHighLevelInterface.Dicom.Other.DataSet In responseDataSets
            If (dataSet.Exists(Tags.UPSProgressInformationSequence)) Then
                If (dataSet(Tags.UPSProgressInformationSequence).ItemCount() > 0 And dataSet(Tags.ScheduledProcessingParametersSequence).ItemCount() > 0) Then
                    If (dataSet.Exists(Tags.UPSProgressInformationUnifiedProcedureStepProgress) And dataSet.Exists(Tags.ScheduledProcessingParametersTextValue)) Then
                        DataGridUPS.Rows.Add(New String() {dataSet(Tags.PatientID).Values(0), dataSet(Tags.PatientName).Values(0), dataSet(Tags.ProcedureStepState).Values(0), dataSet(Tags.ProcedureStepLabel).Values(0), dataSet(Tags.SOPInstanceUID).Values(0), dataSet(Tags.ScheduledWorkitemCodeValue).Values(0), dataSet(Tags.ScheduledWorkitemCodeMeaning).Values(0), dataSet(Tags.UPSProgressInformationUnifiedProcedureStepProgress).Values(0), dataSet(Tags.ScheduledProcessingParametersTextValue).Values(0)})
                    ElseIf (dataSet.Exists(Tags.UPSProgressInformationUnifiedProcedureStepProgress)) Then
                        DataGridUPS.Rows.Add(New String() {dataSet(Tags.PatientID).Values(0), dataSet(Tags.PatientName).Values(0), dataSet(Tags.ProcedureStepState).Values(0), dataSet(Tags.ProcedureStepLabel).Values(0), dataSet(Tags.SOPInstanceUID).Values(0), dataSet(Tags.ScheduledWorkitemCodeValue).Values(0), dataSet(Tags.ScheduledWorkitemCodeMeaning).Values(0), dataSet(Tags.UPSProgressInformationUnifiedProcedureStepProgress).Values(0), "-"})
                    ElseIf (dataSet.Exists(Tags.ScheduledProcessingParametersTextValue)) Then
                        DataGridUPS.Rows.Add(New String() {dataSet(Tags.PatientID).Values(0), dataSet(Tags.PatientName).Values(0), dataSet(Tags.ProcedureStepState).Values(0), dataSet(Tags.ProcedureStepLabel).Values(0), dataSet(Tags.SOPInstanceUID).Values(0), dataSet(Tags.ScheduledWorkitemCodeValue).Values(0), dataSet(Tags.ScheduledWorkitemCodeMeaning).Values(0), "-", dataSet(Tags.ScheduledProcessingParametersTextValue).Values(0)})
                    Else
                        DataGridUPS.Rows.Add(New String() {dataSet(Tags.PatientID).Values(0), dataSet(Tags.PatientName).Values(0), dataSet(Tags.ProcedureStepState).Values(0), dataSet(Tags.ProcedureStepLabel).Values(0), dataSet(Tags.SOPInstanceUID).Values(0), dataSet(Tags.ScheduledWorkitemCodeValue).Values(0), dataSet(Tags.ScheduledWorkitemCodeMeaning).Values(0), "-", "-"})
                    End If
                ElseIf dataSet(Tags.UPSProgressInformationSequence).ItemCount() > 0 Then
                    DataGridUPS.Rows.Add(New String() {dataSet(Tags.PatientID).Values(0), dataSet(Tags.PatientName).Values(0), dataSet(Tags.ProcedureStepState).Values(0), dataSet(Tags.ProcedureStepLabel).Values(0), dataSet(Tags.SOPInstanceUID).Values(0), dataSet(Tags.ScheduledWorkitemCodeValue).Values(0), dataSet(Tags.ScheduledWorkitemCodeMeaning).Values(0), dataSet(Tags.UPSProgressInformationUnifiedProcedureStepProgress).Values(0), "-"})
                ElseIf dataSet(Tags.ScheduledProcessingParametersSequence).ItemCount() > 0 Then
                    DataGridUPS.Rows.Add(New String() {dataSet(Tags.PatientID).Values(0), dataSet(Tags.PatientName).Values(0), dataSet(Tags.ProcedureStepState).Values(0), dataSet(Tags.ProcedureStepLabel).Values(0), dataSet(Tags.SOPInstanceUID).Values(0), dataSet(Tags.ScheduledWorkitemCodeValue).Values(0), dataSet(Tags.ScheduledWorkitemCodeMeaning).Values(0), "-", dataSet(Tags.ScheduledProcessingParametersTextValue).Values(0)})
                End If
            ElseIf dataSet(Tags.ScheduledProcessingParametersSequence).ItemCount() > 0 Then
                DataGridUPS.Rows.Add(New String() {dataSet(Tags.PatientID).Values(0), dataSet(Tags.PatientName).Values(0), dataSet(Tags.ProcedureStepState).Values(0), dataSet(Tags.ProcedureStepLabel).Values(0), dataSet(Tags.SOPInstanceUID).Values(0), dataSet(Tags.ScheduledWorkitemCodeValue).Values(0), dataSet(Tags.ScheduledWorkitemCodeMeaning).Values(0), "-", dataSet(Tags.ScheduledProcessingParametersTextValue).Values(0)})
            Else
                DataGridUPS.Rows.Add(New String() {dataSet(Tags.PatientID).Values(0), dataSet(Tags.PatientName).Values(0), dataSet(Tags.ProcedureStepState).Values(0), dataSet(Tags.ProcedureStepLabel).Values(0), dataSet(Tags.SOPInstanceUID).Values(0), dataSet(Tags.ScheduledWorkitemCodeValue).Values(0), dataSet(Tags.ScheduledWorkitemCodeMeaning).Values(0), "-", "-"})
            End If
        Next
    End Sub

    Private Sub SetUPSInProgress_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SetUPSInProgress.Click

        UPSDataGridView = DataGridUPS

        Me.DialogResult = Windows.Forms.DialogResult.OK
        Me.Close()

    End Sub

    Private Sub btnDeleteSelectedUPS_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDeleteSelectedUPS.Click
        For Each selectedDataGridRow As DataGridViewRow In DataGridUPS.SelectedRows
            Dim SOPInstanceUID As String = selectedDataGridRow.Cells(4).Value
            ReferenceDataSet.GetInstance().DeleteSelectedClientUPS(SOPInstanceUID)

        Next

        Me.DataGridUPS.Rows.Clear()
        responseDataSets = ReferenceDataSet.GetInstance.GetCacheCFind_Responses()
        loadTable()
    End Sub

    Private Sub btnDeleteAll_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDeleteAll.Click
        ReferenceDataSet.GetInstance().deleteAllClientCacheFiles()
        Me.DataGridUPS.Rows.Clear()
        responseDataSets = ReferenceDataSet.GetInstance.GetCacheCFind_Responses()
        loadTable()
    End Sub

    Private Sub ShellExecute(ByVal File As Object)
        Dim myProcess As New System.Diagnostics.Process
        myProcess.StartInfo.FileName = File
        myProcess.StartInfo.UseShellExecute = True
        myProcess.StartInfo.RedirectStandardOutput = False
        myProcess.Start()
        myProcess.Dispose()

    End Sub

    Private Sub btnOpenSelectedUPS_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnOpenSelectedUPS.Click
        For Each selectedDataGridRow As DataGridViewRow In DataGridUPS.SelectedRows
            Dim SOPInstanceUID As String = selectedDataGridRow.Cells(4).Value
            Dim File As Object = ReferenceDataSet.GetInstance().GetSelectedClientUPSFilename(SOPInstanceUID)

            Dim Thread1 As New System.Threading.Thread( _
            AddressOf ShellExecute)

            Thread1.Start(File)
        Next

    End Sub
End Class
